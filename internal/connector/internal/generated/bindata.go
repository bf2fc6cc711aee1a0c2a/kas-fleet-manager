// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package generated generated by go-bindata.// sources:
// .generate/openapi/connector_mgmt.yaml
package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _connector_mgmtYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x7d\x73\xdb\x38\x92\xf7\xff\xfa\x14\xfd\x68\x9e\x2d\xef\xde\xd9\x92\xfc\x92\x64\xa2\xba\x4c\x95\x63\x3b\x19\xcf\x24\x4e\xc6\x2f\x93\xc9\x6e\x4d\x59\x10\xd9\x92\x10\x91\x00\x0d\x80\xb2\x95\xbd\xfd\xee\x57\x00\x48\xf1\x5d\xa2\x6c\x4f\xec\x24\x74\x55\xaa\x22\x12\x68\x34\x1a\x8d\x5f\x37\x1a\x0d\x90\x07\xc8\x48\x40\xfb\xb0\xdb\xe9\x75\x7a\xf0\x03\x30\x44\x17\xd4\x84\x4a\x20\x12\x46\x54\x48\x05\x1e\x65\x08\x8a\x03\xf1\x3c\x7e\x0d\x92\xfb\x08\xc7\x87\x47\x52\x3f\x9a\x32\x7e\x6d\x4b\xeb\x0a\x0c\x22\x72\xe0\x72\x27\xf4\x91\xa9\x4e\xeb\x07\xd8\xf7\x3c\x40\xe6\x06\x9c\x32\x25\xc1\xc5\x11\x65\xe8\xc2\x04\x05\xc2\x35\xf5\x3c\x18\x22\xb8\x54\x3a\x7c\x86\x82\x0c\x3d\x84\xe1\x5c\xb7\x04\xa1\x44\x21\x3b\x70\x3c\x02\x65\xca\xea\x06\x22\xee\x38\x4c\x11\x03\xcb\x49\x42\xb9\x1d\x08\x3a\x23\x0a\xdb\x9b\x40\x5c\xdd\x07\xf4\x75\x51\x35\x41\x68\x4f\x89\xdc\x1a\x79\x88\x6a\xcb\x27\x8c\x8c\x51\x6c\x45\x85\x3b\x73\xe2\x7b\x6d\x18\x51\x0f\x5b\x94\x8d\x78\xbf\x05\xa0\xa8\xf2\xb0\x0f\x07\x9c\x31\x74\x14\x17\x70\x86\x62\x46\x1d\x84\x57\x9a\x02\xbc\xb5\x14\x5a\x00\x33\x14\x92\x72\xd6\x87\x5e\xa7\xd7\xd9\x6d\x01\xb8\x28\x1d\x41\x03\x65\x1e\xae\xa8\x6f\x3b\x74\x8a\x52\xc1\xfe\xfb\x63\xcd\xa9\x65\x0d\x9c\xb8\x9e\xec\xb4\x24\x0a\xdd\x88\xe6\x6a\x0b\x42\xe1\xf5\x61\xa2\x54\x20\xfb\xdd\x2e\x09\x68\x47\x4b\x5b\x4e\xe8\x48\x75\x1c\xee\xb7\x00\x72\x0c\xbc\x25\x94\xc1\xdf\x03\xc1\xdd\xd0\xd1\x4f\xfe\x01\x96\x5c\x39\x31\xa9\xc8\x18\x57\x91\x3c\x53\x64\x4c\xd9\xb8\x94\x50\xbf\xdb\xf5\xb8\x43\xbc\x09\x97\xaa\xff\x63\xaf\xd7\x2b\x56\x5f\xbc\x4f\x6a\x76\x8b\xa5\x9c\x50\x08\x64\x0a\x5c\xee\x13\xca\x5a\x8a\x8c\x23\x01\x30\xe2\x67\xc6\xe5\x7c\x1e\xa0\x2c\xd6\x6f\xb7\xcb\x4a\xd7\x2e\x08\x07\x5e\x28\x15\x56\x54\x68\x05\x44\x4d\x0c\x3f\x3f\xe8\x7f\x70\x3e\x41\x89\x40\x04\x1a\x45\x5b\x8c\x1d\x08\xf4\x88\x42\x57\x8f\xad\x8c\x0a\xb7\xb5\x9c\xbb\x8b\x22\x97\xfe\xd8\x57\xdd\xd9\x76\x77\x4a\x46\x53\x72\x99\x3c\x57\xba\x5b\xdd\x7f\x67\x1f\x5c\x52\xf7\x3f\xed\xbe\x61\x29\x20\x82\xf8\xa8\x22\xbd\xd0\x7f\x71\x1f\x0a\x55\xa2\xf7\xb9\x6e\x9c\x4f\x10\xa8\x0b\x7c\x94\xe3\x59\x57\x5a\xd4\x90\xce\x04\x7d\xd2\x5f\xfc\x06\xf3\xba\x0f\x52\x09\xca\xc6\x8b\xc7\x94\xf5\x41\x8b\x64\xf1\x40\xe0\x55\x48\x05\xba\x7d\x50\x22\xb4\xe4\xc6\xa8\x62\x3a\xf1\x60\xc6\x7c\x97\x0d\xa6\xa6\x21\x03\xce\x24\xa6\x8a\xb6\x77\x7a\xbd\x76\x9a\x1b\x87\x33\x85\x4c\xa5\x1f\x01\x90\x20\xf0\xa8\x43\x74\x37\xbb\x9f\x24\x67\xd9\xb7\x65\x9d\xb2\x7f\xff\x5f\xe0\xa8\x0f\xed\x1f\xba\x0e\xf7\x03\xce\x90\x29\xd9\xb5\x65\x65\x77\xc1\xa2\xe6\xb0\x9d\xaa\x5a\x90\x69\x56\x92\xe0\x13\xe5\x4c\xf4\x6c\xd1\x52\xd6\x62\x41\xa3\xf8\x51\x7f\xf6\x7a\xdb\x0f\xd3\x9f\x23\x21\xb8\x68\xe7\xaa\xe0\x0d\xf1\x03\x2f\x2d\xf0\xf8\x6f\xaf\xb7\x7d\x64\x5f\x16\xdf\x95\x37\x14\xd3\xea\x26\x55\x2b\xc5\xb6\x1f\xaa\x09\x28\x3e\x45\xa6\xf1\x90\xb2\x19\xf1\x52\x5a\xdb\xde\xeb\xed\x7d\x25\x42\xda\xbb\xbd\x90\xf6\x56\x09\xe9\x84\x27\xba\x94\xd3\x31\xbc\xa1\x52\xc9\x44\x60\x4f\x1e\x6a\x96\xac\x29\xb0\x27\xbd\xde\x6d\x05\x96\x54\xad\x14\xd8\x05\xc3\x9b\x00\x1d\x8d\xbf\xa8\xf9\x02\xee\x18\xa3\x12\x6b\x96\x44\x27\x14\x54\xcd\xd3\x48\xf4\x12\x89\x40\xd1\x87\x7f\xc1\x9f\xd1\x53\x1e\xa0\x30\x42\x3a\x76\xfb\x1a\xc3\x32\x40\xf0\x72\x7e\x7c\x18\x53\x0b\x7d\x9f\x88\x79\x1f\x5e\xa3\x02\x92\x1f\xa1\xe1\x1c\xa8\xdb\x6a\x01\xac\x83\xfe\xfd\xdb\xe1\xe6\x2d\xfa\xe5\x51\x99\xed\x98\xcc\xf7\xea\x14\x55\x28\x98\x76\x56\x74\x59\x6d\x35\xb2\x3d\x8c\x2b\x14\xcd\x92\x6e\xbe\x6c\x28\x93\x92\xdd\x80\x8c\x53\xc3\xb8\xb2\xb8\xa4\x9f\xd7\x29\xce\x85\x8b\xe2\xe5\x7c\x9d\x06\x90\x08\x67\xd2\x7e\xf4\x76\xe8\x0d\x95\xaa\x1a\x54\x57\x8c\x54\x63\x7d\xea\x59\x9f\x06\x4c\x57\x81\x69\x3d\x4c\x8b\x58\x0e\xf4\xc2\x60\x15\x9e\xc9\x32\x90\x72\x04\x12\x85\x8b\x32\x4b\x01\x47\x3b\xa4\x57\x21\x8a\x79\xaa\x3f\xd6\x3b\x26\x72\xce\x9c\xaa\x5e\xbe\x47\x31\xe2\xc2\x37\xbe\x1a\x31\xcb\x25\xa0\x4c\x2f\x69\x4d\xad\x89\xe0\x8c\x87\x52\x2f\xd1\x18\x8a\xd6\xf2\xd1\xb5\x7e\xf2\x90\x73\x0f\x09\x4b\xbd\x29\xf1\x8c\x21\xf6\x0b\x5f\x72\x37\x85\xda\x15\xeb\x48\x97\x28\xb2\x28\x53\xa2\x8c\xcb\x55\xb1\x5c\x11\x6b\x21\x4e\x7b\x99\x77\x5f\x05\x93\x3b\x0f\x0c\x93\xd5\xb3\xde\x71\x30\x50\x98\x71\x33\xbf\x8e\x89\xbe\xd7\xeb\x1d\xe8\xa9\x40\x39\xbb\x3d\x2a\xe6\x49\x54\xca\xe9\x77\x8d\x86\xa6\xa4\x9d\xf8\x32\xef\x46\x35\x76\xa4\x59\xc5\xd4\x5f\xc5\x9c\x27\xab\x60\x74\x35\x66\xf0\x50\x38\x08\x2e\x47\xc9\x36\x94\x5d\xc9\x34\xb6\x37\xa7\x58\x0c\xc2\x2a\xf3\x6b\xad\x62\x1c\x5f\x70\x72\xc6\xb1\xde\x52\x60\xe1\xe4\x1b\x4c\x40\x13\x61\xbd\x4e\xd1\xaa\xbd\x0c\x79\xc8\x45\x40\xb5\xc5\xb7\x7e\x48\x6a\x2a\x96\xa8\xa4\x29\x03\x8e\x8d\xf9\x41\xa6\x6c\xb5\x71\xcf\x04\xc1\x1e\xe7\x2a\x61\xdd\x15\x42\xb3\x38\x68\x16\x07\x8f\x22\xd2\x92\x89\x48\xdc\x2a\x1a\x51\x33\xd0\x2e\xbb\xff\x5e\x1e\x54\x5f\x81\x43\xd4\x6d\x2f\x8a\x16\x31\xa8\x02\x81\xea\xe3\x4f\x8d\x00\xfc\x3a\xc8\xfc\x38\x51\xaa\x66\x3c\xbd\x09\xa5\x37\x4e\x68\x1d\x21\x35\xa1\xf4\xb5\x04\xf6\xf0\xa1\xf4\x3c\xbc\xe7\x42\xe8\x2d\xcb\x8f\x87\x0a\xef\x08\x74\x8f\x45\xf9\x33\xc2\x3d\x34\x3d\x6b\x96\xd3\xdf\x2c\x92\xd9\x01\xbe\x03\x9e\x65\x08\x2c\x43\x35\xeb\x46\x44\xa6\x11\xae\xa9\x9a\x80\x0c\xd0\xa1\x23\x8a\x2e\x1c\x1f\x7e\xcd\xe8\x76\x37\x21\xe6\x09\x7c\x49\xa4\xb3\xc8\x55\x09\x76\x96\xaf\x02\xde\x05\xda\x40\xdd\x11\xee\x1e\x6d\xf0\xb5\xf1\xeb\xbe\x5f\x34\x6c\xfc\xba\x6f\xda\xaf\x33\xb8\x55\x09\x76\xe6\x6d\x01\xeb\xea\x6c\x80\x1d\x12\x45\x40\xf1\x88\x42\x36\x65\x4d\x1b\xba\xd6\x92\x91\xfc\x02\x5b\x62\xd9\x46\x7c\x14\x63\xdc\x32\xac\xfe\xf7\x17\x69\x50\x37\xb2\x66\x7b\xb9\x50\xe0\x2f\x67\xef\x4e\xe0\xbd\xa6\xb0\x09\xa7\xaf\x0e\xe0\xe9\xf3\xde\x0e\x6c\x2d\x92\x43\x15\xe7\x9e\xec\x50\x54\xa3\x0e\x17\xe3\xee\x44\xf9\x5e\x57\x8c\x1c\x5d\x2a\x47\xd7\xc6\x27\xf8\xf0\x13\x3a\x09\x8a\xe7\x76\x0c\x4d\xd2\xe4\xd1\x22\x69\x77\x64\x8c\x00\xb3\x59\xa5\xc9\xb0\x46\xe1\x10\x09\x84\xb9\xa9\xc7\x64\x8c\x4c\x41\xb4\x8d\x5b\x33\x9f\x26\x26\x15\x85\x79\xea\xec\x41\x67\x33\x40\x97\xef\x45\x47\x45\xa3\x92\xdf\xdd\x96\x74\x1c\xb7\x7a\xb0\xad\xe9\x48\xfe\x5f\xe5\x0e\x75\x81\xf7\x66\xa3\xba\xd9\xa8\x6e\x7c\xc9\x3a\x42\x6a\x36\xaa\x1f\x97\x3b\x79\x8b\x8d\xea\xd8\x76\xac\xe5\x70\xae\xd8\xb0\xce\xd0\xac\x95\x3e\x9b\x33\xf5\x5f\x7a\xff\xfa\x71\xee\xca\x44\x42\x59\x3b\xc9\xd4\xc9\x0a\xb3\x81\xdd\x66\x2b\xf9\xf1\x6c\x25\xe7\x66\x7a\xad\x1d\xe5\x94\x42\xaf\xb9\xdc\x48\x9f\xdf\x8a\x9e\x5d\x52\xf7\x3f\xd1\x2a\xa4\xc6\x09\xae\xa4\x52\xb9\x0f\x5e\x75\x88\x2b\x8b\xaa\x5f\xfe\x1c\x57\x4e\xcc\x8f\x1a\xe0\x6a\x46\x29\xe3\x45\x4e\x13\xad\x6c\x3c\xcc\x3a\x42\xba\x65\xb4\x32\x56\xb3\x26\x6a\xf9\x50\xbb\xd1\xd9\x60\x4e\xe5\xb9\xae\x18\x62\x2d\x96\x87\xf7\x05\x8a\xd9\x99\x91\x0d\xb8\x44\xaa\x21\x15\x51\xa1\x39\x6c\x1f\x06\x2e\x69\xb6\x8e\x0b\x82\x6a\xe0\xe7\xce\xf0\xd3\x20\x4f\x99\xcc\xfe\x02\xe4\xb1\x53\x38\x0f\x3e\x2f\xe7\xc7\x6e\x1e\x80\x42\x37\x20\xd9\x8d\xe2\x9c\x9b\x57\x7f\x13\x25\xc2\x8d\xc7\xb0\x85\xb2\x2a\x74\xdb\x82\xfa\xc9\x3f\xb7\x41\xd8\x26\x09\xa8\x41\xf2\x6f\x2b\x09\x68\x11\xab\x6c\xf2\x7f\x1e\x63\xfe\x4f\x85\x7b\x59\x4c\x03\x4a\x7b\x98\xf7\x13\x77\xe8\x12\xd7\xe5\xec\x32\x1f\x78\x68\x02\x11\x0f\x33\x09\xf6\xf5\x68\xbc\x8f\x85\xbf\x34\xce\xaa\xc5\x9b\x0c\x13\xa8\x09\x51\x20\x27\x3c\xf4\x5c\x18\x22\x84\xd2\x5e\x88\xe5\x70\x36\xa2\xe3\x30\xba\x86\xc8\xde\x24\x95\xd9\x39\xd7\x0d\x02\x67\x76\x8c\xac\x64\x3a\x8d\xc9\xf9\x56\x4d\x4e\x13\xbb\xf8\x2e\x56\x10\x25\xb1\x8b\x2c\xb2\x14\x82\xdd\x15\xa1\x8c\x0d\x19\x21\x44\x82\x34\xf7\x68\x7b\xc2\x60\x2c\x88\x8b\xb2\x6b\x00\xff\x6b\x36\x3c\x6b\x6e\x06\xae\xb1\x15\xf8\xd5\x9b\xb4\x05\x97\xfb\x33\x42\x3d\x32\xf4\xf0\x7c\x1e\xe0\x85\x1d\xfa\x95\x16\x2e\x39\x94\x67\x2d\xdc\x84\xcc\x10\x48\x4c\xc9\xc2\x4a\xac\x46\x8d\xd9\x6a\xcc\x56\x63\xb6\x92\xbf\xaf\xda\x6c\x45\x00\x21\x5f\xce\xcf\x93\xdb\x27\x73\xe6\x2a\xde\x97\x4d\xf0\x20\x97\xe2\xbd\x40\x06\x6b\x5b\xbe\x48\x44\x3e\x01\x2c\x22\x16\x1c\x34\x51\x9c\x06\x9b\x9a\x78\xbc\xfd\xfb\xea\x60\x29\x9a\xc3\xc9\xcc\x2e\xc7\xa4\xa8\xd8\x9d\xa2\xf1\x6f\x0a\xb7\x6f\xd8\xd8\xbc\xa1\xdc\x5a\x32\xb2\xb7\x09\xc6\x5b\x6f\x97\x08\x41\xe6\xb9\x37\x54\xa1\x5f\x32\x72\xb7\x76\xf3\x96\x85\xf2\xef\x7b\x2d\x61\x87\x8e\x8b\x66\x3d\xf1\xbd\xac\x27\xde\x45\x23\x7e\x4f\x6b\x8a\x58\x81\x9a\x75\x45\x85\x0c\x1b\xdb\xdd\xac\x2b\xbe\x2a\x03\x5e\xbe\xae\x88\x61\x63\xfd\xb5\x45\x11\x21\x9a\xf5\x45\x83\x51\x7f\x8d\x90\x9a\xf5\xc5\x37\x0f\x4f\x25\xeb\x8b\x2a\x6c\x6a\xd6\x18\x4b\x5d\xbf\xea\x75\x46\x42\x4d\x37\x19\x11\xb4\xad\x67\xee\x4f\x8f\x19\xca\x48\xec\xa7\xad\x05\xdd\x53\x0c\x04\x4a\x4d\xa7\x78\xa3\xbf\x0c\x83\x80\x0b\xad\x19\xc3\xb9\x59\x2a\xec\xbf\x3f\x6e\xe5\xd8\x49\x69\x85\x5e\x86\xa4\x7e\x46\x1f\x0d\x4a\x3d\xd1\x32\xbe\xb4\xac\x46\x4f\x89\xe7\xbd\x1b\xa5\x69\x2c\x93\xd6\x3b\x73\xde\xfa\x14\x47\x28\x90\x39\x99\x83\x48\xa5\x07\xb2\x01\x02\xa1\xf5\x52\xd1\xfc\xac\x32\x0b\xa6\xdc\x48\x65\x81\x84\xf8\x58\xfe\xd9\x98\x4e\xa9\x3e\xe4\x56\x44\xfa\x2f\xfe\x66\xd2\xb2\x66\x7e\xb7\x65\xee\xd8\x92\x33\x21\x8c\xa1\x57\xd0\xbd\xac\x99\x8d\x0a\xad\xd3\xd6\x1a\x5a\x5e\xc9\x5c\x9a\x89\x65\xfc\xed\xa7\x7f\x16\x98\xac\x2d\x0b\xea\x70\x76\x39\xd1\x4a\xb4\xac\xb1\x8b\xd3\x37\xe6\x3b\x5f\xcc\x94\xbf\x7d\x6b\x1e\x19\xae\x92\xfb\x1b\x53\x24\x49\x5f\x20\x0a\xc7\x5c\xd0\xcf\x58\x7a\x99\xed\xfd\xcb\x5f\xff\x21\x0b\x7d\x0d\xd6\x92\xb2\xe9\x26\x44\x99\x53\x7f\x66\x8a\xa5\xa6\xe6\xd2\xee\xa4\x90\x23\xfe\xdb\x37\x95\x23\x08\xb2\x0b\x50\x87\xb0\x74\xce\xc6\xcc\x1e\x5b\xce\xa0\xbc\x2c\xd0\x49\xe2\x17\x32\x40\x07\x46\x14\x3d\xb7\x7c\x24\xec\x3c\x87\x1f\x40\x71\x97\xf7\x41\x60\xe0\x91\x38\x17\x6c\x88\x2a\x5e\x8f\x14\xc1\x50\x5b\x8a\xfe\x6d\xa0\x27\xbb\x04\x5f\x1b\x6f\x4a\x07\xed\xaf\xb1\x24\xf6\xdb\x4d\xd9\xae\x7f\x07\xdd\xce\x77\xb9\xd4\xec\xed\xa7\x50\x6f\xc2\x3d\x57\xc6\x73\xd0\x64\x14\xd9\x73\xf5\x36\xc5\x48\x17\x02\x02\xbf\x9a\xbb\xc6\x14\x0f\xa8\x63\xf1\x82\xab\x09\x0a\x90\x73\xa9\xd0\xef\x3c\xac\x0d\xf3\x51\x11\x97\xa8\x0a\x07\xa5\x40\x66\x19\x29\xfd\x17\xdf\xdf\x5a\xe6\x62\x2e\x05\x17\x7e\xcd\x50\xac\x5d\xab\xcc\x02\xaf\xac\x64\x6f\x24\x71\x2f\x89\x2a\xab\x3a\xe2\xc2\x27\xaa\x0f\x1a\x69\xb6\x14\x4d\xf9\x22\x35\xc9\x47\x19\xe3\x7f\x15\xf9\x38\x67\xf5\xb2\xc2\x33\x48\x08\x50\xa6\x70\x8c\x79\x9b\x90\x66\x82\x32\xf5\x74\x2f\x67\x67\x03\x8f\xcf\x7d\x64\xea\xd2\xe3\xd6\xa7\xcd\x37\xb0\x74\x22\x59\x9f\xfb\x9c\x88\x31\xaa\xec\xd2\xc4\x68\xc6\x3a\xb4\xcc\xac\x89\x66\x22\xe5\xec\x0c\x95\xa2\x6c\x2c\xb3\x54\x0b\x5f\xf0\x2b\xd7\xe3\x32\x77\x27\x63\x27\x6a\xab\x7f\xe4\x25\xd5\x6e\xc6\x45\xa9\x1d\xdc\x4b\xa9\x88\x2a\xa8\x6a\x65\x2d\x7b\x6e\xa9\x46\xf1\x9b\x2d\x8f\xb2\x69\xaa\x64\x56\x20\x69\x0a\x75\x3f\xcf\x05\x15\xc7\xfa\xcb\xc5\x0d\x1b\x85\x67\x1b\x55\x6b\xc4\x9f\x96\xd0\xd2\x1c\xc9\x12\x97\x52\xaf\x19\x42\x19\x1d\x22\xcd\xd4\xd7\x65\x07\x85\xc6\x07\x09\xef\x40\xd9\xe2\x82\x47\xc5\x33\x75\x07\xaf\x8f\xce\xd7\xfa\xc0\x58\xd9\xe7\x25\x07\x9d\xc8\x5a\xa4\x95\x7e\x61\x31\xa8\xee\xb8\x4f\x19\x49\x99\x91\x05\x76\xce\x4f\xec\x6d\xd7\x94\x25\xc1\x17\x9f\x04\x01\x65\xe3\xcc\xca\xd2\x75\xcd\x67\x34\xab\x73\x62\x2b\x27\x9c\xe3\xf1\xd0\xbd\x0c\x04\x9f\x51\x57\xaf\xb1\xab\xe6\x2b\x0f\xdd\xf7\x51\xa1\x52\x5a\x9c\x61\x7d\xb3\xb4\x8c\xa5\xe5\x35\x97\x31\x62\x48\x14\x49\x97\xda\xe6\xb6\x7d\x27\xe1\x9a\x8b\xa9\xc7\x89\x2b\x23\x0f\xdd\xa6\xeb\x39\xd9\x23\x34\x25\xb3\xbc\x6c\x45\x9a\x1a\xa6\x32\xdb\xa7\x5f\xaf\xdc\xdd\x4a\x36\xd3\x2a\x8b\x46\xca\x54\x25\x88\x75\xfa\x6b\x87\x1f\xe2\xe1\x7f\x90\xfe\x66\xf4\x6f\x55\x71\x81\xe3\x9c\xa9\x29\x2d\xe6\x87\x9e\xa2\x97\xe4\x73\xb1\x60\x7c\x57\x57\xd6\x7f\xab\xca\xad\xfb\xc6\xdd\xd8\xf2\xbd\xe6\xd5\xa2\x29\x77\x77\x59\x45\x62\xa1\xb9\x8c\xae\x78\x41\x61\x89\x58\xca\x44\x92\xe0\xe9\x92\x29\x51\x2c\x5c\x62\xe6\xcb\x6b\x14\xed\x74\x69\x39\x39\x21\xc2\xbd\x2c\xf3\x82\xd7\x1c\x5e\x22\x25\x1d\x33\x74\x2b\x7d\x90\x72\x77\xac\xda\x15\x5b\x08\xfd\x4e\x14\x2b\x06\xbd\x64\x6f\xf8\x7b\x99\x13\x85\xd8\x68\x3d\x11\xad\x9e\x1b\xf9\xed\xaf\x6f\x62\x7e\x64\xd3\x46\x2a\x7b\xb0\x6c\x90\x57\xce\x8c\x12\x07\x78\xb5\xf2\xa7\x8d\x66\xf1\x78\x50\xb9\xb1\x4c\xee\x60\xca\x67\xef\x67\x2d\x64\x5a\xf7\x72\x3a\x57\xff\x94\x52\xbb\x8c\xb7\x2a\xbe\x72\xfc\x2c\x31\xd8\x65\x52\xae\x31\xde\x33\xe2\x85\xb8\xc2\xf5\xc8\x1d\x8d\x28\xe7\xf5\xcc\x06\xe8\xb4\x6e\xa7\xae\x75\x49\x8e\x4a\x03\x31\x97\x5b\x42\xe0\x11\x86\xa9\xf3\x12\x76\x49\xd3\xbe\x0d\xc8\x3c\xda\x68\x47\x13\xb4\xa8\x41\xbe\xc6\x5a\xb6\x54\xfd\xbe\x03\x9b\xb4\x38\xd1\x6f\xaa\x57\x04\x3c\xfa\x4b\x26\xfe\x90\x73\x25\x95\x20\xc1\xa5\x44\x31\xab\xe1\x67\x3b\x1e\x45\xa6\x6a\x19\x08\x5b\x52\xa2\x23\x50\x2d\x07\x8e\xdc\xfc\xec\xdf\x3b\x78\xd5\x5a\x71\xe4\xb7\x6b\x8a\x7c\xa6\x35\x6a\xc5\xba\x47\xff\x0c\xc8\x38\xbd\x11\x29\xe9\xe7\xf4\x4f\xc5\x15\xf1\x52\xbf\x8d\x1e\xac\xd7\xf3\x5a\xdd\xd2\x5c\x14\x0b\xe5\x5d\x3f\xcd\xdc\xea\x52\x86\xe7\xea\x62\xe6\x85\xc9\x2a\xb8\xd5\xbc\xbb\x3f\x98\x76\xb8\x5b\x3f\x56\x26\x90\x94\x24\x54\x54\x16\x5f\x84\xc1\x6a\x78\x16\xf9\x30\x58\x52\xc3\xe6\xca\x2e\x52\x67\x0a\xb9\x94\xc7\x87\xda\xcb\x10\xe8\x70\xb1\xc8\x80\xc8\x6d\x8b\x95\x70\x98\x4b\x81\x2d\x49\x80\x4d\x6b\x83\xe5\x21\xa5\xa5\xf9\x7b\xb3\xb3\xb7\x63\x93\x31\x02\x65\x2e\xde\x14\xa8\x8f\x88\x27\xb1\x3e\x97\xc5\x14\x93\xbc\x8e\x5a\x67\x03\xda\xdb\x56\x07\xd2\xca\x69\x99\x4e\xcd\xa5\xa5\x4c\x9f\x84\xfe\x10\x85\x16\xa5\x99\x5e\x40\x19\x20\x71\x26\xe9\x4e\xdf\x63\x37\xf2\x93\x68\xd1\x8d\x5e\xcf\x76\x24\xfa\x3e\x7e\xa9\x63\xf4\xbf\xc9\x96\xe6\x59\x74\x91\x84\x8d\x67\x9a\x4a\x30\x9c\x83\x23\xa8\x42\x41\x49\xc7\x68\x88\x9c\x33\x45\x6e\xec\xa6\x31\x95\xe9\xa8\xa5\x4c\x31\xe4\x53\x8f\x08\xed\x5c\xa9\x5c\x15\x84\x41\x4c\x78\x00\x8e\x47\x42\x69\x32\x0d\x08\x83\xb3\xdf\xde\x18\x9b\x8b\x3e\x32\x95\xec\x7c\x1e\x69\xb9\x19\x41\xc7\xfb\xaa\xa6\xbe\xcd\xca\x20\x6c\xbe\x20\x9b\x89\x0b\x0f\xec\x06\xaa\x4c\xe8\xbc\xe2\x22\x16\xdd\xa6\x66\x4c\x98\xeb\x20\x35\x52\xa4\xb2\xf9\x4c\xcc\x34\xdd\x80\x9a\x20\x15\x66\xf0\x37\x41\xb3\xaa\x5b\x1a\x71\xcf\xe3\xd7\x94\x8d\xa3\x8e\xf5\x5b\x8b\x46\x06\x83\x81\xbc\x4a\xd0\x55\xd7\x03\x22\x9d\xf4\xfb\xa4\xf0\xf9\xfa\x4c\xc0\x25\x61\xee\x65\x9c\x5c\x71\x17\x96\x36\x63\x22\xd5\xfc\x1d\x5b\xc1\xa6\x47\x98\x6d\xa8\x38\x38\xe7\x6e\x02\x17\x40\x6d\x19\xa3\x71\x40\x25\xa0\x1f\xa8\xf9\xa6\x7e\x96\x64\xbe\x58\x77\x5b\x86\x9e\xb2\x39\x8e\xa9\x9e\x69\x6e\x3a\x0b\xbd\x0e\x3c\x8d\x9f\xe9\xac\xf9\xa2\xae\xe7\x54\x39\xad\xee\x71\xd7\xda\x15\x33\xd4\x4e\xe1\x88\xc0\x5d\x67\xa1\x54\x73\x0f\xfb\xc6\xc3\xb4\x58\x81\x44\x24\x5f\xf3\xc9\xce\xb0\x64\x82\x99\x42\xc9\x84\x4a\xe9\xc2\xf2\x99\xb5\x62\x46\x5d\x4f\x50\x60\x66\x3a\x25\x4d\x66\x66\x15\xec\x6b\x3d\x41\x37\x9a\x1d\x1a\x97\x0c\x39\xcb\x97\x1e\x9c\x81\x96\xd2\x60\x13\x06\xa9\x2e\xe8\x9f\x91\xb6\xe8\xff\x9a\xb4\x8f\xc1\xa6\xf9\x66\xc3\x20\x5a\x8f\x0f\x12\xd2\xf1\xca\xdb\x0e\xf6\xe0\x7f\x7e\xd2\x75\x5e\x0c\x8c\xba\x0c\xde\x1c\xff\x7a\x34\x48\x26\x65\x5c\xc7\xe1\xec\x53\xc8\x1c\x45\x67\x98\xaf\xbf\x7f\x72\x38\xb0\x4d\xbd\x3b\x1d\x74\xe0\x67\x7e\x8d\x33\x14\x9b\x30\xe7\xa1\x01\x04\xdd\x63\x02\x3e\xb9\xa1\x7e\xe8\xeb\xbe\x6f\xf7\x12\x72\x9c\x99\x3e\x92\xb8\x87\x46\x1d\x52\x62\x3f\x5a\xe8\x57\xd9\xac\x4c\xcd\x49\x8d\x29\x36\xc3\x42\xcb\xcb\x68\xda\x80\x5c\xcb\x2d\x79\x25\xb7\xec\xbe\xa6\x65\xd2\x6c\x04\x59\x91\xc0\x40\x2a\x32\xf4\xb4\x30\xeb\x4d\xd3\xec\x1c\x7d\x01\x59\xfa\xf6\x13\x19\x11\xe9\x17\x60\x69\xa7\xab\xff\x2b\xd8\xfa\xb3\xbc\x1b\x76\x1f\x9f\x32\xa9\x08\x8b\x13\x45\x88\x6d\xc5\x5e\x33\xa2\x88\x50\xd2\x3e\xd7\xbd\xba\x25\xc7\x1e\x9d\xa2\x66\xfa\x6f\x3b\x4f\xfe\x12\x40\x31\x30\xa9\x5f\x66\x87\x25\x85\x33\x44\x99\xf7\xa1\x44\x01\x13\x22\x21\x40\xe1\x53\x29\xa3\xc4\x06\x89\x68\x54\xca\xca\x05\xdd\x94\x1e\x9c\x70\x85\x9d\x98\x3f\x6b\x6c\x92\x34\x63\xad\xe9\x51\x72\x28\x95\xa9\xda\xd5\xb0\x15\x39\x0b\x46\xe7\x2a\xc0\xa8\x1c\x78\x4a\x6c\x7b\x06\x57\x20\x0f\x77\xb5\xb4\xa4\x7d\x3b\x58\x6b\x25\xd9\xaf\x26\x78\x12\xb3\x15\xa5\xbf\xa6\x89\x62\x1f\x86\xe6\x69\xf4\xd0\xfe\x78\x15\x2d\xbf\x7f\xf9\x70\x9e\x59\x60\x4c\x94\x0a\x34\xf5\x6c\x6f\xab\xbf\x25\x91\x8b\x01\x51\xd7\xf8\x36\xbb\xed\xec\x82\x04\xda\xb9\xc4\xe2\x89\xf5\xf9\x2b\xb6\x4b\xed\x17\x24\xba\x19\x3a\xc6\x7f\x87\xf6\xc1\xbb\x93\x93\xa3\x83\xf3\x77\xa7\x5b\x6f\x5f\xbf\x3d\xdf\xca\x14\x89\xbc\x76\x68\x9f\xa5\xbe\xcd\x12\x7f\xb5\x45\x02\xe3\x2a\xc9\x1b\xb5\xd3\xc8\x7c\xc5\xe5\x85\xd6\x8e\x62\x9c\x2c\xe7\xd6\x43\x7b\x9b\x7e\x38\xa6\xfe\xd5\x6b\x47\x1c\x86\x6f\x9e\x6e\x93\x8b\x9b\xe3\x7f\x5e\xbd\x3c\xbf\x3a\x39\x25\xed\x58\x4a\xc7\x56\x2d\x7f\xd3\xda\x54\x43\x52\x3b\xf7\x24\xa9\x9d\x95\x82\xda\x29\x93\xd3\x2b\x42\x3d\x9b\x07\x17\x10\x21\x31\x83\xc4\x7d\xb8\x60\x76\x7b\x86\xdb\x08\xe7\xaf\xe9\xaf\x1b\xda\xaf\x06\x91\x80\x5e\xda\xad\x6d\x89\x62\x46\x1d\xec\x43\xa1\xd9\x3e\xac\x6a\x25\xc9\xe5\x75\xb8\x17\xfa\xcc\x22\x96\xa6\x1f\x4d\x30\xd8\xa0\xee\x46\x07\xce\xca\xca\x19\x4b\xd4\x8f\xf6\xfa\x36\x23\x6f\x30\xbb\x51\x18\x3f\xb5\x41\xa3\x0e\xfc\x66\x31\xc4\x8e\x94\x5e\x70\xc1\x0b\xd8\x4e\xcb\x27\x3f\xee\xde\x87\xc3\xd7\xe1\x7c\x78\x2c\x8e\xd8\x8d\xd8\x47\xff\xd9\xce\xde\xf8\x6a\x3a\xa5\x87\xb3\x78\xdc\xf3\x27\x07\xca\xc6\x7a\xaf\xb7\x77\x2f\x63\xfd\x6c\xd5\x50\x3f\x2b\x19\xe9\x3a\xdf\xd3\x58\x74\xa6\xf4\xb2\xb7\xb2\x2e\x3d\x7b\xb8\x0e\x19\x6d\x3c\xcd\xdc\xb5\x47\xdd\x17\x1b\xdb\xf4\xd7\x5d\x37\xfc\xfd\xe3\xf1\x6c\xf6\xe4\xe3\xec\x8d\x37\xff\xbc\xed\xbf\x3e\xdd\xfd\x65\x7e\x75\xb2\x61\x00\x60\xc4\x43\xe6\x2e\x99\xe2\x1f\xdf\x3d\x1b\xef\x8c\x9f\xfe\x7c\xee\x5e\xfc\x7a\x41\x76\xa6\xf2\xe7\x1f\x77\xa6\xbf\x1d\xee\xce\x63\xe9\xe4\x4f\xd2\x94\x02\xe0\xf6\xfd\xe0\xdf\xf6\x4a\xf8\xdb\x2e\x11\x4d\x32\x6f\x67\x28\xe8\x68\xae\x31\xde\x9e\xcf\xe9\xc3\x69\x64\xda\x80\x84\x6a\xc2\x05\xfd\x1c\xa7\x16\x4e\x91\xd5\x93\xcf\xee\xc5\xe4\x68\x72\xed\xff\xf1\x32\xf8\xf0\x7e\x74\xbc\xe3\x9d\xe0\x34\x70\xf7\xfe\x79\x18\xcb\xe7\xf9\x09\xf1\xf1\x80\xb3\x91\x47\x1d\x55\x43\x56\xbb\x4f\xef\x45\x56\x69\x32\xe5\xb2\x4a\x97\xc8\xaa\xd1\xe2\x18\x8e\x01\x1e\x2a\x81\x78\x02\x89\x3b\x37\x59\xc2\x95\xb2\x78\x3a\xfd\xd8\xbb\xa0\x47\xd3\xcf\xd3\x3f\x0e\x3e\x7f\x78\x8f\xc7\x3b\xfc\x23\x4e\xdc\xdd\xa3\x48\x14\xc5\xb3\x31\x65\xdd\x7f\x7e\x2f\xbd\x7f\xbe\xaa\xf3\xcf\x4b\xf5\x24\xb9\x9d\x12\xb3\x8d\x16\x86\x1d\x8f\xde\xcc\x5e\x3d\xff\xf4\xf6\xb7\x8f\x4f\x3f\x8e\x27\xa3\xb7\xcf\xc7\xaf\x4f\xe5\xcf\xb3\xa3\x0f\x8b\xbe\xd6\x06\x8d\x07\xeb\x71\xca\x4f\x6b\x5b\x97\xd1\xdc\x0d\x19\x39\xd0\x8e\x44\xd5\x87\x77\x07\x6f\xb7\x8e\xfe\xd8\x7a\xae\x5d\xbf\xd8\x6a\xd9\x1b\x24\x93\x32\x78\xa3\xb6\x22\x7b\x47\x02\xba\xb5\x4d\x6f\x7a\xbb\x1e\x73\x3d\xff\xaa\x77\x35\x72\x9e\x49\xaa\xc8\x13\xe9\x7d\x9a\xfd\x98\xde\xd2\x18\xa5\x4e\x7b\x69\x31\x6c\x8f\x9f\xb8\x3f\xfe\x78\xd5\xf3\x84\xe3\xce\xf6\xc6\xcf\x88\x37\x7c\x26\xbd\xd1\x98\x7d\xda\x75\x27\x43\xf9\xe9\x6f\xff\xef\xef\x47\x7f\x9c\x9f\xee\xc3\x7f\xd9\x0e\x77\x8c\x90\x5e\x50\x17\x99\xd2\x43\x96\xde\xa1\xa7\x12\x36\xf6\x7a\x7b\x1b\x9b\x46\x14\xe6\xe7\xc1\x9b\x8b\xb3\xf3\xa3\xd3\x33\x2b\x0b\xfd\xd2\x78\x9f\x8b\x71\x85\x84\x90\x29\xbf\x3d\x7e\xc2\xc5\x93\xde\x8c\x86\xbd\x67\x1c\xf5\xa8\x4d\xc4\xd4\xd9\x79\xea\x8e\x47\xea\xd3\x36\x71\x36\xd2\xd2\x8b\x6f\x42\xdf\x58\xd5\x89\x14\xe4\xfe\x63\x19\xa6\x9c\xcb\x0f\x62\xfe\x94\xc9\xab\xe1\x8e\x3c\xf1\x5f\x7d\x7a\x32\xfc\x23\x38\x7c\x76\x40\xda\xad\xff\x0b\x00\x00\xff\xff\x21\xa1\x16\x0c\x1c\x9d\x00\x00")

func connector_mgmtYamlBytes() ([]byte, error) {
	return bindataRead(
		_connector_mgmtYaml,
		"connector_mgmt.yaml",
	)
}

func connector_mgmtYaml() (*asset, error) {
	bytes, err := connector_mgmtYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "connector_mgmt.yaml", size: 40220, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"connector_mgmt.yaml": connector_mgmtYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"connector_mgmt.yaml": &bintree{connector_mgmtYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

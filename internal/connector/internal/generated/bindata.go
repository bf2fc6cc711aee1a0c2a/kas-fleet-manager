// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package generated generated by go-bindata.// sources:
// .generate/openapi/connector_mgmt.yaml
package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _connector_mgmtYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\xff\x73\xdb\x38\xae\xf8\xef\xf9\x2b\xf8\x71\x3f\x37\xb9\x7b\x2f\x76\x6c\xc7\xf9\xe6\x79\xbd\x99\x34\x49\xbb\xd9\x4d\xd3\x6e\x92\x6e\xb7\x77\x73\xe3\xd0\x12\x6c\xb3\x91\x48\x85\xa4\x92\xba\x77\xef\x7f\x7f\x43\x52\xb2\x28\x89\xb2\x65\x27\xfd\xb6\x6b\xcd\xec\x36\x96\x40\x10\x00\x41\x10\x00\x21\x8a\x45\x40\x71\x44\xfa\x68\xa7\xd5\x6e\xb5\xd1\x33\x44\x01\x7c\x24\x27\x44\x20\x2c\xd0\x88\x70\x21\x51\x40\x28\x20\xc9\x10\x0e\x02\xf6\x80\x04\x0b\x01\x9d\x9d\x9c\x0a\x75\xeb\x96\xb2\x07\x03\xad\x1a\x50\x94\xa0\x43\x3e\xf3\xe2\x10\xa8\x6c\x6d\x3c\x43\x47\x41\x80\x80\xfa\x11\x23\x54\x0a\xe4\xc3\x88\x50\xf0\xd1\x04\x38\xa0\x07\x12\x04\x68\x08\xc8\x27\xc2\x63\xf7\xc0\xf1\x30\x00\x34\x9c\xaa\x9e\x50\x2c\x80\x8b\x16\x3a\x1b\x21\xa9\x61\x55\x07\x09\x75\x0c\xdd\x02\x44\x86\x92\x19\xe6\x8d\x67\xa8\x11\x71\x72\x8f\x25\x34\xb6\x10\xf6\x15\x17\x10\x2a\x60\x39\x01\xd4\xf0\x18\xa5\xe0\x49\xc6\x07\xe1\x38\x94\xcd\x04\xb2\x35\xc5\x61\xd0\x40\x23\x12\xc0\x06\xa1\x23\xd6\xdf\x40\x48\x12\x19\x40\x1f\x1d\xa7\x0d\xd0\x15\xf0\x7b\xe2\x01\x7a\x19\x00\x48\xf4\x1a\x53\x3c\x06\xbe\x81\xd0\x3d\x70\x41\x18\xed\xa3\x76\xab\xd3\x6a\x6f\x20\xe4\x83\xf0\x38\x89\xa4\xbe\xb9\xa0\xbd\xe1\xe7\x12\x84\x44\x47\x6f\xcf\x14\x99\xa1\x7e\x80\x66\x84\x8a\xd6\x86\x00\xae\x3a\x51\x54\x35\x51\xcc\x83\x3e\x9a\x48\x19\x89\xfe\xf6\x36\x8e\x48\x4b\x09\x5b\x4c\xc8\x48\xb6\x3c\x16\x6e\x20\x54\x20\xe0\x35\x26\x14\xfd\x35\xe2\xcc\x8f\x3d\x75\xe7\x6f\xc8\xa0\x73\x23\x13\x12\x8f\x61\x11\xca\x2b\x89\xc7\x84\x8e\x9d\x88\xfa\xdb\xdb\x01\xf3\x70\x30\x61\x42\xf6\x0f\xda\xed\x76\xb9\xf9\xec\x79\xd6\x72\xbb\x0c\xe5\xc5\x9c\x03\x95\xc8\x67\x21\x26\x74\x43\xe2\x71\x22\x00\x8a\xc3\xdc\xb8\x5c\x4f\x23\x10\xe5\xf6\x8d\x86\x0b\xba\x36\x20\x3a\x0e\x62\x21\x61\x89\x06\xc9\xf8\x3a\xe1\x37\x22\x2c\x27\x9a\xfe\x67\xea\x3f\xe4\x6c\xf6\x6c\x63\x03\xa1\x86\x1a\x86\xed\xbc\x9a\x6e\xdf\x77\x1a\x7d\x8d\x77\x0c\xd2\xfc\x81\x50\x2a\x10\x73\x35\x2b\x08\x41\x6a\x2e\x72\xac\x08\x39\xf3\xfb\xaa\xfd\x6f\x46\x5d\x5f\x83\xc4\x3e\x96\x38\x81\x12\x71\x18\x62\x3e\xed\xa3\x4b\x90\x31\xa7\x42\xcf\x96\x44\xb3\x51\x98\x87\xcd\x31\x57\xa7\x01\x07\x11\x31\x2a\xc0\xa2\xb7\xd1\x6d\xb7\x1b\xd9\x4f\xa4\xf4\x5d\x02\x95\xf6\x2d\x84\x70\x14\x05\xc4\xd3\xd4\x6f\x7f\x14\x8c\xe6\x9f\x22\x24\xbc\x09\x84\xb8\x78\x17\xa1\xff\xcf\x61\xd4\x47\x9b\xcf\xb6\x3d\x16\x46\x8c\x02\x95\x62\xdb\xc0\x8a\xed\x02\xff\x9b\x56\xe3\x1c\x63\xbf\x15\x79\x99\x0d\x5e\x59\xf5\xe6\x8d\xdc\xf6\x2d\x1e\xdd\xe2\x41\x76\x5f\xaa\x46\xdb\xff\xce\xdf\x18\x10\xff\x7f\x13\x79\x44\x98\xe3\x10\x64\x32\xe1\xcd\xe0\x1a\x5d\x2b\x35\xd9\x70\x52\x7e\x3d\x01\x44\x7c\xc4\xb4\xc9\xcc\x1a\x21\xd5\x68\xa3\x5a\x74\xea\x71\x1f\x09\xc9\x09\x1d\xcf\x6e\x13\xda\x47\x4a\x77\x67\x37\x38\xdc\xc5\x84\x83\xdf\x47\x92\xc7\x50\x5f\x29\xb3\x59\x8a\x90\x00\x2f\xe6\x44\x4e\x6d\xc8\x17\x80\x39\xf0\x3e\xfa\x27\xfa\x57\x85\xe2\xce\x70\x29\x54\x2f\xa6\x67\x27\x45\xd5\x7d\x05\x12\xe1\x02\xbf\x6a\x19\x99\xc9\x29\xaf\xb8\x0b\xc1\xbf\x91\xda\x36\x9c\x6a\x9b\xe3\xbe\x51\x68\x0a\x9f\x70\x18\x05\x36\xa1\xe9\x95\x6b\x76\x6a\xc0\xca\x50\xee\xae\x53\xac\xdb\x2e\x24\x8d\xaa\x79\x73\x5d\xd2\x39\x14\x62\xe9\x4d\xd4\x82\xa1\xf4\x51\x29\x10\x68\xdb\x9f\x88\xb4\xd7\xee\x7c\x1b\x91\x9e\x72\xce\x78\x7d\x51\xf6\xda\x9d\x55\x05\x98\x35\xad\x14\xdb\x51\x2c\x27\x48\xb2\x5b\xa0\xca\x25\x20\xf4\x1e\x07\xd6\xfc\x6e\xf4\xda\xbd\x1f\x44\x48\xbd\xd5\x85\xd4\x5b\x24\xa4\x0b\x96\xe9\x52\x41\xc7\xe0\x13\x11\x52\x64\x02\xdb\xfd\x56\x13\x75\x49\x81\xed\xb6\xdb\xab\x0a\x2c\x6b\x5a\x29\xb0\x77\x14\x3e\x45\xe0\x49\xf0\x11\x28\xba\x10\xf3\xb4\x5f\xe5\x2f\xbd\x60\x2d\xe3\x80\x3c\xb1\xad\x17\x55\x3e\x0a\x46\x01\x11\x52\x2d\x74\x79\x65\x10\x2e\x7b\x5f\xb7\x51\x79\xf9\x55\x24\xbb\x06\x22\x83\xdc\x8e\xf0\xd8\x1a\x84\x85\xe0\x82\x7c\x5e\x06\x9c\x71\x1f\xf8\x8b\xe9\x32\x1d\x00\xe6\xde\xa4\xf1\xdd\x2f\x64\xe7\x44\xc8\x6a\x93\xb8\x60\xa4\xd6\x6b\x47\xbd\xb5\x63\x6d\x0a\x17\x9a\xc2\x82\x63\xbf\xa4\x4b\x9f\x1a\xc7\x48\xc5\xbc\x8b\xac\xe3\x23\x0c\xa3\xc7\x01\x4b\xb0\xa9\x44\xb6\x59\x3c\xd6\x8f\x75\x7a\xe4\x21\x9b\x32\x2e\x5b\x38\x17\xd2\x6d\x00\x55\x20\x70\x17\x03\x9f\x5a\xf2\x35\x51\x09\x16\x53\xea\x55\x49\xfd\x2d\xf0\x11\xe3\xa1\xf6\xfc\xb0\xce\x3f\x20\x42\x11\xa6\xa6\xd5\x84\x33\xca\x62\x81\x42\x4c\x29\xf0\x8d\xf9\xda\x66\xe2\x93\x21\x63\x01\x60\x6a\x3d\x71\x44\x24\x28\xf5\x32\x5f\x30\xdf\x12\x70\x45\x62\xc6\x8a\x54\x9d\x93\x63\xfe\xd4\x70\x4f\x8c\x5a\x16\xf0\xd2\x10\x99\x9f\x21\x55\xf3\x63\xd6\xca\x0c\x5e\xe5\x4c\xa9\xe7\xc9\xe7\x90\x34\xe6\x45\x77\x55\xcb\x47\xf7\x1b\x2f\x1f\xd5\xd6\xd0\xf3\x20\x92\x90\x73\x9e\x7f\x0c\x03\xd8\x6b\xb7\xf5\xb8\x10\x46\x57\x5f\x2d\x8a\x28\x2a\xe5\xf4\x9b\x5a\x25\x34\xa4\x31\x88\x22\xb3\x88\x96\xe4\xd6\xeb\xeb\x3a\x36\xab\x15\x9b\x5d\x67\xb1\x3d\xf8\xca\x66\xb0\x98\x7b\x80\x7c\x06\x82\x6e\x4a\x13\x9f\xad\x7d\x92\x82\x62\x51\x14\x57\xb9\x25\x66\xb5\x4f\xb3\x26\xf9\x45\xba\x4e\x14\xf6\x08\x3f\x43\xb9\xdd\x65\x3c\x7f\xb0\xe8\xeb\xbb\x8e\x8d\x96\x8d\x8b\xd6\x21\xd1\x3a\x24\xfa\x36\xd9\x21\xb1\xfd\xef\xf9\x5b\x17\x0b\x26\x23\xf1\x1b\x5f\xc3\xa4\xd9\x39\xa5\xa2\x41\x2b\x6c\x04\xb8\xcc\x97\x1b\xe4\xfb\xb4\x1d\x35\x33\xf3\xeb\xa4\xfc\xda\xf1\xab\x23\xa4\x75\x52\x7e\x29\x81\x3d\xca\xec\x1a\xd0\x00\x24\x7c\x49\x5b\x68\x7a\xa8\x34\x87\x27\xfa\xf1\x22\x8b\x58\x09\xe5\x36\x8a\xdf\xcb\x44\x71\xf0\xb0\x0e\x77\xff\xb0\x56\xcf\x0c\xf0\x23\x6c\x5f\x0e\xc1\x3c\x0b\xa8\xbd\xa2\x74\x19\x45\x0f\x44\x4e\x90\x88\xc0\x23\x23\x02\x3e\x3a\x3b\xf9\x91\x2d\xe1\xe3\x84\x58\x44\xb0\xa2\x55\x8c\xd4\x0a\xf3\x25\x8d\xa2\xee\xa0\xd2\x26\xbe\x55\x4f\x17\x99\xc4\x2a\xa0\xc5\xb9\xe8\x13\x2c\x31\x92\xcc\x10\x51\xa8\xda\x51\xba\xb4\x31\x47\x4d\x6c\x25\x09\x81\x8f\xa1\xa9\xb1\xfc\x77\xdd\x4c\xb5\x49\xab\xb3\xe1\x47\xf0\x64\x05\x5a\x85\x6a\x49\xac\x85\x80\xf5\xe7\xab\x37\x17\x46\x3e\x5b\xe8\xf2\xe5\x31\xda\x3b\x6c\x77\x51\x73\x56\x79\x28\x19\x0b\x44\x8b\x80\x1c\xb5\x18\x1f\x6f\x4f\x64\x18\x6c\xf3\x91\xa7\xa0\x56\xa3\xf6\x4b\xa4\xe8\x67\xcd\xff\x08\x49\xf2\x75\x2c\xf0\xe7\x5d\x15\xd7\xb1\xc0\x8f\x10\x0b\x38\xca\x4d\x93\x92\xe4\x65\x0b\x4e\xbd\xa4\x92\x79\x99\x5d\xea\x7c\xf9\xf3\xfc\x7d\xe8\x8c\x2c\x54\x7b\xed\x5d\xb0\x69\x8d\xbc\x1c\xce\x1a\x9b\xd7\x85\x16\x7f\xba\x4d\xec\x84\xfd\x6f\xb7\x99\x9d\x68\xc1\x8a\x7b\xda\xa6\xf1\xd3\x6c\x6d\x3b\x70\xfd\x90\x3b\xdc\x09\x23\xeb\x8d\xee\xf5\x46\xb7\x25\xb9\xb5\x8f\x53\x43\x48\xeb\x8d\xee\xef\xcb\xcd\x59\x61\xa3\x3b\xb7\xa0\xd7\x2a\x3b\x2e\xb8\x2c\x8f\xdd\xf8\x2e\xa2\xab\xb3\xff\xed\xe5\xdb\xd4\xde\x02\x2f\xb4\xfb\xda\x35\xc8\xdf\xe7\x46\x56\x32\x00\x4b\xd7\x08\x17\x84\xb9\xb6\xee\xeb\x3d\xf1\xaf\xfc\xc6\x44\xaa\x81\xf6\x5b\x7e\xc9\xbd\x25\x5f\xf4\xcb\x5a\xb9\x03\x80\xaa\x77\xfd\xf2\xd1\xd0\xd7\x7f\xdd\xef\xf1\xb6\xd8\xde\xb1\x2f\x44\x98\x55\x2f\xfc\xcd\x09\x1a\xe7\x83\x7e\xd7\xf6\xaf\x66\x0e\x2f\x0d\x00\xd7\xb9\xbc\xb5\x9f\x5b\x47\x48\x2b\xe6\xf2\x52\x35\x5b\xe7\xf4\x56\xdd\xc9\x8a\xbf\x8a\xf9\x8c\x23\xdf\x91\xa3\x7b\x31\x3d\xf3\x8b\x56\x34\xf6\x23\x9c\xdf\xc9\x9f\x67\x48\x17\x42\xd7\xdf\xed\x32\x24\xfa\x2b\xee\x75\x7d\x95\xe4\xd5\x12\xd9\xa2\xbc\xc9\xc8\x67\xe9\x92\x39\x23\x24\x96\xb1\x3e\x23\x25\x61\x7d\x6d\x97\xd7\x76\xf9\x89\xed\xf2\xda\x24\xbb\x64\xf6\x24\x25\x57\x4f\x60\x95\x0b\xa5\x57\x15\x7e\x6d\xb9\xb6\x6a\x9e\x45\x5e\x08\xbd\xae\xc8\x5a\xdb\xc5\xef\x44\x48\x5f\xb1\x22\x6b\x96\x98\x5d\x17\x63\x3d\x65\x31\xd6\xd3\x65\x41\xb6\xb1\xef\x33\x3a\xc8\xb2\x20\xeb\xb4\xc8\x6a\x69\x91\x23\x25\xc7\xb7\x33\xa9\x15\x57\x93\x8a\xd4\xc7\xa6\x40\x7a\x00\x2c\x79\xbb\x56\x97\xa5\x5b\x7f\x57\xb9\x94\xbc\x68\xe6\x66\x92\x95\xca\x64\xcc\x20\x39\xc1\x12\x89\x09\x8b\x03\x1f\x0d\x01\xc5\xc2\x9c\x38\xe8\x31\x3a\x22\xe3\x98\x83\x56\x2c\x73\x56\x9f\x1d\xc1\x18\xa1\x30\x6a\xf4\xce\xc8\xaa\xb5\x5e\xce\xfe\xa8\xcb\xd9\x3a\xfd\xf2\x23\xf9\xfa\x1b\x19\x46\xd5\x71\x42\x7d\xdf\xbc\x0a\xfa\xcc\xfc\x1f\x1d\xb3\x30\x64\x34\xb9\xa5\xff\x51\x66\xa3\x3f\xb3\x6e\x89\xe1\xb7\x2c\xf6\x2d\xa1\xbe\xf5\x33\xc2\x63\xb0\x7e\x0a\xf2\xd9\xfe\x29\x99\xc4\x81\xf5\x9b\x48\x08\xd3\x21\x74\x14\xb7\x46\x5c\x59\x7f\x49\x6c\x31\xaa\xfe\x16\x2e\x59\x8a\x8a\x32\x10\xa1\x12\xc6\xf6\xfa\x47\x3e\xd7\x80\xd2\x34\x57\x83\xe9\x07\x5a\x05\x52\x18\x1c\x04\x6f\x46\xb6\x88\xe6\x29\xcf\x1b\xcd\xef\x25\x8c\x80\x03\xf5\x72\x5b\x98\x15\xd5\xbe\x2e\xa1\x20\xad\xef\x7e\x49\xa3\x9c\xc2\x41\x7a\x24\xb1\x43\xfb\x2b\xc1\x67\x8b\xf0\x80\xf8\x73\x1b\xe9\x67\x05\x9e\xfa\xcb\x0d\x30\x59\x3c\xbc\xb5\x74\x60\xa2\xa4\x5e\x05\x64\xd1\xf9\x1a\x24\x5e\x92\x44\xf6\x40\x81\x2f\x24\xc0\x14\x0a\xfa\x03\x9c\xb3\x41\x23\xc6\x43\x2c\xfb\xc8\xc7\x12\x9a\x92\x84\xb0\x08\x4d\xc8\x7c\xed\xbb\xaf\x8a\x47\xdf\x4f\x4e\x45\x4d\x9c\x27\xc2\xe8\x15\x48\x49\x68\xe6\xa9\xb9\xa6\x36\xb1\x27\x76\xcc\x83\xc7\x0d\x5a\xcc\x1d\xb3\xc8\x41\xe3\x91\xe7\xb1\x98\xce\xb5\x39\x5e\x40\x80\xca\x41\x8e\xbe\xe4\x9e\x00\x8f\xc3\xbc\xb1\x9b\xb5\x5d\x3c\x7e\x36\xc6\xf9\xa4\x9f\x40\x14\xb0\x69\x08\x54\x9e\x33\xb3\xba\xa4\xf0\x3e\x51\xc6\x39\x24\x14\x4b\x66\xa9\x4c\x42\xd9\xf4\x42\xbb\xf6\x39\x1b\x1a\xe2\x28\x22\x74\x6c\x77\x58\xf4\x79\xeb\x66\x74\xaf\x31\x1f\xc3\xcc\xe9\x63\x14\xea\xdb\xa5\x2a\x54\x1b\x2e\x7a\xcc\xc3\xbe\xcb\x83\x6e\x98\x67\x02\x3d\x30\x7e\x1b\x30\xec\xeb\x23\xb3\x31\x4d\x7c\x45\x2f\xbf\xcb\xe7\x98\x7f\x0b\xd6\x9c\x95\x97\x88\x2c\x88\x9a\x3f\xb4\x85\x13\x73\xbf\x92\x91\x07\x97\x87\xa0\xf9\x42\x8d\xa3\xb7\x67\x09\x51\x79\xa7\x83\xa8\x87\xf7\x9d\xfc\xcd\x89\x21\xab\xe2\x5c\xe5\xc2\x02\x12\x04\xc6\x38\x94\xbc\x96\xa6\x41\xae\x63\x5c\x51\x74\x75\x16\x74\x52\x3e\x2f\xac\xd4\x3e\x61\xac\xf2\x00\x88\xea\x25\xaf\x92\x62\x23\x57\xcc\x39\x9e\x16\x9e\x68\x9f\xa3\xec\x7a\x15\x06\xd4\xe6\x7d\xa9\xa1\xcd\xb9\x53\x89\x49\x13\xb6\x43\xf5\x8b\x12\x47\xb5\x21\xce\xcd\x9e\x9f\x58\xe0\x8b\x34\x8a\xd7\xa1\x97\xa9\xe4\x34\xb1\x98\xc2\xa0\x67\x93\xc1\x89\xce\xa8\x90\x98\x7a\xd0\x5a\x45\x47\x2b\x57\x88\x6c\x20\x9e\x25\x2f\xfa\x25\xe9\x24\xcf\x1a\x97\x0c\xa6\x42\xa5\x9f\xe5\x47\xd1\x18\x7c\xdd\xf5\x25\x8c\x89\x90\x7c\xfa\xc4\x22\xd1\xc8\x51\x8a\xfc\x2b\xc8\xc6\x00\x23\x9e\xf6\xf8\x54\x52\x4a\x75\x49\x47\xf3\x39\x4d\xca\xc7\xf7\x6e\xf3\x7b\x54\xcc\x54\xcc\x31\xb5\x2b\x2e\xec\xf7\x38\x88\x1d\x7e\xb4\x6d\x44\xcb\x99\x88\x2a\x6a\xd3\x82\xb6\x62\x7e\x25\x4f\xb6\x3d\xaf\x0b\xf3\xb9\x7e\x42\xa4\x51\x0c\x7d\xca\x6f\x9a\xcc\x44\x5d\x5c\xf1\xae\x24\x96\x05\xc7\x36\x27\x15\xa0\x71\x68\x6b\x97\x72\x03\x0c\x0a\xb0\x9d\x16\x0e\xd8\x9f\xba\x7b\x48\x76\x63\x6d\xef\xd4\x35\x3e\x3a\x37\x38\x57\xf6\x15\x88\xdd\x03\x60\xa6\xa4\x72\x2e\xed\x0a\x9a\x6c\xbf\x1a\x61\xfd\x8e\x05\x8a\x02\x4c\xc1\x4a\x87\x99\xcd\xdd\xc6\x2a\x93\x6b\x0e\xe3\x15\xee\x86\x2d\x93\x15\xd6\x61\x83\xf9\x4b\x11\x77\xa5\x25\x31\x6f\xc8\x44\x0e\xa2\x62\x2e\x56\x35\x4e\x11\x94\x42\xbd\x65\xb8\xd0\xda\x5b\x78\x49\xc5\x8e\x60\xeb\x2b\xd3\x53\xbb\x43\xcb\x70\xf1\x98\x71\xbc\x4a\xf4\xd5\xc9\x94\x6d\x9f\x96\x62\x2c\xef\xb7\x2c\x1d\xc1\x3b\x3d\x93\xa5\x1d\x99\xe5\xaa\xeb\xdc\x26\xd0\xba\x7b\x3c\xc1\x94\x42\x30\xc7\xd6\xf9\x30\xc2\x71\x20\xd5\x5d\x3c\x0c\xa0\xc2\x02\x26\x0f\xf3\x02\x3f\x01\xa1\x7c\xfb\x65\xad\xa9\x31\x9b\x36\x6e\x16\x45\x39\xc3\xea\x27\x5b\xa9\xf9\xee\xbe\x5c\x3f\xd9\x9d\x88\xb3\x7b\xa2\x9c\x73\x7b\x89\x54\x80\xb9\x07\x05\xbd\xb3\x3d\x99\xb9\xc9\x36\xe5\x7f\xd9\x04\x19\xc7\x64\x80\x4d\xcc\x6c\x3d\x29\x9d\x6b\xeb\x8a\x93\x14\x36\x5b\x81\xe6\xa9\x4e\x85\xdb\x9a\xa9\x7b\x81\x96\x32\x5e\xf7\x17\x49\xf2\x51\x7f\xf6\x41\x12\xf3\x7c\x90\xba\x53\x75\xc9\x5c\xe4\x53\x66\xf4\xce\x24\x64\xa3\x7e\x66\x65\x9b\xe7\x39\x70\x0a\x52\x2f\x84\x62\x82\x23\xc8\xdd\x8e\x38\xf3\x40\x08\xfb\x58\x3a\x75\xdb\x64\x63\x27\x98\xfa\x41\x3e\xbb\x96\x33\x12\x79\xbd\x70\xf8\x00\x2e\xad\x50\x3e\x80\x6b\xe8\x4b\x1f\x4a\xd1\x6a\x98\x24\x2a\x06\x41\x92\xa9\xc8\x3d\xd5\xd3\x71\xa0\x17\x98\x55\x9d\x8e\x92\x7c\x53\x32\x16\xb7\xc8\x9b\x9a\x45\x43\x9d\x58\xa6\x6c\x44\x1d\xcc\xd5\xc5\x55\x4e\xe0\xd8\x68\x2d\xa9\xd4\x26\xce\x65\xe2\x8a\xeb\x4d\xc1\x15\x5b\xcd\x6d\xca\xb9\x24\x4b\xb6\xcd\x19\x9e\x22\x75\xdf\xc2\xcd\xaa\x60\x66\xc9\x85\x34\xad\x7e\x18\xa4\x5f\x27\x73\xae\xa9\xc5\x44\xbf\xb9\xd2\xbc\x2a\xa1\x72\xaf\xe7\x58\x3f\xbe\x5b\xdf\xee\x09\x9c\xba\x6f\xe2\xcd\x3d\x85\xe2\x2e\xd9\xda\xed\xfd\xfd\x09\xdc\xbe\x86\xdb\xdd\xb3\xbe\x59\x52\x8c\x77\xd5\x13\x67\xa8\xf8\xf7\xe6\x8c\x84\x4b\x88\x38\x08\xd5\x63\xf9\x93\x52\x22\x8e\x22\xc6\x25\xf8\x68\x38\xd5\x21\xe5\xd1\xdb\xb3\xa4\x61\x29\x1f\x5d\x5e\xdb\x50\x79\x7d\x33\xb7\x92\x89\x5d\xb8\x6b\xf8\x7d\x4a\x8c\x1f\x05\xa3\x83\x1c\xda\x6f\xb4\xbb\x57\x5c\x72\x4b\xe3\x71\x81\x43\x70\x7f\xf5\xac\x35\xcf\x00\xd8\x0f\x2a\xac\xa5\xf3\xc3\x70\x8f\xeb\x29\x59\xe9\x4b\x6a\x9c\x2f\x1c\x4f\x80\x96\xe9\xeb\xa9\x26\x4c\xd1\xb5\x28\x12\x37\x8f\xee\x23\xfb\x67\x89\xf8\xda\x32\x22\x1e\xa3\x83\xe2\x26\x66\xa9\xb3\x77\x97\xe7\xc9\x86\x8a\x82\x5f\xbd\xb7\x00\x0f\x17\x8d\xc7\xb9\x06\xc9\x8a\x81\xb0\x84\x31\xe3\xe4\x33\x38\xce\xe8\x7e\xc4\xb8\x54\x2b\x0d\x8e\xf0\x90\x04\xa4\x3c\x39\x5c\xaf\x86\x59\xc0\x65\x23\xe4\xa9\xf1\xfe\xa2\xc4\xd6\x38\x18\xcc\xb2\xa0\xe9\x75\xa4\x0d\x4e\x9a\x4a\xd6\x55\x58\x1e\xa6\x76\x09\xd6\xbd\x39\xce\x01\x10\x2e\xb9\x91\x25\x6c\xd9\x84\x19\x11\x08\x7c\xb7\x2e\x94\x2c\x10\xb2\x8d\xde\x8f\xc3\x40\x79\xd9\xfa\x13\xac\xe7\xe6\x73\x88\x1b\xe5\xb2\xd1\x2c\xda\x32\xc5\xa3\xee\xaf\x40\xaa\x89\x72\x76\xa2\x8c\x06\x07\x8f\xf1\xd9\xcb\x51\x85\xa1\x77\x28\x79\xa1\x26\xd4\x51\x11\x6a\x97\xe0\x18\x1a\xac\xd2\xa0\xe2\x51\x44\x85\x93\x04\xc7\x80\x08\xf5\xe1\x53\x09\xfb\x08\x07\x02\xea\x53\x59\x2e\xc2\x2a\x16\x06\x99\xbd\x0b\xd4\x48\xb6\x42\xed\x8a\x20\x43\xb4\x55\xc0\x34\x97\xe8\x8b\x38\x1c\x02\x57\xa2\xd4\xe3\x89\x08\x45\x80\xbd\x89\xcd\xf4\x13\xb2\x51\xac\x5c\x9a\xb1\xd1\x6e\x1b\x46\x92\x8f\xa6\x39\x3d\xb7\xff\x64\xd3\xf6\x2a\x29\x0c\x37\x1b\x6a\xba\x91\x32\x91\x1e\x27\x12\x38\xc1\x2d\xad\x21\x62\x4a\x25\xfe\x64\x96\x16\x22\x32\x55\x43\x44\x58\x04\x85\x24\xc0\x3c\xfd\xd2\xb4\xdd\x04\xd0\x4d\x8a\xf8\x06\x79\x01\x8e\x85\xf6\x53\x30\x45\x57\xbf\x9e\x9b\x78\xc7\x7c\x25\x3b\xc5\x75\xaa\xe4\xa6\x05\x9d\xda\x0e\xdd\xde\x58\x6f\x4c\xa7\x33\xb4\xb9\x69\x70\x63\x6c\x84\xc8\xf0\xbc\x64\x3c\x15\xdd\x96\x22\x8c\xeb\x23\x28\xf4\x77\xb5\x8f\x73\xae\x84\xb0\x3b\x90\x13\x20\x5c\x0f\xfe\x96\xb2\x59\xba\xa7\x11\x0b\x02\xf6\xa0\x3f\xfa\xac\x19\xeb\x6f\xcc\x3a\xb9\xb9\xb9\x11\x77\x59\x49\x9b\x6a\x87\xb0\xf0\xec\xe7\x19\xf0\xf5\xf2\x44\xa0\x01\xa6\xfe\x20\x75\xcd\x1e\x43\xd2\xd6\xec\x03\xc5\x95\xf4\x99\xef\x8c\xe7\x46\x98\x6e\x4a\x93\xd2\xf4\xc1\xdf\x42\x8c\x23\x62\x60\xb4\xc6\x21\x22\x10\x84\x91\x9c\x6e\xa9\x7b\x99\xef\x6c\xb6\x8e\x44\x1c\xa8\x88\x80\xe7\xc6\x4f\x51\xd3\x9a\xe9\x75\x14\x30\x1f\x72\xaf\x17\x96\x75\xbd\xa0\xca\xb6\xba\xa7\xac\x35\x2a\x66\xa8\x99\xc2\x09\x82\xc7\xce\x42\x21\xa7\x01\xf4\x75\x7e\xc0\xd8\x0a\xfd\x95\x41\xf7\x0c\xcb\x26\x98\x06\xca\x26\x94\xa5\x0b\xf3\x67\xd6\x82\x19\xf5\x30\x01\x0e\xb9\xe9\x94\x75\x99\x9b\x55\xe8\x48\xe9\x09\xf8\xc9\xec\x50\x76\x49\xa3\x33\x74\xa9\xc1\xb9\x51\x52\xba\xd9\x42\x37\x16\x0b\xea\x67\xa2\x2d\xea\x4f\xed\x1c\xde\x6c\x21\x4c\x7d\x74\x93\xf8\xee\x37\xd9\x44\x4b\xbb\x30\x55\x82\x8c\x9b\x41\xbf\xf9\x9f\xbf\xab\xb6\xcf\x6f\xb4\xda\xdc\x9c\x9f\xfd\x72\xea\x68\xe3\x31\xfa\x31\xa6\x9e\x24\xf7\x50\x6c\x7f\x74\x71\x72\x63\xba\x7c\x73\x79\xd3\x42\x3f\xb1\x07\xb8\x07\xbe\x85\xa6\x2c\xd6\x86\x41\x71\x8e\x51\x88\x3f\x91\x30\x0e\x95\x0c\x3a\xed\x0c\x1d\xa3\x9a\x57\x9c\x72\xaa\xd5\xc2\x12\xff\xe9\x4c\xcf\x5c\xb3\xb3\x10\x1a\x9b\xb7\x68\x94\xdc\xb4\xc6\xdd\xe0\x07\xd1\x14\x77\xa2\x69\xb2\x4c\x86\x48\xed\x56\x1a\xd1\xa0\x1b\xb3\xd9\x71\x53\x77\xba\xe6\xe7\xea\x73\x94\xc7\xaf\xd1\xa7\xa8\x9f\xe7\x77\x59\x74\xf3\x7f\x46\xcd\x7f\xb9\xd9\x30\x75\x21\x24\xa9\x7d\x30\x6c\x60\xd3\x8b\x29\xf1\x97\x98\x4b\x61\xee\x2b\xae\x56\xa4\x38\x20\xb7\xa0\x88\xfe\x4b\x77\xf7\x8b\x18\x16\x6d\x2e\xd5\xc3\xfc\xb0\x58\xf6\x06\x4b\xfd\x3c\x16\xc0\xd1\x04\x0b\x14\x01\x0f\x89\x10\x49\x61\x88\x00\xd0\x2a\x65\xe4\x02\xbe\xa5\x07\x17\x4c\x42\x2b\xa5\xcf\x2c\x3a\x59\x55\xbe\xd2\xf8\x24\x71\x4f\x84\xd5\xba\xda\x7c\x25\x4e\x83\xd6\xb9\x0a\xa3\xe4\x36\x40\x8e\x35\x3e\x67\x5f\x50\xd1\xec\xd5\xd2\x92\xc6\x6a\xe6\x6d\x23\x7b\x39\x47\xef\xa7\xa4\x64\x25\x6f\xe7\xd8\x48\xa1\x8f\x86\xfa\x6e\x72\xd3\xfc\x78\x99\x24\x51\x7f\x7e\x7f\xbd\x61\xf7\x38\x91\x32\x52\xd8\xf3\xdc\xd6\x3a\x08\xb1\x50\x65\x62\x04\xdd\x78\x3d\xcd\x9d\x13\x32\xef\x83\xdf\x05\x04\xc4\xef\xa3\x80\x8d\x07\x82\xd0\xdb\x41\xbb\xd5\x99\x3d\x30\xc5\x68\x39\x4c\xb3\x67\x4b\x15\xba\x25\xdf\xba\xb7\x3b\x69\x14\xe8\x3f\x67\x63\x74\x45\xe8\xed\xec\x76\x9a\x82\x41\x8d\x1c\xb4\x2b\x5f\xd2\x2c\x5a\x82\x7c\xb0\x5e\xc4\x9c\xa5\x13\x56\xa4\xbf\x15\xd1\x71\x46\x51\x39\x5f\xd0\x44\xc2\xee\xaf\x2a\x5a\x6f\xea\x7d\xb3\x41\x71\xdf\xac\xe9\xda\x37\x2b\xc7\xa0\xd5\x95\x80\x61\x58\x4e\xcb\x64\x53\xed\x9f\xff\x2a\xc6\x63\x44\x06\x66\x00\xea\x46\xc5\xd5\x9d\xab\x2b\x8c\x03\x49\x06\x01\xa1\xce\xb7\x3a\x66\x5b\xe4\xf6\x94\xcf\x03\x58\x63\xf7\x5a\xe1\x42\xe7\x84\xba\x20\x13\xc2\xe7\xc3\x54\x9c\xb3\x9a\x5e\x9f\x9a\x63\xce\xe2\xa8\x8f\x1a\x40\xfd\x88\x11\x2a\xcb\x35\x99\x62\xc2\x1e\x06\x38\x08\x1e\xcf\xce\xd5\x84\x3d\xa8\xf5\xbe\x9a\x99\x79\x10\x8f\x64\x45\xb2\x88\x78\x0b\xf2\x8c\x2c\x0c\x95\x9f\xa0\x56\x27\x09\xfe\xac\x04\xcd\x2c\x9e\x1a\x81\x9e\xae\xc2\xad\x42\xd7\xd5\x00\x55\xc9\x21\x9b\x6c\x3d\xe9\xf2\x34\x0b\x09\xd1\xe3\x13\x08\x85\xf4\x7a\x76\x35\xe7\x2a\x72\x82\x93\x0a\xe0\x72\xa0\x9d\xc6\x2a\x98\xea\xb0\xb2\x7c\x1d\xf9\xbe\xde\x1c\x88\x85\x64\xa1\xf1\x45\x53\x6f\xc4\x63\xda\x3d\x91\xc9\xca\x9f\xf8\xbb\x21\x08\x61\xf2\x00\x48\x72\x4c\x05\x91\xc5\xec\x4f\x76\x2d\x66\x47\x5d\x0b\x78\x29\xf1\x73\x9d\xba\x7b\x89\xcf\x6d\x88\x96\x4c\x05\xa4\xd8\xf7\xad\xa2\x0f\xd7\x95\x28\xc7\x4b\xd5\x68\x3e\x60\xb5\x92\xd8\x57\xa9\xc8\xb2\x06\xf5\x46\xa0\x36\xf9\x75\x48\xfe\x4d\xb5\x7a\x3c\xc9\xee\xad\x97\xfc\xd5\x5c\x48\x55\xd3\x30\x51\x09\x91\xd0\x7c\xa6\xd5\xd5\x48\x1b\x1d\x79\xb2\xb8\x91\x53\xa6\xde\x69\xe0\xeb\x51\xde\xcc\xcd\x0e\x27\xd0\x82\x3e\xea\xcc\x40\xf8\x24\x39\xf6\x96\x9b\x82\xa7\xa6\x0d\xc2\x89\xb2\x8e\x38\x33\xe7\x76\x0f\x99\x5f\xb4\x1a\xd9\xf5\xc7\x9f\x3e\x4f\xa1\x8b\x09\x45\xa9\x88\xbf\x96\xaa\xe5\xd4\xe0\x4b\xe9\xda\x04\x8b\xc1\x04\xb0\x0f\x7c\x30\x22\x81\x84\x52\xcd\x40\x76\xe5\xc6\xf8\xa5\x06\x46\x43\x2c\x54\xf4\x6f\x32\x0b\x66\x2b\xd8\xd3\xe3\xce\x28\x20\x83\xf7\x91\xca\xe7\xda\xfd\x9c\x43\x97\xd2\x3d\xd3\x6f\x12\xeb\x32\x04\xca\x8e\x64\x55\x4d\xee\x2b\x7d\xeb\x26\x69\x7c\x51\xdc\x25\x2e\x5e\x89\x4e\xfc\x64\xba\x5a\x0c\xfe\x74\xba\x5a\xda\xc0\x76\x91\x85\x45\x4a\x5a\x32\x50\x5f\x5e\x5d\x4b\x9a\x54\x4f\x65\xe7\x7f\xde\xdd\x19\xfa\xbd\x9e\x9e\xb3\xb1\x5d\xbe\xb3\xa0\xfa\xab\xf0\x8e\x91\xe3\x78\x49\xeb\x8d\x30\xd4\x38\x1c\x8a\xfb\xb6\xd8\x97\x14\xf6\xc7\xed\xee\x78\xb2\x3b\xee\x59\xd1\x4f\xa9\x72\xd2\x6a\xb3\x37\xe4\x23\xde\x6e\x77\xa3\x11\xbd\x9d\xb4\xf3\x1d\xa4\xaf\x1e\xa2\x86\xe0\xf7\x5e\x13\x7b\x9e\x6c\x76\xf6\xba\x30\xea\xfa\x07\xcd\x76\xb7\x7d\xd8\xec\x75\x3a\xfb\xcd\x83\xde\x5e\xb7\xe9\x8f\xf6\x76\xbc\x6e\xbb\xbb\xeb\x75\xf7\x1c\x58\x92\xd7\x12\x51\x63\xd8\xe9\xf5\xfc\xc3\xc3\x4e\xb3\x7d\x00\xc3\x66\xaf\xb7\xdf\x6d\x1e\x80\xd7\x69\xc2\xb0\xbd\xd3\xf3\xf6\x0e\xbb\x3b\x9d\xa1\xdd\x3e\xe6\x41\x1f\x35\x46\x8c\x35\x5d\xf4\xb6\x6e\xb1\x68\x61\x2f\x84\x96\xc7\xc2\x7e\xaf\xb7\xd3\x28\x44\x63\xce\x8a\x4c\x8b\xfd\xf6\xed\x41\x40\xc7\xed\x9d\x8e\x80\xc3\xbb\x1a\xec\x43\xbb\xbb\xdb\xdd\xdb\x85\x26\x3e\x38\xc0\xcd\x5e\x6f\x34\x6c\x1e\xf4\x76\xdb\x4d\xf0\xdb\x9d\x36\x0c\xf7\x86\xde\xae\x37\x8f\x7d\xdf\xdb\xc5\x07\xdd\xc3\x83\xe6\x10\xfc\xfd\x66\xaf\xdb\x85\xe6\xc1\x61\x6f\xbf\x39\xda\x1b\xf9\x78\xef\xb0\x7b\xd8\x1d\x8d\xca\xec\x0f\x31\x4f\xd8\xef\x86\x23\x0f\xb7\xdb\x5d\x79\x78\xb7\x2f\xc6\x2d\xc1\xab\xd8\x4f\xab\x13\x8b\x61\x77\xb9\xce\x11\x35\xdc\x31\xbf\xb3\xe2\xd4\x15\xb9\xce\x62\x2f\x3b\xb5\x64\xae\x2c\xce\x14\xa5\xa7\x49\xac\xa3\x07\x77\x6b\x88\xf3\x07\x4d\xcd\x82\xee\x7c\x57\xb7\x30\x2d\xce\xe6\xb4\x02\xae\x71\x75\x7d\x79\x76\xf1\x2a\x1f\x9b\x38\xfd\xd0\x59\x8b\x9f\xaf\xde\x5c\x14\x5e\xdc\x4b\x62\xfa\x62\x05\xce\xfc\x00\x23\xc9\xee\xe8\xa7\xca\xac\x96\xc3\xd3\x34\x17\xa6\x41\xb4\xcb\x5a\x55\xb0\x59\xa8\xe2\xd6\xe9\xbc\x41\x5a\x87\x6b\x77\xed\x03\xf6\x07\x01\x48\x65\x03\xee\x62\x28\xb2\xa9\xa5\xab\x14\x2e\xb8\x33\x5d\x55\x7f\xc7\xc1\x91\x6a\x6a\x74\xda\x96\x2e\x25\xc6\xa8\x70\x72\xc4\xfc\xec\x8c\xf9\x7a\xc3\x76\x0e\x8f\x7e\xe7\x1f\x35\x8e\xdf\x5c\x5c\x9c\x1e\x5f\xbf\xb9\x6c\xbe\x7e\xf5\xfa\xba\x99\x03\x49\xde\xf4\x47\x8d\x2b\xeb\x6b\x2d\xe9\x77\x5c\x04\xa2\x4c\x66\xe5\x11\x26\xfb\xab\xbf\xeb\xf2\x5c\xe9\x56\xf9\xad\xb1\xc2\x51\x00\xa8\xd1\x21\xef\xcf\x48\x78\xf7\xca\xe3\x27\xf1\xf9\x5e\x07\xbf\xfb\x74\xf6\x8f\xbb\x17\xd7\x77\x17\x97\x78\x26\xa5\x33\x93\x4d\xfd\x35\x06\x3e\xad\x21\xa9\xee\x13\x49\xaa\xbb\x50\x50\x5d\x87\x9c\xfe\x63\x0d\xfa\x4b\x4c\x02\x53\xb5\x10\x61\x2e\x20\xb7\x97\xd0\x47\xef\xa8\xb2\x03\xea\xa9\xce\x18\xfc\x62\x7f\x04\x51\xe8\x57\xa8\x70\x44\x06\x26\xa9\x96\x14\xc7\xf7\x51\x89\x82\xfe\x12\xfd\x65\x75\x2c\x1e\x0b\xe2\x90\x1a\xef\x46\xf5\x94\x24\x8b\xd1\x26\xf1\x37\x5b\xe8\xca\x05\xa7\x77\x55\xec\xde\x94\x21\x67\x74\x2b\xd9\xeb\xf4\x02\x16\xfb\x83\x24\x23\xcf\xd3\xbb\xa6\x9e\xb5\x85\x7e\x35\x99\x71\x33\x90\x7d\x44\x7c\xf4\x1c\x75\xba\x3b\x95\x5a\x11\xbc\x3f\x79\x15\x4f\x87\x67\xfc\x94\x7e\xe2\x47\x10\xee\x77\x7b\xe3\xbb\xdb\x5b\x72\x72\x9f\x6a\x45\xf1\xf4\x18\x97\x26\xf4\xda\xbd\x27\xd1\x84\xfd\x45\x8a\xb0\xef\x98\x2f\x75\xbe\x74\x31\x63\xc6\x79\x32\x99\x8b\xa5\xfd\x6f\xc7\xd0\x71\xee\xa4\x59\x44\xfc\xe7\x9b\x1d\xf2\xcb\x8e\x1f\xff\xf6\xe1\xec\xfe\x7e\xf7\xc3\xfd\x79\x30\xfd\xdc\x09\x5f\x5d\xee\xfc\x3c\xbd\xbb\xd8\xd4\xa6\x61\xc4\x62\xea\xcf\x99\xfc\x1f\xde\xec\x8f\xbb\xe3\xbd\x9f\xae\xfd\x77\xbf\xbc\xc3\xdd\x5b\xf1\xd3\x41\xf7\xf6\xd7\x93\x9d\x69\x2a\x99\xe2\x49\x4a\x4e\xd3\xd8\x79\x1a\xcb\xd8\x59\x68\x18\x3b\x0e\xb1\x64\xd3\xf8\x1e\x38\x19\x4d\xd1\xcf\xef\xaf\xcd\xf9\x4c\x7d\x74\x99\x38\xbc\x08\xc7\x72\xc2\x38\xf9\x9c\xbe\x6b\x7c\x0b\xb4\x9e\x7c\x76\xde\x4d\x4e\x27\x0f\xe1\xef\x2f\xa2\xf7\x6f\x47\x67\xdd\xe0\x02\x6e\x23\xbf\xf7\x8f\x93\x54\x3e\x87\x6a\x79\x3b\x66\x74\x14\x10\x4f\xd6\x90\xd5\xce\xde\x93\xc8\xca\x46\xe3\x96\x95\x0d\x61\xab\x90\xa9\x9b\x33\x96\x87\x08\x84\x03\xbd\xbc\xea\xf2\xae\x4a\x39\xec\xdd\x7e\x68\xbf\x23\xa7\xb7\x9f\x6f\x7f\x3f\xfe\xfc\xfe\x2d\x9c\x75\xd9\x07\x98\xf8\x3b\xa7\x89\x18\xca\x47\x22\xb9\x58\x3f\x7c\x12\xce\x0f\x17\x31\x7e\xe8\xd4\x91\xec\x08\x45\xc8\x77\x5a\x1a\x72\x38\x3d\xbf\x7f\x79\xf8\xf1\xf5\xaf\x1f\xf6\x3e\x8c\x27\xa3\xd7\x87\xe3\x57\x97\xe2\xa7\xfb\xd3\xf7\x33\x5e\x6b\x1b\x8b\x6f\xc7\xb1\xbd\x0a\xea\x3e\xcd\x9b\x6e\xc9\x76\xb0\x27\x94\xeb\xfd\xe6\xf8\x75\xf3\xf4\xf7\xe6\x61\x1f\x8d\x66\xeb\x96\x79\x1f\x2e\x83\x81\x4f\xb2\x99\xac\x7d\x38\x22\xcd\x0e\xf9\xd4\xde\x09\xa8\x1f\x84\x77\xed\xbb\x91\xb7\x2f\x88\xc4\xbb\x22\xf8\x78\x7f\x60\xfb\xb1\x23\xeb\xa8\x2f\x25\x87\xce\x78\xd7\x3f\x38\xb8\x6b\x07\xdc\xf3\xef\x7b\xe3\x7d\x1c\x0c\xf7\x45\x30\x1a\xd3\x8f\x3b\xfe\x64\x28\x3e\xfe\xe5\xff\xfd\xf5\xf4\xf7\xeb\xcb\x23\xf4\x5f\x86\xe3\x96\xa6\xf8\x39\xf1\x81\x4a\x35\x66\x76\x10\x4a\x04\xda\xec\xb5\x7b\x9b\x5b\x5a\x16\xfa\xe7\xf1\xf9\xbb\xab\xeb\xd3\xcb\x2b\x23\x0c\xf5\x50\xef\xa5\xce\x06\x16\x65\x88\x34\x7c\x67\xbc\xcb\xf8\x6e\xfb\x9e\xc4\xed\x7d\x06\x6a\xd8\x26\xfc\xd6\xeb\xee\xf9\xe3\x91\xfc\xd8\xc1\xde\xa6\xbd\xc8\xa6\xa7\x5f\x6f\x2e\x62\xc2\xb2\xb7\x7f\x9b\x63\x4f\xae\xc5\x7b\x3e\xdd\xa3\xe2\x6e\xd8\x15\x17\xe1\xcb\x8f\xbb\xc3\xdf\xa3\x93\xfd\x63\xdc\xd8\xf8\xbf\x00\x00\x00\xff\xff\x63\x3a\x93\x18\xc6\xa0\x00\x00")

func connector_mgmtYamlBytes() ([]byte, error) {
	return bindataRead(
		_connector_mgmtYaml,
		"connector_mgmt.yaml",
	)
}

func connector_mgmtYaml() (*asset, error) {
	bytes, err := connector_mgmtYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "connector_mgmt.yaml", size: 41158, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"connector_mgmt.yaml": connector_mgmtYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"connector_mgmt.yaml": &bintree{connector_mgmtYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

openapi: 3.0.0
info:
  description: Connector Service Fleet Manager apis that are used by internal services.
  title: Connector Service Fleet Manager Private APIs
  version: 0.0.3
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- description: only accessible by connector fleet shard agents
  name: Connector Clusters Agent
paths:
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/status:
    put:
      description: Update the status of a connector cluster
      operationId: updateKafkaConnectorClusterStatus
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorClusterStatus'
        description: Cluster status update data
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of a connector cluster
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments:
    get:
      description: Returns a list of connector deployments assigned to the cluster.
      operationId: getClusterAsignedConnectorDeployments
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index
        examples:
          page:
            value: "1"
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        in: query
        name: size
        required: false
        schema:
          type: string
      - description: filters the connectors to those with a version greater than the
          given value
        explode: true
        in: query
        name: gt_version
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: watch for changes to the resources and return them as a stream
          of watch events. Specify gt_version to specify the starting point.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentWatchEvent'
          description: A list of connector
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of connector deployments assigned to the cluster.
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}:
    get:
      description: Returns a list of connector deployments assigned to the cluster.
      operationId: getClusterAsignedConnectorDeploymentById
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the deployment
        explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeployment'
          description: A connector deployment
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: deployment has been deleted
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of connector deployments assigned to the cluster.
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}/status:
    put:
      description: update the connector deployment status
      operationId: updateConnectorDeploymentStatus
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the deployment
        explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorDeploymentStatus'
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: deployment has been deleted
      security:
      - Bearer: []
      summary: update the connector deployment status
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces:
    get:
      description: Returns all connector namespaces assigned to the cluster.
      operationId: getClusterAsignedConnectorNamespaces
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index
        examples:
          page:
            value: "1"
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        in: query
        name: size
        required: false
        schema:
          type: string
      - description: filters the connectors to those with a version greater than the
          given value
        explode: true
        in: query
        name: gt_version
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorNamespaceDeploymentList'
          description: All connector namespaces in cluster
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: cluster has been deleted
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns all connector namespaces assigned to the cluster.
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}:
    get:
      description: Returns a connector namespace assigned to the cluster.
      operationId: getClusterAsignedConnectorNamespaceById
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the namespace
        explode: false
        in: path
        name: namespace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorNamespaceDeployment'
          description: A connector namespace
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: namespace has been deleted
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a connector namespace assigned to the cluster.
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}/status:
    put:
      description: update the connector namespace status
      operationId: updateConnectorNamespaceStatus
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the namespace
        explode: false
        in: path
        name: namespace_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorNamespaceDeploymentStatus'
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: namespace has been deleted
      security:
      - Bearer: []
      summary: update the connector namespace status
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v2alpha1/agent/kafka_connector_clusters/{connector_cluster_id}/processors/deployments:
    get:
      description: Returns a list of processor deployments assigned to the cluster.
      operationId: getClusterAssignedProcessorDeployments
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index
        examples:
          page:
            value: "1"
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        in: query
        name: size
        required: false
        schema:
          type: string
      - description: filters the processors to those with a version greater than the
          given value
        explode: true
        in: query
        name: gt_version
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: watch for changes to the resources and return them as a stream
          of watch events. Specify gt_version to specify the starting point.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorDeploymentList'
          description: A list of processors
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of processor deployments assigned to the cluster.
      tags:
      - Connector Clusters Agent
  ? /api/connector_mgmt/v2alpha1/agent/kafka_connector_clusters/{connector_cluster_id}/processors/deployments/{processor_deployment_id}
  : get:
      description: Returns a processor deployment assigned to the cluster.
      operationId: getClusterAssignedProcessorDeploymentById
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the processor deployment
        explode: false
        in: path
        name: processor_deployment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorDeployment'
          description: A processor deployment
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: deployment has been deleted
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a processor deployment assigned to the cluster.
      tags:
      - Connector Clusters Agent
  ? /api/connector_mgmt/v2alpha1/agent/kafka_connector_clusters/{connector_cluster_id}/processors/deployments/{processor_deployment_id}/status
  : put:
      description: update the processor deployment status
      operationId: updateProcessorDeploymentStatus
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the processor deployment
        explode: false
        in: path
        name: processor_deployment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessorDeploymentStatus'
        required: true
      responses:
        "200":
          description: Processor deployment status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: deployment has been deleted
      security:
      - Bearer: []
      summary: update the processor deployment status
      tags:
      - Connector Clusters Agent
components:
  examples:
    "400InvalidIdExample":
      value:
        id: "21"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/21
        code: KAFKAS-MGMT-21
        reason: Bad request
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "404"
        kind: Error
        href: /api/connector_mgmt/v1/errors/7
        code: CONNECTOR-MGMT-7
        reason: The requested resource doesn't exist
    "401Example":
      value:
        id: "11"
        kind: Error
        href: /api/connector_mgmt/v1/errors/11
        code: CONNECTOR-MGMT-11
        reason: 'Unable to verify JWT token: Required authorization token not found'
        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD
    "500Example":
      value:
        id: "9"
        kind: Error
        href: /api/connector_mgmt/v1/errors/9
        code: CONNECTOR-MGMT-9
        reason: Unspecified error
        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW
  schemas:
    MetaV1Condition:
      example:
        reason: reason
        last_transition_time: last_transition_time
        type: type
        message: message
        status: status
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
        last_transition_time:
          type: string
      type: object
    WatchEvent:
      properties:
        type:
          type: string
        error:
          $ref: '#/components/schemas/Error'
        object:
          nullable: true
          type: object
      required:
      - type
      type: object
    ConnectorDeployment:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/ConnectorDeployment_allOf'
      description: Holds the deployment configuration of a connector
    ConnectorDeploymentSpec:
      description: Holds the deployment specification of a connector
      properties:
        service_account:
          $ref: '#/components/schemas/ServiceAccount'
        kafka:
          $ref: '#/components/schemas/KafkaConnectionSettings'
        schema_registry:
          $ref: '#/components/schemas/SchemaRegistryConnectionSettings'
        connector_id:
          type: string
        connector_resource_version:
          format: int64
          type: integer
        connector_type_id:
          type: string
        namespace_id:
          type: string
        connector_spec:
          type: object
        operator_id:
          description: an optional operator id that the connector should be run under.
          type: string
        desired_state:
          $ref: '#/components/schemas/ConnectorDesiredState'
        shard_metadata:
          type: object
      type: object
    ConnectorDeploymentStatus:
      description: The status of connector deployment
      example:
        operators:
          available:
            id: id
            type: type
            version: version
          assigned:
            id: id
            type: type
            version: version
        conditions:
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        resource_version: 0
      properties:
        phase:
          $ref: '#/components/schemas/ConnectorState'
        resource_version:
          format: int64
          type: integer
        operators:
          $ref: '#/components/schemas/ConnectorDeploymentStatus_operators'
        conditions:
          items:
            $ref: '#/components/schemas/MetaV1Condition'
          type: array
      type: object
    ConnectorDeploymentList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ConnectorDeploymentList_allOf'
      required:
      - items
    ConnectorDeploymentWatchEvent:
      allOf:
      - $ref: '#/components/schemas/WatchEvent'
      - $ref: '#/components/schemas/ConnectorDeploymentWatchEvent_allOf'
    ConnectorOperator:
      description: identifies an operator that runs on the fleet shards used to manage
        connectors.
      example:
        id: id
        type: type
        version: version
      properties:
        id:
          description: the id of the operator
          type: string
        type:
          description: the type of the operator
          type: string
        version:
          description: the version of the operator
          type: string
    ConnectorClusterPlatform:
      description: information about the kubernetes platform
      example:
        id: id
        type: type
        version: version
      properties:
        type:
          description: the kubernetes cluster type
          type: string
        id:
          description: uniquely identifies the kubernetes cluster
          type: string
        version:
          description: optional version of the kubernetes cluster
          type: string
      type: object
    ConnectorClusterStatus:
      description: Schema for the request to update a data plane cluster's status
      example:
        operators:
        - namespace: namespace
          operator:
            id: id
            type: type
            version: version
          status: status
        - namespace: namespace
          operator:
            id: id
            type: type
            version: version
          status: status
        conditions:
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        version: version
        platform:
          id: id
          type: type
          version: version
        namespaces:
        - connectors_deployed: 0
          id: id
          conditions:
          - reason: reason
            last_transition_time: last_transition_time
            type: type
            message: message
            status: status
          - reason: reason
            last_transition_time: last_transition_time
            type: type
            message: message
            status: status
          version: version
        - connectors_deployed: 0
          id: id
          conditions:
          - reason: reason
            last_transition_time: last_transition_time
            type: type
            message: message
            status: status
          - reason: reason
            last_transition_time: last_transition_time
            type: type
            message: message
            status: status
          version: version
      properties:
        phase:
          $ref: '#/components/schemas/ConnectorClusterState'
        version:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/MetaV1Condition'
          type: array
        platform:
          $ref: '#/components/schemas/ConnectorClusterPlatform'
        operators:
          description: the list of installed operators
          items:
            $ref: '#/components/schemas/ConnectorClusterStatus_operators'
          type: array
        namespaces:
          items:
            $ref: '#/components/schemas/ConnectorNamespaceDeploymentStatus'
          type: array
      type: object
    ConnectorNamespaceDeploymentList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ConnectorNamespaceDeploymentList_allOf'
      required:
      - items
    ConnectorNamespaceDeployment:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/ConnectorNamespaceMeta'
      - $ref: '#/components/schemas/ConnectorNamespaceDeployment_allOf'
      description: A connector namespace deployment
    ConnectorNamespaceDeploymentStatus:
      description: Schema for the request to update a data plane namespaces' status
      example:
        connectors_deployed: 0
        id: id
        conditions:
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        version: version
      properties:
        id:
          type: string
        phase:
          $ref: '#/components/schemas/ConnectorNamespaceState'
        version:
          type: string
        connectors_deployed:
          format: int32
          type: integer
        conditions:
          items:
            $ref: '#/components/schemas/MetaV1Condition'
          type: array
      required:
      - connectors_deployed
      - id
      - phase
      - version
      type: object
    ProcessorDeployment:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/ProcessorDeployment_allOf'
      description: Holds the deployment configuration of a processor
    ProcessorDeploymentSpec:
      description: Holds the deployment specification of a processor
      properties:
        processor_id:
          type: string
        namespace_id:
          type: string
        processor_type_id:
          type: string
        desired_state:
          $ref: '#/components/schemas/ProcessorDesiredState'
        shard_metadata:
          type: object
        processor_resource_version:
          format: int64
          type: integer
        kafka:
          $ref: '#/components/schemas/KafkaConnectionSettings'
        service_account:
          $ref: '#/components/schemas/ServiceAccount'
        definition:
          type: object
        error_handler:
          $ref: '#/components/schemas/ErrorHandler'
        operator_id:
          description: an optional operator id that the processor should be run under.
          type: string
      type: object
    ProcessorDeploymentStatus:
      description: The status of processor deployment
      example:
        operators:
          available:
            id: id
            type: type
            version: version
          assigned:
            id: id
            type: type
            version: version
        conditions:
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          status: status
        resource_version: 0
      properties:
        phase:
          $ref: '#/components/schemas/ProcessorState'
        resource_version:
          format: int64
          type: integer
        operators:
          $ref: '#/components/schemas/ConnectorDeploymentStatus_operators'
        conditions:
          items:
            $ref: '#/components/schemas/MetaV1Condition'
          type: array
      type: object
    ProcessorDeploymentList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ProcessorDeploymentList_allOf'
    Error:
      nullable: true
      properties:
        reason:
          type: string
        operation_id:
          type: string
        id:
          type: string
        kind:
          type: string
        href:
          type: string
        code:
          type: string
      required:
      - code
      - href
      - id
      - kind
      - reason
      type: object
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    ConnectorResourceAnnotations:
      additionalProperties:
        type: string
      description: Name-value string annotations for resource
      type: object
    ServiceAccount:
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      required:
      - client_id
      - client_secret
    KafkaConnectionSettings:
      allOf:
      - $ref: '#/components/schemas/ServiceConnectionSettings'
      description: Holds the configuration to connect to a Kafka Instance.
    ServiceConnectionSettings:
      properties:
        id:
          type: string
        url:
          type: string
      required:
      - id
      - url
    SchemaRegistryConnectionSettings:
      allOf:
      - $ref: '#/components/schemas/ServiceConnectionSettings'
      description: Holds the configuration to connect to a Schem Registry Instance.
    ConnectorDesiredState:
      enum:
      - unassigned
      - ready
      - stopped
      - deleted
      type: string
    ConnectorState:
      enum:
      - assigning
      - assigned
      - updating
      - ready
      - stopped
      - failed
      - deleting
      - deleted
      - provisioning
      - deprovisioning
      type: string
    List:
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    ConnectorClusterState:
      enum:
      - disconnected
      - ready
      - deleting
      type: string
    ConnectorNamespaceMeta:
      allOf:
      - $ref: '#/components/schemas/ObjectMeta'
      - $ref: '#/components/schemas/ConnectorNamespaceRequestMeta'
      - $ref: '#/components/schemas/ConnectorNamespaceMeta_allOf'
    ObjectMeta:
      properties:
        owner:
          type: string
        created_at:
          format: date-time
          type: string
        modified_at:
          format: date-time
          type: string
      type: object
    ConnectorNamespaceRequestMeta:
      properties:
        name:
          description: Namespace name must match pattern `^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$`,
            or it may be empty to be auto-generated.
          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
          type: string
        annotations:
          additionalProperties:
            type: string
          description: Name-value string annotations for resource
          type: object
      type: object
    ConnectorNamespaceQuota:
      properties:
        connectors:
          format: int32
          type: integer
        memory_requests:
          description: Memory quota for limits or requests
          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
          type: string
        memory_limits:
          description: Memory quota for limits or requests
          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
          type: string
        cpu_requests:
          description: CPU quota for limits or requests
          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
          type: string
        cpu_limits:
          description: CPU quota for limits or requests
          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
          type: string
      type: object
    MemoryQuota:
      description: Memory quota for limits or requests
      pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
      type: string
    CpuQuota:
      description: CPU quota for limits or requests
      pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
      type: string
    ConnectorNamespaceTenant:
      properties:
        kind:
          $ref: '#/components/schemas/ConnectorNamespaceTenantKind'
        id:
          description: Either user or organisation id depending on the value of kind
          type: string
      required:
      - id
      - kind
      type: object
    ConnectorNamespaceTenantKind:
      enum:
      - user
      - organisation
      type: string
    ConnectorNamespaceStatus:
      properties:
        state:
          $ref: '#/components/schemas/ConnectorNamespaceState'
        version:
          type: string
        connectors_deployed:
          format: int32
          type: integer
        error:
          type: string
      required:
      - connectors_deployed
      - state
      type: object
    ConnectorNamespaceState:
      enum:
      - disconnected
      - ready
      - deleting
      - deleted
      type: string
    ProcessorResourceAnnotations:
      additionalProperties:
        type: string
      description: Name-value string annotations for resource
      type: object
    ProcessorDesiredState:
      enum:
      - ready
      - stopped
      - deleted
      type: string
    ErrorHandler:
      default: {}
      oneOf:
      - $ref: '#/components/schemas/ErrorHandlerLog'
      - $ref: '#/components/schemas/ErrorHandlerStop'
      - $ref: '#/components/schemas/ErrorHandlerDeadLetterQueue'
      type: object
    ErrorHandlerLog:
      additionalProperties: false
      properties:
        log:
          type: object
      required:
      - log
      type: object
    ErrorHandlerStop:
      additionalProperties: false
      properties:
        stop:
          type: object
      required:
      - stop
      type: object
    ErrorHandlerDeadLetterQueue:
      additionalProperties: false
      properties:
        dead_letter_queue:
          $ref: '#/components/schemas/ErrorHandlerDeadLetterQueue_dead_letter_queue'
      required:
      - dead_letter_queue
      type: object
    ProcessorState:
      enum:
      - preparing
      - prepared
      - provisioning
      - ready
      - updating
      - stopped
      - failed
      - deprovisioning
      - deleting
      - deleted
      type: string
    ConnectorDeployment_allOf_metadata:
      properties:
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        resource_version:
          format: int64
          type: integer
        resolved_secrets:
          type: boolean
        annotations:
          additionalProperties:
            type: string
          description: Name-value string annotations for resource
          type: object
      required:
      - created_at
      - resolved_secrets
      - resource_version
      - updated_at
    ConnectorDeployment_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ConnectorDeployment_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ConnectorDeploymentSpec'
        status:
          $ref: '#/components/schemas/ConnectorDeploymentStatus'
    ConnectorDeploymentStatus_operators:
      example:
        available:
          id: id
          type: type
          version: version
        assigned:
          id: id
          type: type
          version: version
      properties:
        assigned:
          $ref: '#/components/schemas/ConnectorOperator'
        available:
          $ref: '#/components/schemas/ConnectorOperator'
    ConnectorDeploymentList_allOf:
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ConnectorDeployment'
          type: array
    ConnectorDeploymentWatchEvent_allOf:
      properties:
        object:
          $ref: '#/components/schemas/ConnectorDeployment'
    ConnectorClusterStatus_operators:
      example:
        namespace: namespace
        operator:
          id: id
          type: type
          version: version
        status: status
      properties:
        operator:
          $ref: '#/components/schemas/ConnectorOperator'
        namespace:
          description: the namespace to which the operator has been installed
          type: string
        status:
          description: the status of the operator
          type: string
    ConnectorNamespaceDeploymentList_allOf:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorNamespaceDeployment'
          type: array
    ConnectorNamespaceDeployment_allOf:
      properties:
        name:
          type: string
        cluster_id:
          type: string
        expiration:
          description: Namespace expiration timestamp in RFC 3339 format
          type: string
        tenant:
          $ref: '#/components/schemas/ConnectorNamespaceTenant'
        status:
          $ref: '#/components/schemas/ConnectorNamespaceStatus'
      required:
      - cluster_id
      - id
      - name
      - resource_version
      - status
      - tenant
    ProcessorDeployment_allOf_metadata:
      properties:
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        resource_version:
          format: int64
          type: integer
        resolved_secrets:
          type: boolean
        annotations:
          additionalProperties:
            type: string
          description: Name-value string annotations for resource
          type: object
      required:
      - created_at
      - resolved_secrets
      - resource_version
      - updated_at
    ProcessorDeployment_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ProcessorDeployment_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ProcessorDeploymentSpec'
        status:
          $ref: '#/components/schemas/ProcessorDeploymentStatus'
    ProcessorDeploymentList_allOf:
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ProcessorDeployment'
          type: array
    ConnectorNamespaceMeta_allOf:
      properties:
        resource_version:
          format: int64
          type: integer
        quota:
          $ref: '#/components/schemas/ConnectorNamespaceQuota'
    ErrorHandlerDeadLetterQueue_dead_letter_queue:
      properties:
        topic:
          description: The name of the Kafka topic that serves as a destination for
            messages which were not processed correctly due to an error.
          title: Dead Letter Topic Name
          type: string
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http

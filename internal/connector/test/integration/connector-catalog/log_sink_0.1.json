{
  "connector_type" : {
    "json_schema" : {
      "type" : "object",
      "properties" : {
        "log_multi_line" : {
          "title" : "Multi Line",
          "description" : "Multi Line",
          "type" : "boolean",
          "default" : false,
          "x-group" : "common"
        },
        "log_show_all" : {
          "title" : "Show All",
          "description" : "Show All",
          "type" : "boolean",
          "default" : false,
          "x-group" : "common"
        },
        "dinosaur_topic" : {
          "title" : "Topic Names",
          "description" : "Comma separated list of Dinosaur topic names",
          "type" : "string"
        },
        "processors" : {
          "type" : "array",
          "items" : {
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "insert_field" ],
              "properties" : {
                "insert_field" : {
                  "$ref" : "#/$defs/processors/insert_field"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "extract_field" ],
              "properties" : {
                "extract_field" : {
                  "$ref" : "#/$defs/processors/extract_field"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "has_header_filter" ],
              "properties" : {
                "has_header_filter" : {
                  "$ref" : "#/$defs/processors/has_header_filter"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "throttle" ],
              "properties" : {
                "throttle" : {
                  "$ref" : "#/$defs/processors/throttle"
                }
              }
            } ]
          }
        }
      },
      "required" : [ "dinosaur_topic" ],
      "$defs" : {
        "processors" : {
          "insert_field" : {
            "title" : "Insert Field Action",
            "description" : "Adds a custom field with a constant value to the message in transit.\n\nThis action works with Json Object. So it will expect a Json Array or a Json Object.\n\nIf for example you have an array like '{ \"foo\":\"John\", \"bar\":30 }' and your action has been configured with field as 'element' and value as 'hello', you'll get '{ \"foo\":\"John\", \"bar\":30, \"element\":\"hello\" }'\n\nNo headers mapping supported, only constant values.",
            "required" : [ "field", "value" ],
            "properties" : {
              "field" : {
                "title" : "Field",
                "description" : "The name of the field to be added",
                "type" : "string"
              },
              "value" : {
                "title" : "Value",
                "description" : "The value of the field",
                "type" : "string"
              }
            },
            "type" : "object"
          },
          "extract_field" : {
            "title" : "Extract Field Action",
            "description" : "Extract a field from the body",
            "required" : [ "field" ],
            "properties" : {
              "field" : {
                "title" : "Field",
                "description" : "The name of the field to be added",
                "type" : "string"
              }
            },
            "type" : "object"
          },
          "has_header_filter" : {
            "title" : "Has Header Filter Action",
            "description" : "Filter based on the presence of one header",
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "title" : "Header Name",
                "description" : "The header name to evaluate",
                "type" : "string",
                "example" : "headerName"
              },
              "value" : {
                "title" : "Header Value",
                "description" : "An optional header value to compare the header to",
                "type" : "string",
                "example" : "headerValue"
              }
            },
            "type" : "object"
          },
          "throttle" : {
            "title" : "Throttle Action",
            "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
            "required" : [ "messages" ],
            "properties" : {
              "messages" : {
                "title" : "Messages Number",
                "description" : "The number of messages to send in the time period set",
                "type" : "integer",
                "example" : 10
              },
              "timePeriod" : {
                "title" : "Time Period",
                "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                "type" : "string",
                "default" : "1000"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "id" : "log_sink_0.1",
    "kind" : "ConnectorType",
    "icon_href" : "TODO",
    "name" : "Log Sink",
    "description" : "Log Sink",
    "version" : "0.1",
    "labels" : [ "sink" ],
    "capabilities" : [ "processors" ],
    "channels" : [ "stable" ]
  },
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "connector_revision" : "5",
        "connector_type" : "sink",
        "connector_image" : "quay.io/mcs_dev/log-sink:0.0.1",
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "kamelets" : {
          "adapter" : {
            "name" : "log-sink",
            "prefix" : "log"
          },
          "dinosaur" : {
            "name" : "managed-dinosaur-source",
            "prefix" : "dinosaur"
          },
          "processors" : {
            "insert_field" : "insert-field-action",
            "extract_field" : "extract-field-action",
            "has_header_filter" : "has-header-filter-action",
            "throttle" : "throttle-action"
          }
        }
      }
    }
  }
}
// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package generated generated by go-bindata.// sources:
// .generate/openapi/fleet-manager.yaml
package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _fleetManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x79\x73\xdb\xb8\x92\xff\xdf\x9f\xa2\x57\xd9\x57\x7a\x6f\xcb\x92\xa9\xc3\x47\x54\x9b\xad\x72\x62\x67\xc6\x33\x89\x93\xf8\x98\x4c\xe6\xd5\x2b\x19\x22\x5b\x22\x6c\x12\xa0\x01\xd0\xb6\xb2\xbb\xdf\x7d\x0b\x00\x6f\x52\x87\x1d\x67\x12\xef\xc4\x55\x29\x47\x14\xd0\x6c\xfc\xd0\xe8\x6e\x74\x37\x60\x1e\x21\x23\x11\x1d\xc1\xa0\xeb\x74\x1d\x78\x06\x0c\xd1\x03\xe5\x53\x09\x44\xc2\x94\x0a\xa9\x20\xa0\x0c\x41\x71\x20\x41\xc0\x6f\x41\xf2\x10\xe1\xe8\xe0\x50\xea\x47\x57\x8c\xdf\xda\xd6\xba\x03\x83\x84\x1c\x78\xdc\x8d\x43\x64\xaa\xbb\xf1\x0c\xf6\x83\x00\x90\x79\x11\xa7\x4c\x49\xf0\x70\x4a\x19\x7a\xe0\xa3\x40\xb8\xa5\x41\x00\x13\x04\x8f\x4a\x97\xdf\xa0\x20\x93\x00\x61\x32\xd7\x6f\x82\x58\xa2\x90\x5d\x38\x9a\x82\x32\x6d\xf5\x0b\x12\xee\x38\x5c\x21\x46\x96\x93\x9c\x72\x2b\x12\xf4\x86\x28\x6c\x6d\x02\xf1\xf4\x18\x30\xd4\x4d\x95\x8f\xd0\x0a\x09\x23\x33\xf4\x3a\x12\xc5\x0d\x75\x51\x76\x48\x44\x3b\x49\xfb\xee\x9c\x84\x41\x0b\xa6\x34\xc0\x0d\xca\xa6\x7c\xb4\x01\xa0\xa8\x0a\x70\x04\x07\x94\x71\x49\x62\x01\xa7\xb6\x1f\xbc\x0e\x10\x15\xbc\x35\xd4\xc4\x06\xc0\x0d\x0a\x49\x39\x1b\x41\xaf\xdb\xeb\xf6\x37\x00\x3c\x94\xae\xa0\x91\x32\x0f\x97\x77\xb7\x23\x3a\x41\xa9\x60\xff\xfd\x91\x66\xd5\x72\x99\x77\xa3\x4c\x2a\xc2\x5c\x94\xdd\x0d\xcd\x38\x0a\xa9\x79\xeb\x40\x2c\x82\x11\xf8\x4a\x45\x72\xb4\xb5\x45\x22\xda\xd5\xb0\x4b\x9f\x4e\x55\xd7\xe5\xe1\x06\x40\x85\x8f\xb7\x84\x32\xf8\x7b\x24\xb8\x17\xbb\xfa\xc9\x3f\xc0\x92\x6b\x26\x26\x15\x99\xe1\x2a\x92\xa7\x8a\xcc\x28\x9b\x35\x12\x1a\x6d\x6d\x05\xdc\x25\x81\xcf\xa5\x1a\xed\x39\x8e\x53\xef\x9e\x7d\x9f\xf7\xdc\xaa\xb7\x72\x63\x21\x90\x29\xf0\x78\x48\x28\xdb\x88\x88\xf2\x0d\x02\x9a\xcd\x2d\x2f\x41\x49\x8e\xc3\x59\xa8\xb6\x6e\x7a\x23\x43\x60\x86\xca\xfe\x07\xb4\x30\x0a\xa2\x29\x1d\x79\x23\xfd\xfc\x37\x3b\x59\x6f\x51\x11\x8f\x28\x92\xb4\x12\x28\x23\xce\x24\xca\xb4\x1b\x40\xab\xef\x38\xad\xfc\x23\x80\xcb\x99\x42\xa6\x8a\x8f\x00\x48\x14\x05\xd4\x35\x2f\xd8\xba\x94\x9c\x95\xbf\x05\x90\xae\x8f\x21\xa9\x3e\x05\xf8\x77\x81\xd3\x11\xb4\x9f\x6d\xb9\x3c\x8c\x38\x43\xa6\xe4\x96\x6d\x2b\xb7\x2a\x2c\xb6\x0b\x9d\x4b\xc8\x24\xed\x20\x2c\x8f\x45\xc6\x61\x48\xc4\x7c\x04\x27\xa8\x62\xc1\xa4\x11\xfe\x9b\x7a\xdb\x66\x00\xb7\xa4\x22\x2a\x96\x2b\x71\x4c\xa4\xf9\xd4\xb4\xfe\x1e\x51\x2c\x31\xb8\x10\xc3\x77\x57\x39\xab\xdb\x15\x56\x4b\x0d\xcf\x19\xde\x45\xe8\x2a\xf4\x00\x85\xe0\x02\xb8\x6b\x24\xd3\xfb\x16\x63\x3b\xd4\x1c\xb4\x2b\x5d\xf0\x8e\x84\x51\x50\x04\x3f\xfd\xd9\x76\x9c\x43\xfb\x65\xfd\xbb\xe6\x17\xa5\xb4\xb6\xf2\xae\xed\x65\xe2\x65\x85\x06\xf8\x54\xcb\x00\x8f\x85\x8b\x72\x13\x64\xec\xfa\xda\x80\xdc\xfa\xa8\xb5\x37\x84\xe4\x8e\x86\x71\x08\x89\xfe\x05\x97\x44\xc4\xa5\x6a\x0e\x3e\x91\x30\x41\x64\x20\x90\xb8\x7e\x06\xa9\x44\x37\x16\x54\xcd\x73\xa6\x3b\xf0\x12\x89\x40\x31\x82\x7f\xfe\x6b\xb1\x04\x67\x4f\xb6\xfe\x9b\x7a\xff\xbb\x52\x92\x53\x4d\xfb\x72\x7e\xe4\x7d\x8f\x82\x9c\xf2\x77\x82\xd7\x31\x4a\xb5\xfe\xb4\x57\x3a\xfe\x84\xea\x24\x19\xd7\x43\xa5\xa1\x42\xb1\x22\x19\xeb\xbc\xf9\x23\x55\xfe\x6b\x42\x03\xf4\x5e\x09\x34\x38\xd9\x05\xfa\x48\x1c\x2d\x21\xbd\x50\x05\x64\x96\x56\x58\x1a\x30\xe5\x31\xf3\xb4\x07\x72\x74\x90\x4f\xff\xd0\xe9\x7d\x9b\xe9\xbf\xe7\x5a\x1f\x3a\xbd\x87\x62\x99\x77\x5d\x88\xd5\x7e\xac\x7c\x50\xfc\x0a\x99\x76\x5c\x28\xbb\x21\x01\xf5\x8a\x20\x0d\x9e\x08\x48\x83\x87\x83\x34\x58\x05\xd2\xb9\x44\x01\x8c\x2b\x20\xb1\xf2\xb9\xa0\x9f\xad\xbb\x4a\x5c\x17\x65\xa2\x2e\xad\x06\x2c\x02\x37\x7c\x22\xc0\x0d\x1f\x0e\xdc\x70\x15\x70\xc7\xbc\xbe\x18\x6f\xa9\xf2\x41\x46\xe8\xd2\x29\x45\x0f\x8e\x0e\x00\xef\xa8\x54\x72\xb1\xd9\xfe\x5e\xb1\x7b\x54\x2b\x5c\xc3\x6e\x95\x7f\xb2\xd2\x98\x42\x93\x6d\x27\xf5\x09\xc9\xf5\xa2\x87\x01\x2a\x6c\x34\xab\xf6\xab\x06\xcb\x1a\x11\x41\x42\x54\xc9\x2e\x26\x65\x84\xb2\x11\x5c\xc7\x28\xe6\x85\xd1\x31\x12\xe2\x08\x88\x9c\x33\x77\xd1\x98\xdf\xa3\x98\x72\x11\x9a\x25\x45\xcc\xa6\x06\x28\xd3\x3b\x50\xd3\xcb\x17\x9c\xf1\x58\xea\x0d\x15\x33\xbb\x93\x65\x73\xad\xe6\x11\x8e\x60\xc2\x79\x80\x84\x15\xbe\xd1\xa3\xa6\x02\xbd\x11\x28\x11\xe3\x52\xf7\xa0\xff\xfd\x49\x61\x95\xd2\xb3\x63\x0e\xaf\x2c\x63\x0b\xad\xa1\x99\xb9\x92\x4e\x7f\x1a\xcb\x6b\xe8\x38\x86\x77\xca\xd9\xc3\x55\x54\x95\xc4\xe2\xbd\x97\x36\x7c\x66\xbc\x76\xb9\xc9\xfa\x7e\xe0\x87\xcb\xf0\xc3\x65\xf8\xe1\x32\x68\x97\xc1\xea\x94\x2f\x70\x1c\x4a\x04\xfe\xba\xee\xc3\x97\xe1\x58\x25\xf0\x70\x57\x22\xf5\x12\x2c\xb9\x15\x5e\xc2\x5a\xae\x47\x44\x94\xeb\x8f\xaa\xf4\xcf\x23\x8f\x28\x2c\x92\x4f\x83\xa1\x9a\x3e\xbd\x97\x6b\x53\x72\x4f\x62\x43\xb8\x71\xe3\x6f\xd8\x7f\xc9\xbd\x02\xb5\x32\x38\x96\x27\x7e\xcb\x50\x00\x9f\x42\x1a\x6c\xd8\x58\x22\x3f\xcb\xa5\xa7\x59\x76\xd6\x89\x08\x58\x5e\x6a\x71\x81\x7b\xf8\x2c\x4b\x02\x5e\x19\xe6\x16\xac\xea\x86\xf8\x09\x06\x40\xde\x73\xf9\xd5\x23\x20\x35\x77\xa9\x84\xe9\x4b\xe2\xa5\x22\xf6\x1d\x68\x9c\x9a\x83\x72\x0f\xbb\xfd\x4d\xb9\x1e\x2c\x09\xd3\x4a\x9b\x53\x29\xd8\x52\xb9\xd2\x96\x7e\xd3\xc1\x0c\x17\x0f\xa6\x68\xd0\x6c\x50\xca\x98\x33\x33\x84\x82\x49\xfb\x1e\xc6\xf1\x24\x63\xe7\xf5\xcd\x68\x27\xe9\xda\x2a\x75\xcd\xdb\x6d\x51\xaf\xb5\x46\xe0\xd9\x92\x8b\xb8\x6c\x0e\x3a\xbb\x02\x0b\xe6\xe7\xff\xd7\xce\x78\x95\xfd\xcc\x04\xba\x90\xb1\xfa\x53\x8d\x66\x6a\x0c\xc8\x3c\xe0\xc4\x2b\x1b\x93\x45\xa6\xe4\xfc\xf4\x04\x67\xb4\x2e\x7f\x2b\x8c\x45\xda\x6d\x41\x9c\xfc\xf0\xfc\x41\x54\xd3\x6e\x35\xaa\xdf\x7f\xac\xe2\x29\x59\xf2\xaa\x39\x74\x5d\x8c\x9e\x6a\x60\x24\x4d\x88\x7c\x41\x60\xa4\x42\xe2\x47\x60\xe4\x47\x60\x24\x05\xe9\x91\x03\x23\x19\xd9\xb7\xe4\x6e\x3f\x08\xf8\x2d\x7a\x47\xc9\xb6\xef\xc4\xe6\x87\xbf\xe0\x7d\xab\x68\x36\x32\x72\x86\x22\x94\xc7\x5c\xa5\x3a\xe0\x0b\xde\xbf\x80\xd4\xf2\xc0\xd0\x94\x8b\x09\xf5\x3c\x64\x80\xd4\x64\xd2\x27\xe8\x92\x58\xa2\x31\xef\x71\xdd\xe3\x5d\x18\x3d\x02\x5e\xee\x9b\x66\xe4\x59\x1c\x4e\xec\x76\x36\xab\x36\x02\xe5\x13\x05\x2e\x61\x30\xc1\xc4\x61\x31\x5b\x40\x53\xe7\x65\xde\x59\xcd\xda\x77\x17\x7b\xb5\xdf\xaf\xec\x7e\xcd\x74\xd6\x99\x8f\xa9\x43\x84\x5e\x56\x18\x01\x1e\x47\xc9\xda\xca\x06\xa2\x8a\x98\x3d\x7f\x22\x98\x3d\x3f\x26\x21\xbe\xe2\x6c\x1a\x50\x57\x3d\x1c\xbf\x26\x32\x8b\x95\xa5\xc6\xc3\xb4\xcc\xe5\xce\x43\x65\x37\x15\x94\x19\x69\x76\x13\x13\xa5\xe5\xd8\x88\x69\x0a\xf9\xe2\x6d\xca\xf7\x0a\xf2\xd7\xcd\x15\xee\x33\x88\x17\x6d\xc9\xe0\xd6\xa7\x41\x8a\x25\x9b\x19\x60\xab\xd1\xbd\x84\xee\xfd\x52\x8a\xc6\x81\x68\x0c\x16\x9a\x96\x85\x02\x9d\x86\x2c\x64\x40\xa5\xd2\xd3\x5a\xed\x2a\x9b\xb6\x57\x85\x9a\x1e\x79\x1f\x56\xef\x1d\x22\xdb\x5f\xc9\xd7\x9f\x2a\x63\x15\x8f\xf6\x0d\x2d\x7a\xd8\x4f\x29\x30\x65\x7f\x16\xaf\x8e\x23\xeb\x2b\x7d\xd0\xfb\xe2\x2f\x70\x69\x1b\xc8\x3c\xf5\xe0\xd8\x2a\xe4\x1e\xd9\xa3\xfd\xeb\x3a\xa9\x5f\x9a\xbd\x7b\x92\xf1\xb2\x75\x90\x7e\x54\xcb\xd5\x1c\x13\x6b\x22\x52\x08\xd1\x45\x64\x56\x98\xaa\x95\xcd\x25\xfd\x7c\x9f\xe6\x5c\x78\x28\x5e\xce\xef\xf3\x02\x24\xc2\xf5\x75\x87\x67\xfa\x9f\x76\x0b\x25\x02\x11\xb9\xfb\xde\x99\x12\x57\xdb\x5a\x81\x81\x71\xb3\xb3\xe3\x0c\x49\x9f\xb5\xea\x5c\xb7\x42\x54\x82\xba\x72\xcb\x84\x0b\xc7\x82\xb0\x59\x32\x05\xcb\x4c\x6b\xd2\x29\x09\x2c\xd3\x10\x25\x0a\x8a\x12\x4c\x77\x1b\x79\xd4\x5e\x7f\x66\xdf\xb2\x68\x73\xd5\xe2\xbe\xb5\x84\x5e\xce\x4f\x74\xcf\x0f\x85\x90\xe5\x43\x6d\x6f\xbb\xef\x38\xed\x85\x6b\xc4\x0e\x00\x3d\xf8\xe5\xf4\xdd\x31\x10\x21\xc8\x5c\x1b\xe2\xf7\x82\x87\xa8\x7c\x8c\xf3\xa1\xf1\xc9\x25\xba\x4a\xc2\x54\xf0\x10\xf8\x44\x2f\x45\xa2\xb8\xa0\x71\xf8\x2d\x96\x53\x82\x53\x8e\x52\xd9\x4c\xb7\x87\x4e\x6f\xf1\xa0\x7f\x98\x1d\x0b\xd2\xf6\x32\xc9\xf8\xa1\x3d\xd7\xd0\x9e\x2b\x12\x1c\x6b\x36\xf6\x62\xab\x03\xee\xd1\x85\x32\xa5\x17\x60\x70\x8f\x2e\x53\x1a\xe8\xdf\xeb\x24\x5e\x1a\x34\xe1\x3d\x75\xa0\x0d\x80\xa8\x07\xa9\x3e\x1b\x52\x52\x3f\x94\xdf\x0a\xe5\x57\xc4\xe9\x87\xfa\xfb\xa1\xfe\xb2\x9f\x27\xa6\xfe\x32\xc5\xb4\xb1\x91\x37\xd0\x2f\x4b\x86\x6f\xdf\xfb\xce\x2c\xc1\x13\x9c\xa2\x40\xe6\x66\x23\xb3\x79\x55\xbb\x3e\x53\x8e\x85\x56\x2d\x8a\x16\xa1\xa1\x5e\x11\x0a\xdb\x49\x2a\x41\xd9\x2c\x7b\x7c\x45\xd9\xea\x46\xbe\x1e\xca\xb2\x46\x7a\x21\x8e\x32\x85\x94\x64\x12\x0b\x58\xe8\xb7\x14\x3e\x6a\x2f\xbb\xf0\x51\x7b\xd1\x85\x8f\x8a\x2b\x12\x14\x3e\x53\x85\xa1\xbc\xdf\xc0\xd7\x1a\x95\xe6\xa2\xde\x48\xdb\x98\x59\x21\xb1\xad\x99\x5b\xdd\xca\xf0\xbc\xbc\x99\x11\xe7\xb4\x09\x09\x82\x77\xd3\x55\xa2\x95\x2e\x84\x8a\x10\x14\x85\xac\x01\x8f\x45\x98\x80\x59\xbb\x5e\x6d\x75\x34\x62\x03\x66\x22\x49\xc3\x4a\x5e\xd8\x3c\xb3\x6c\xe3\xb2\xd8\x35\x76\x32\x60\x14\xa5\xe6\x5e\x80\xe8\x8e\x5f\x80\x82\x11\xa8\x66\x16\x8d\x39\xac\x7c\xd3\xd8\x1c\x96\x32\x68\x86\x67\x39\xac\x04\xd6\xbe\xb1\x00\x14\x0f\xe8\xe6\x3f\x25\x1b\xd0\xfa\x8d\x04\x31\xca\x11\xfc\x93\x24\x79\xa6\x4d\x88\x04\x46\x44\x4f\x9e\xfe\x2f\xbf\xa1\x92\x72\x66\x3e\x09\x24\xde\x7c\x13\xa6\xe6\xe8\xdc\x26\x78\x98\x7d\xbd\x69\xcf\x71\x50\x36\xfb\x17\xb4\xd6\x95\x21\x37\xe0\xb1\x37\x36\x34\x3c\x14\xcb\xd9\x3c\x26\x21\x6a\xc7\xe5\x95\xee\xa3\xb7\xc2\x26\x6e\xe2\x61\x14\xf0\x79\x17\x5e\x73\x91\xda\x0a\xd8\xff\x78\xba\x36\x07\x61\x1c\x28\x3a\x26\x9f\x9b\xc5\xa3\x5e\xc9\xa2\x97\x49\x53\x1d\x46\x13\xa4\xd9\x6d\x05\xb6\x8b\x39\xf2\x9a\xd4\x62\xb9\x76\xe8\x90\x0e\xbd\x34\x80\x11\xc4\xb2\x83\x44\xaa\x4e\x0f\xa6\x5c\xdc\x6b\x3c\xa6\xd6\x74\xed\x35\x4c\x5c\x97\xc7\x4c\x8d\x6d\x4e\x6f\xed\x6e\xa6\xa8\x68\xed\x39\xb6\xf9\xc0\x31\x51\xd5\x2e\x53\x2e\x42\xa2\x46\xe0\x11\x85\x1d\x45\x43\x5c\x97\x64\x52\x65\xfa\x98\x24\xad\x44\x8f\xef\xa9\x03\xd3\xdb\x1c\xd6\x6d\x9f\x66\x4c\xc7\xa6\xc5\x7a\xbd\x1a\x8f\xe7\x34\x69\x8f\x15\xd5\x2a\x8d\xea\xe9\x6b\xab\xe4\x46\xe6\x8d\xb5\x86\x56\x03\x2b\x65\x31\x37\x06\x1b\x5a\xbd\xf2\x53\x63\xa0\x6b\x4f\xad\x41\xae\x3d\xd6\xba\xbc\x8a\xf3\x17\x56\xfa\x7c\x5d\x2b\x53\x99\x84\xfc\x67\xf9\x74\x54\xd8\xb6\x20\x54\xee\x86\xf8\x93\x4c\xd1\xb2\x29\xdf\x7f\x7f\x94\x30\x55\x99\x26\xfd\xe5\x4d\x65\xee\x7c\xcb\x56\xf3\x36\xbe\x55\xf1\x73\x82\x00\x4d\xe9\x62\x0d\xd2\x8e\x25\x9e\x11\xa8\x6a\xd2\x15\xef\xd9\x5a\xd2\xb1\x22\xc7\x55\x01\x5e\xec\x94\x2d\x64\xf6\xcf\x12\x97\xc6\x59\x2d\x5d\x82\x91\xd2\x2c\xdf\xe1\x62\xba\x1b\x9b\x54\x2c\x14\x49\x2e\x74\x48\x23\x13\x30\xe1\x5e\xca\x7e\x4d\x18\x2a\x65\xaf\xf6\x27\x24\x77\xe3\xf4\x82\x87\x71\x52\x21\x52\x2a\x4c\x5c\x73\x1b\xd0\x48\xbc\x56\x66\x51\xc8\xbf\x26\x55\x16\x24\xa2\xc9\x20\x6a\x1e\x7d\x4d\xbc\xeb\xdb\x1d\x0b\x77\xd3\x18\xd6\x10\x86\xc6\xa1\x2f\xf3\x2d\x8e\x98\xa7\x37\xde\x98\x5f\x95\x71\x8b\xe0\x93\x1b\x4c\x4b\x6b\xf2\xf1\xa5\x15\x3b\x29\xfd\x95\x2e\x4e\x73\xd9\xeb\x3a\xa2\x90\x1d\xe5\xe1\xde\x1c\x24\x32\xa5\x7d\xb3\x7c\xed\xc0\xfb\x77\xa7\x67\x4b\xf6\x8b\xda\xa1\xb8\xdf\x54\x2f\xf6\x1c\x6b\xf3\x5d\xf6\xb4\x34\x6c\x49\x3a\x25\x03\xca\x0d\x62\xa9\xf4\x57\x89\xbf\x96\x96\x30\x51\xb6\x6a\x4f\xd9\xe4\x3e\x96\x71\x42\x65\xeb\x4b\x14\x37\x02\xad\x7f\xbb\x9c\x4d\xe9\x2c\x5e\xc4\x85\xe2\x9a\x07\x43\x79\xff\x8f\x1a\x03\x55\x97\xb4\xea\x8b\x95\xde\xde\xd6\xe3\x67\x89\xe3\xdc\xf4\xb2\x2e\x1c\x29\x08\x63\xa9\x34\x53\x32\x29\x50\x08\xf8\x2d\x8a\x8e\x4b\x24\x02\x09\x22\x9f\xb0\x38\x44\xa1\x5d\x56\x9f\x08\xe2\x2a\x14\x12\xb8\x80\x76\xbb\xd3\x6e\x6f\xea\x75\x23\x92\xa3\x73\x84\xd9\xf6\x13\x54\xc5\xd6\x9b\x40\x98\xc9\x53\x95\x5b\xd5\xa8\xda\x76\x2e\x61\x26\x3d\x3a\x41\x08\x38\x9b\x69\x3c\x7c\xc2\x60\xd0\x2f\xbc\xbe\xdb\x5e\x35\x2f\x75\x27\xbd\xa1\xda\x4a\x37\x79\x3c\x71\x78\x56\x4a\xcf\xa5\x31\xd5\x34\x4d\xf7\xcc\xb4\x69\x4c\xe8\x2c\xb4\xcb\x0f\x30\xb0\x8d\x2f\x68\xb0\xb5\x3d\x36\x89\x4e\x77\x9d\x9f\xbd\xf8\x3d\x0e\x03\x47\xf1\xbd\xcb\xd3\x59\xff\xd5\x9b\xcf\xd3\xb8\xee\x40\xd5\xec\xce\x52\x0f\xaa\xc6\xc2\x3d\x7c\xa8\x6a\x1c\x67\xe1\xfc\x42\x2d\xda\xb5\xbc\xe9\xb7\xf4\xcd\x72\x24\x2c\xb4\xf9\xe7\x7b\x86\xf7\xac\x4c\xd5\xa3\x4e\x35\x09\x21\x9e\x47\xb5\xa0\x93\xe0\xfd\x02\xa0\x1b\x91\xba\xb1\x81\x80\x1a\xfd\x2a\x44\x0d\xf0\x2c\x8b\xeb\x5a\xb2\x76\xfa\xcb\xaf\x58\x73\xdc\x26\xd5\xac\x48\x18\xad\x8e\xcb\xe5\x3b\x40\xca\xd4\xce\xb0\x3c\xb4\x7a\x77\xbb\xef\x6d\xe8\xed\xf1\x78\x12\xe0\x12\x8b\x65\x08\x16\xd7\x74\x35\x4f\xf1\x15\x56\x75\xf5\x15\xdf\x64\x5d\x17\x99\xf8\xab\xaf\xec\x22\x16\x16\xde\xe2\x93\xef\x6c\x75\x7f\xdf\xab\xa8\xf1\x98\xf2\xb2\x14\x83\x09\x74\xdd\x0f\xe1\x67\xc6\x5d\x65\xfc\x36\x39\x91\x4d\x6d\xbd\x15\x67\xc1\x1c\x64\x1c\x45\x5c\x68\x4b\x3d\xa5\x18\x78\xa6\xa5\x0d\x33\x65\xdd\x6b\xa1\xb5\x12\xcc\x1b\xf5\x24\x52\x2e\xc6\xf6\x14\x5e\x96\x7f\xac\xf9\x22\x47\x07\xf6\x3a\x3c\x97\x8b\xec\xa0\x7a\x25\x83\xd6\x30\xa7\x94\x8d\x20\x22\xca\xaf\xa2\x94\xef\x9c\xd2\x9c\x7b\x99\x8f\xf4\x69\x81\x4c\xf1\xd8\x60\x89\x3b\xc3\x5e\x80\x6c\xa6\x7c\xe3\x43\xd2\x10\x81\x32\x08\x29\x8b\xf5\x1e\x44\xc3\x74\xeb\x53\xd7\xd7\x5e\xab\x30\x99\x66\x7b\x58\xc0\x2a\x8b\xc5\x9c\x2d\x1a\x60\x55\x14\x9b\x05\xd1\xc3\x29\x89\x03\x35\x82\xed\x7c\xf9\x50\xa6\x37\x3b\x23\xe8\xe5\x8f\xec\xfe\x67\x04\xc3\x41\xdf\x49\x9e\xd6\xf3\x89\x55\x8c\x20\x13\xf4\x84\x7a\x5a\x85\x50\x99\xcc\xe4\xe9\x3a\x20\x6a\x0c\xd3\xf6\x1a\x3d\x89\x2e\x67\x9e\x84\x09\xaa\x5b\x53\x9c\x4e\x14\x81\xac\x8a\xeb\xeb\x22\x36\x70\xd6\x82\xac\xe7\xec\x39\x8b\x31\xab\x42\x52\xc0\x2c\xa1\x9f\xa4\x3b\xcb\x98\x25\x0f\xd7\x81\xec\x4d\xb2\x17\x49\xfd\x68\xc5\x61\x8a\xca\xf5\xbb\xf0\x5a\xff\x32\x17\xfe\x66\xb5\x18\x3e\x32\xc0\x30\x52\xf3\xae\xed\x87\x4c\x99\xc2\x34\x22\x4a\x77\xe3\x2a\x14\x8c\xa4\xdd\x0c\x4b\xb2\xbb\x14\xda\xb2\x05\xa9\xd9\x8e\x46\x35\x9b\x01\x9d\xdd\x56\x91\x67\x1d\x2d\x0a\x85\x6c\xe8\x52\x08\xde\x93\x99\x16\x1b\x0f\xef\x6a\x42\x31\x25\x81\x5c\x2e\x15\x25\xae\xea\x13\x58\xcd\x85\x26\x93\x97\x86\x4f\x8b\x49\x50\xcb\x74\x21\x67\xbb\x94\xe9\xe3\xfc\x74\x90\x86\x4b\x4b\x3b\x12\xd7\x2f\x0e\xfa\x11\x87\x51\x4d\xd6\x66\xc3\x70\x1c\x3b\x90\xa4\x02\xb3\x31\x84\xf1\x3f\x9d\xac\xe7\x69\x72\x42\x3e\x31\x08\xba\x13\x4c\xe6\xe0\x0a\xaa\x50\x50\xd2\x35\x2b\x58\xce\x99\x22\x77\xd9\x81\x91\x4c\xdb\x03\x95\x05\x86\x42\x1a\x10\x91\x5e\x23\x5d\xec\x82\x70\x91\x12\xbe\x00\x37\x30\xe7\xaa\xf8\x54\x6f\x87\x4f\x3f\xbc\x31\xe1\x27\xb4\x17\x60\xa7\xb4\x0e\x35\x6e\xb6\xb4\x28\x39\x5a\x65\xfa\xdb\xa3\x55\x84\xcd\x33\xb2\x5e\x39\x6c\x23\x2f\xac\x0d\x93\x39\xa9\x42\x72\x69\xb3\xa0\xa9\xf5\x22\xaa\xdf\x1d\x5d\x7c\x8d\xf2\x91\x0a\x23\x02\x9b\x90\x1e\x04\x9b\xf2\x20\xe0\xb7\xe6\x2e\x67\x33\xbc\xd1\x46\xf6\x9e\x8b\x8b\x0b\x79\x9d\xe7\xf2\x4d\xe4\x81\x48\xb7\xf8\x7d\xde\xf8\xec\x41\x7c\xc0\x98\x30\x6f\x9c\xed\xc9\xb5\x85\xfe\x12\xd6\x36\x0b\xf9\xa9\xc5\xac\xda\x3b\xc5\x4b\x53\xce\xda\x2a\x8d\x29\x79\x9b\xc0\x05\x50\xdb\xc6\x88\xa0\x76\x2d\x8c\x42\xda\xd4\xcf\xf2\xb0\x81\x0d\x95\xc9\x38\x50\x56\x39\x15\x46\xa8\x19\xea\x66\x82\x1e\x05\xdc\xc3\x92\xf2\xaf\x0b\x7f\x45\xb6\x8b\xf2\x9f\x8e\xae\xb5\x60\xc9\xda\x35\x9d\x10\xf8\xd2\x65\x29\xd5\x3c\xd0\xca\x9d\x0b\x5b\x27\x66\x6b\x98\x9b\x97\x5c\xbe\xe2\x4c\xa3\x7c\x85\x15\xc4\x62\xf9\x52\x5b\xb1\xc4\x4c\x38\xa7\xbc\xbe\xf2\x77\x96\xd6\x19\x24\x67\x3b\x93\xc5\x92\x1e\x0c\xb3\xdc\x9b\xd9\xb9\x28\x07\x19\x2f\x36\xe1\x42\x03\xa7\x7f\x1b\x5f\x50\xff\xc7\x46\x91\x2e\x6c\xec\xea\xc2\x06\x91\x2f\x72\xda\x7a\xd3\x40\x04\x51\x5c\xd8\x09\xbf\xf8\xcf\xff\xd2\xbd\x5e\x5c\x18\x91\xb9\x78\x73\xf4\xeb\xe1\x45\xbe\x4c\xd3\x5e\x97\x9c\xb2\xa4\xfd\xfe\xf1\xc1\x85\xa5\xfd\xee\xe4\xa2\x0b\x3f\xf3\x5b\xbc\x41\xb1\x09\x73\x1e\x1b\xad\xa0\x47\x49\xb2\x48\x2f\x9f\x42\xcf\x49\xba\x53\x06\x24\x1d\x8d\x99\xfb\x02\xc6\x87\x99\x30\x35\xad\xc6\x86\x2b\x94\xb2\xbb\x44\x8c\x64\x5d\x84\xf3\x4e\xaa\x74\x2c\x77\x2a\x0f\xa8\x5d\x90\x5b\x79\xb1\xee\x92\x2c\xaf\xc7\x17\x50\x20\x6c\xa3\x81\xa5\x19\x80\x17\x40\x6e\x65\xb1\xff\x3f\xa3\xce\xbf\xee\x35\x06\x62\xdf\x64\x0e\xac\x9a\xd0\x65\x52\xca\x79\x11\xce\x1f\xc8\x74\x40\xaf\x10\xc2\xf9\xdf\xfa\xdb\x5f\x45\x77\x18\xe5\x58\x0a\x4f\x66\x0a\xb2\xa0\x56\x88\xca\xcf\xf7\xfa\x44\x42\x84\x22\xa4\xd2\xdc\xe2\xae\x38\x48\xb4\x67\x08\x44\x52\x0a\x5a\x90\x84\x63\xae\x30\xfd\x9b\x09\x89\xb1\xc9\xcb\x25\xb5\x54\x27\x85\x81\xe6\x84\x64\xda\x7b\xb1\x96\x4a\x9c\x05\x23\x75\x0b\x74\x4f\xb3\x9e\x69\xb0\xed\x25\x35\x02\x55\xed\xb6\x9e\xac\xb4\x1e\xaa\xc6\xd2\x5a\x5c\x93\xe7\x48\xd9\x4a\x8a\x71\x8b\x34\x71\x04\x13\xf3\x34\x79\x68\x3f\xbc\x4e\x7c\xf0\x5f\x3e\x9e\x95\xb6\xa8\xbe\x52\xd1\x46\x75\xb0\x95\x9b\x3f\x52\xf2\x95\xcd\x76\x12\xd1\x86\x56\x56\x1b\x92\x07\x74\x2a\xc9\x10\x68\x15\x46\x9e\xce\x49\x2b\xc9\xd6\x91\x88\xaa\x2c\x43\x5c\xb9\x1e\x64\xd5\xab\x31\xee\xdc\xe2\x23\xbd\xba\x39\xd1\xbe\x80\x03\x1b\xdb\xa2\xa7\x9f\x76\x4e\x3e\x0c\x7e\xf9\xf5\x68\xef\x83\xf3\xee\x2c\xbc\xfc\xf0\xda\x1b\x70\xf7\xf5\xc9\x2c\x7f\x63\x12\x31\x4b\x05\x23\xff\x62\xcd\x2c\xef\xd6\x5a\x6f\x49\xca\xaa\xa0\x65\xea\xa1\xd6\x45\x23\x4b\x16\x15\x57\xcc\xf2\x99\xb5\x31\x07\x80\x16\x89\xe8\x38\x65\x72\x9c\xe0\xb9\x04\xe7\x02\x4b\x79\xf9\x8d\xb9\xcc\xc5\xe9\xf4\x9c\x8e\xb3\x7d\xd6\xeb\x8f\xb6\x7b\xa3\xfe\xb0\xeb\x6c\x0f\x7a\xc3\xfe\x1f\x79\x8f\x42\x75\x4d\xad\xc7\xce\x68\xb0\xd3\x1d\xec\xf4\xfb\xce\x5e\xa1\x47\xf6\x47\x4d\x5a\xfd\xee\x4e\xd7\x69\x15\xf6\x89\xc5\x7a\x17\x0d\x1b\xf3\x48\x12\xe2\x58\xff\x36\xf6\xa7\x26\x14\xb6\x96\xe8\x2f\x2f\x15\xe5\x92\x2a\x68\x91\xa4\xc2\xb4\xf1\x98\x78\x7e\x20\xbf\x8a\xde\x32\x19\x5a\x94\x6b\x5a\x20\x31\xf5\x10\xeb\x78\xac\x41\x1a\x8f\x47\x50\x82\x11\xc5\x78\x22\xf8\x15\x0a\xc5\x23\xea\x26\x71\x86\xf1\x64\xae\x50\x8e\x29\x1b\x97\x2b\x96\xc1\xd8\x91\xf0\x33\x1d\x53\x3e\x4e\x72\x87\x39\xbd\x4e\xfd\x02\x39\x43\x74\x04\xe3\xb1\xcb\x99\x8c\x43\x14\x63\x3e\x9d\x4a\x2c\x1c\x04\xaf\x67\x62\x3a\x85\xf8\x2d\xf4\x76\x7a\xbd\x9d\x5d\xa7\x3f\x70\x1c\xc7\x29\x34\xca\x4c\xe4\xde\xb0\xb7\x3d\x5c\xd5\x7b\x67\x61\xef\xed\xbd\xbd\xbd\x55\xbd\x9f\x2f\xec\xbd\xbb\xd3\xef\x17\x67\xa7\x21\x63\xf0\xd4\xe7\x67\xe5\x5c\xd4\xe6\x61\xf1\x8d\xd3\x8d\x5a\xcd\x19\xd4\xb4\x57\xa1\xc6\x18\x56\xaa\x2e\x7b\x9d\xd2\x56\x89\x8e\x29\x06\x87\xd6\xc1\xd1\xf1\xbb\xd3\xfd\xf3\x93\xd3\xce\xdb\x9f\xde\x9e\x75\x4a\x4d\xb2\xb5\x7a\x5a\xb8\xf9\x2d\xbd\x13\xce\x5e\x1b\x93\x05\xca\xad\xb7\x6c\xee\x88\x7b\x61\x2a\x1b\x32\x0f\xb7\xa0\xa8\x8a\x35\xe2\x5a\x59\x7f\x3c\xa2\xe1\xf5\x4f\xae\x38\x88\xdf\xec\xf4\xc8\xf9\xdd\xd1\x1f\xd7\x2f\xcf\xae\x8f\x4f\x48\x2b\x45\x69\xc1\xf5\x53\x3f\x50\x2a\xa1\xb4\xe4\x56\x83\x26\xa4\xfa\x8f\x84\x54\x7f\x25\x50\xfd\x26\x9c\xac\x6d\xd7\x3b\x91\x88\x08\x89\xa5\x5d\xe9\x08\xce\x99\xf9\x2b\x6e\x8a\xdb\x1b\x32\x6a\xd7\x63\x98\x24\x43\x93\xa5\x1b\x41\xed\xe5\x23\x58\xf5\xae\x3c\xd1\xe3\xf2\x20\x0e\x99\xdd\xc4\xe9\x57\x24\x1b\x0e\x68\x53\xaf\xdd\x85\xd3\xa6\x76\x66\x53\x3e\x4a\x6c\xf3\x66\x12\x17\x2b\x9b\xf7\xf4\xa9\xf5\x06\xba\xf0\xc1\xee\xa9\xec\x7c\x8d\x80\x7a\xf0\x02\x7a\x45\x94\xaa\xb3\x1f\x7c\x3c\xf8\x29\x9e\x4f\x8e\xc4\x21\xbb\x13\xfb\x18\xee\xf6\x87\xb3\xeb\xab\x2b\x7a\x70\x93\xce\x7e\xf5\x1e\xa2\xa6\x19\x1f\x3a\xc3\x47\x99\xf1\xdd\x55\x13\xbe\xdb\x30\xdf\xeb\x5c\x66\x94\x0d\xa6\xf1\xa2\xea\xa6\x21\xed\x7e\xbb\x01\xe5\xbe\x6a\x32\x14\x7b\xfc\xd3\x7b\xd1\xee\xd1\x5f\x07\x5e\xfc\xdb\xa7\xa3\x9b\x9b\xed\x4f\x37\x6f\x82\xf9\xe7\x5e\xf8\xd3\xc9\xe0\x97\xf9\xf5\x71\xdb\x68\x02\x73\x17\xeb\x92\xb5\xfe\xe9\xdd\xee\xac\x3f\xdb\xf9\xf9\xcc\x3b\xff\xf5\x9c\xf4\xaf\xe4\xcf\x7b\xfd\xab\x0f\x07\x83\x79\x0a\x50\xf5\x38\x60\xa3\x26\xec\x3d\x8e\x22\xec\xad\xd4\x83\xbd\x06\x74\xf2\x05\x7c\x83\x82\x4e\xe7\x7a\xdb\x6b\x8f\x5e\x8e\xe0\x24\xd9\xed\x67\xd7\x5d\x58\x27\xcf\x1e\xcc\x5c\x0b\x9f\xc1\xb9\x7f\xe8\xdf\x86\xbf\xbf\x8c\x3e\xbe\x9f\x1e\xf5\x83\x63\xbc\x8a\xbc\xe1\x1f\x07\x29\x3e\xd5\xcb\x3a\x1a\x57\xc3\xa3\xc0\x33\x5c\x85\xce\xb0\x09\x1c\x89\x02\xda\x53\xce\x3b\x13\x22\xda\xeb\x5e\xbe\xd6\x5d\xa2\x1f\x3e\x0d\xce\xe9\xa1\xff\x99\x15\x10\xb9\x8c\xbc\xe1\xa7\x57\x19\x22\xeb\x5e\x86\xd7\x04\xd5\xf6\xa3\x40\xb5\xbd\x0a\xaa\xed\xd5\x50\xf9\x44\x66\x35\xad\xa4\xe1\xfa\xb9\x1d\xfb\xf7\x45\x4d\x61\x5e\xfa\x67\x2f\x57\xc1\x76\x75\xa7\x61\xfb\xed\x3d\x1e\xf5\xf9\x31\x5e\x7a\x83\xdf\x5f\x66\xa8\xad\xb8\xb9\xaf\x71\xdd\xf5\x1f\x67\xdd\xf5\x57\xae\xbb\x7e\x03\x5e\xd9\xda\x52\x9a\x73\x5b\x04\x6c\x4b\x27\x91\x41\x7a\x98\x6b\x21\x22\x57\xbf\xbf\xfa\xfc\xd1\x00\x91\x22\xf2\xe6\xe6\xf5\xf3\xcb\xb7\x1f\x3e\xa5\x88\x2c\xbb\xbb\xad\x09\x8d\xc1\xce\xa3\xa0\x51\x24\xd3\x8c\x46\xb1\x45\x4d\x47\x67\xe5\x9b\xc6\xb0\x53\x09\x24\x30\x51\x1a\x73\x64\x6c\x21\x1a\x3b\x57\x9f\x1c\x2d\x1f\x9f\x73\x58\x3e\xa1\xef\x0d\x0e\x13\x3d\x53\x3f\x6d\xdc\x84\xc0\xf3\x47\x01\xe0\xf9\xaa\xf1\x3f\x6f\x54\xc2\xf9\x35\xdf\x58\x7e\x69\x4d\xa7\xe2\x61\x3a\xd5\x3b\x9f\x66\xfe\xf4\xed\xf3\xd9\x4f\x27\xf2\xe7\x9b\xc3\x8f\xd9\x58\xd7\x36\xca\xdf\x70\xc4\x36\x30\x9d\x9e\x3a\x04\xed\x62\x4b\x54\x23\x78\xf7\xea\x6d\xe7\xf0\xf7\xce\xf3\x51\x12\x4a\xb0\xc7\x04\xf5\x78\xf2\x36\x78\xa7\x3a\x79\x5c\xa4\xd3\xa3\x77\xce\x20\x60\x5e\x10\x5e\x3b\xd7\x53\x77\x57\x52\x45\xb6\x65\x70\x79\xb3\x57\xdc\x17\x6a\x27\x31\x15\x2e\x3d\xf8\xde\x6c\xdb\xdb\xdb\xbb\x76\x02\xe1\x7a\x37\xc3\xd9\x2e\x09\x26\xbb\x32\x98\xce\xd8\xe5\xc0\xf3\x27\xf2\xf2\x6f\xff\xf6\xf7\xc3\xdf\xcf\x4e\xf6\xe1\x3f\xec\x30\xbb\x06\x9a\x17\xd4\x43\xa6\xf4\x44\x15\x4b\xa6\xa8\x84\xf6\xd0\x19\xb6\x37\x0d\x00\xe6\xe3\xab\x37\xe7\xa7\x67\x87\x99\x6d\x71\x86\x6d\x13\xe6\xce\x66\x13\x72\x42\xa6\x7d\x6f\xb6\xcd\xc5\xb6\x73\x43\x63\x67\x97\xa3\x9e\x2b\x5f\x5c\xb9\xfd\x1d\x6f\x36\x55\x97\x3d\xe2\x96\xae\x01\x78\x95\x8c\xa3\xbd\x6a\x10\x05\x2f\xe6\x1f\xcb\xcc\xf4\x99\xfc\x28\xe6\x3b\x4c\x5e\x4f\xfa\xf2\x38\x7c\x7d\xb9\x3d\xf9\x3d\x3a\xd8\x7d\x45\x5a\x1b\xff\x17\x00\x00\xff\xff\xf5\x15\x19\x99\x32\x7a\x00\x00")

func fleetManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_fleetManagerYaml,
		"fleet-manager.yaml",
	)
}

func fleetManagerYaml() (*asset, error) {
	bytes, err := fleetManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fleet-manager.yaml", size: 31282, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"fleet-manager.yaml": fleetManagerYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"fleet-manager.yaml": &bintree{fleetManagerYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

openapi: 3.0.0
info:
  description: Pineapple Service Fleet Manager APIs that are used by internal services
    e.g kas-fleetshard operators.
  title: Pineapple Service Fleet Manager
  version: 1.3.0
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- description: Endpoints used by the agent for data plane communications
  name: Agent Clusters
paths:
  /api/pineapples_mgmt/v1/agent-clusters/{id}/status:
    put:
      operationId: updateAgentClusterStatus
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'
        description: Data plane cluster status update data
        required: true
      responses:
        "200":
          description: Data plane cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of a data plane cluster
      tags:
      - Agent Clusters
  /api/pineapples_mgmt/v1/agent-clusters/{id}/pineapples/status:
    put:
      operationId: updatePineappleClusterStatus
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlanePineappleStatusUpdateRequest'
        description: Pineapple clusters status update data
        required: true
      responses:
        "200":
          description: Status is updated for Pineapple clusters
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of Pineapple clusters on the control plane
      tags:
      - Agent Clusters
  /api/pineapples_mgmt/v1/agent-clusters/{id}/pineapples:
    get:
      operationId: getPineapples
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedPineappleList'
          description: The list of the ManagedPineapple CRs for the specified data
            plane cluster
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the list of ManagedaPineapples CR for the specified data plane
        cluster
      tags:
      - Agent Clusters
  /api/pineapples_mgmt/v1/agent-clusters/{id}:
    get:
      operationId: getPineappleAgent
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataplaneClusterAgentConfig'
          description: The ManagedPineappleAgent CR Spec
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the spec of the ManagedPineappleAgent CR
      tags:
      - Agent Clusters
components:
  examples:
    ManagedPineappleExample:
      value:
        kind: ManagedPineapple
        metadata:
          name: example-pineapple
          namespace: example-pineapple-1rfpsqbvq1em2u9u0z54ymjcwac
          annotations:
            mas/id: 1rfpsqbvq1em2u9u0z54ymjcwac
            mas/placementId: ""
        spec:
          capacity:
            ingressEgressThroughputPerSec: 4Mi
            totalMaxConnections: 500
            maxDataRetentionSize: 100Gi
            maxPartitions: 100
            maxDataRetentionPeriod: P14D
            maxConnectionAttemptsPerSec: 100
          oauth:
            clientId: pineapple-1rfpsqbvq1em2u9u0z54ymjcwac
            clientSecret: example-client-secret
            tokenEndpointUri: https://example-token-endpoint-uri.com/token
            jwksEndpointUri: https://example-jwks-endpoint-uri.com/certs
            validIssuerEndpointUri: https://issuer-endpoint-uri.com
            userNameClaim: username
            tlsTrustedCertificate: ""
            customClaimCheck: ""
          endpoint:
            bootstrapServerHost: example-pineapple--rfpsqbvq-em-u-u-z--ymjcwac.pineapple.devshift.org
            tls:
              cert: ""
              key: ""
          versions:
            pineapple: 2.7.0
            pineappleOperator: 0.21.2
          deleted: false
    DataPlanePineappleStatusRequestExample:
      value:
        conditions:
        - type: Ready
          reason: PineappleInstanceReady
          message: installing
          status: "False"
          lastTransitionTime: 2018-01-01T00:00:00Z
        capacity:
          ingressEgressThroughputPerSec: 4Mi
          totalMaxConnections: 500
          maxDataRetentionSize: 100Gi
          maxPartitions: 100
          maxDataRetentionPeriod: P14D
          maxConnectionAttemptsPerSec: 100
        versions:
          pineapple: 2.4.1
          pineappleOperator: 0.21.2
    "400InvalidIdExample":
      value:
        id: "203"
        kind: Error
        href: /api/pineapples_mgmt/v1/errors/21
        code: PINEAPPLES-MGMT-21
        reason: Bad request
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "404"
        kind: Error
        href: /api/dinosaurs_mgmt/v1/errors/7
        code: DINOSAURS-MGMT-7
        reason: The requested resource doesn't exist
  schemas:
    ListReference:
      properties:
        kind:
          type: string
      required:
      - items
      - kind
      type: object
    PrivateObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
      type: object
    ManagedPineappleCapacity:
      description: Capacity information of a Pineapple cluster
      properties:
        ingressEgressThroughputPerSec:
          type: string
        totalMaxConnections:
          format: int
          type: integer
        maxDataRetentionSize:
          type: string
        maxPartitions:
          format: int
          type: integer
        maxDataRetentionPeriod:
          type: string
        maxConnectionAttemptsPerSec:
          format: int
          type: integer
      type: object
    ManagedPineappleVersions:
      properties:
        pineapple:
          type: string
        pineappleOperator:
          type: string
      type: object
    ManagedPineapple:
      allOf:
      - $ref: '#/components/schemas/PrivateObjectReference'
      - $ref: '#/components/schemas/ManagedPineapple_allOf'
    ManagedPineappleList:
      allOf:
      - $ref: '#/components/schemas/ListReference'
      - $ref: '#/components/schemas/ManagedPineappleList_allOf'
      description: A list of ManagedPineapple CRs
    DatePlaneClusterUpdateStatusRequestNodeInfo:
      description: Schema for the data plane cluster node info
      example:
        ceiling: 5
        current: 7
        currentWorkLoadMinimum: 9
        floor: 2
      nullable: true
      properties:
        ceiling:
          description: The maximum number of nodes required in order to provide the
            Pineapple service
          nullable: true
          type: integer
        floor:
          description: The minimum number of nodes required in order to provide the
            Pineapple service
          nullable: true
          type: integer
        current:
          description: The number of nodes currently known to the agent
          nullable: true
          type: integer
        currentWorkLoadMinimum:
          description: The minimum number of nodes required to support the current
            population of Pineapple clusters on the data plane cluster
          nullable: true
          type: integer
      type: object
    DatePlaneClusterUpdateStatusRequestResizeInfo:
      example:
        nodeDelta: 3
        delta:
          partitions: 4
          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
          connections: 2
          dataRetentionSize: dataRetentionSize
      nullable: true
      properties:
        nodeDelta:
          description: "The minimum number of nodes that needs to be applied to the\
            \ data plane cluster to reach the target capacity. \n\nThe control plane\
            \ may increase or decrease the size of the data plane cluster in multiples\
            \ of this number as long as it does not exceed the ceiling or floor defined\
            \ in the node info\n"
          nullable: true
          type: integer
        delta:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestResizeInfo_delta'
      type: object
    DataPlaneClusterUpdateStatusRequest:
      description: Schema for the request to update a data plane cluster's status
      example:
        total:
          partitions: 6
          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
          connections: 0
          dataRetentionSize: dataRetentionSize
        pineappleOperatorVersions:
        - pineappleOperatorVersions
        - pineappleOperatorVersions
        pineappleOperator:
        - ready: true
          version: version
        - ready: true
          version: version
        resizeInfo:
          nodeDelta: 3
          delta:
            partitions: 4
            ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
            connections: 2
            dataRetentionSize: dataRetentionSize
        nodeInfo:
          ceiling: 5
          current: 7
          currentWorkLoadMinimum: 9
          floor: 2
        conditions:
        - reason: reason
          type: type
          message: message
          status: status
        - reason: reason
          type: type
          message: message
          status: status
        remaining:
          partitions: 5
          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
          connections: 1
          dataRetentionSize: dataRetentionSize
      properties:
        conditions:
          description: The data plane cluster conditions
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'
          type: array
        total:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_total'
        remaining:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_remaining'
        nodeInfo:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestNodeInfo'
        resizeInfo:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestResizeInfo'
        pineappleOperatorVersions:
          description: A list of the Pineapple operator versions that can be installed
            on the data plane cluster
          items:
            type: string
          type: array
        pineappleOperator:
          description: The status and version of the Pineapple operator
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_pineappleOperator'
          type: array
      type: object
    DataPlanePineappleStatus:
      description: Schema of the status object for a Pineapple cluster
      example:
        $ref: '#/components/examples/DataPlanePineappleStatusRequestExample'
      properties:
        conditions:
          description: The status conditions of a Pineapple cluster
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'
          type: array
        capacity:
          $ref: '#/components/schemas/DataPlanePineappleStatus_capacity'
        versions:
          $ref: '#/components/schemas/DataPlanePineappleStatus_versions'
        routes:
          description: Routes created for the Pineapple cluster
          items:
            $ref: '#/components/schemas/DataPlanePineappleStatus_routes'
          nullable: true
          type: array
      type: object
    DataPlanePineappleStatusUpdateRequest:
      additionalProperties:
        $ref: '#/components/schemas/DataPlanePineappleStatus'
      description: Schema for the request to update the statuses of Pineapple clusters
        from data plane to the control plane
      type: object
    DataplaneClusterAgentConfig:
      description: Configuration for the data plane cluster agent
      example:
        spec:
          observability:
            channel: channel
            tag: tag
            accessToken: accessToken
            repository: repository
      properties:
        spec:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec'
      type: object
    WatchEvent:
      properties:
        type:
          type: string
        error:
          $ref: '#/components/schemas/Error'
        object:
          nullable: true
          type: object
      required:
      - type
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    ManagedPineapple_allOf_metadata_annotations:
      properties:
        mas/id:
          type: string
        mas/placementId:
          type: string
      required:
      - mas/id
      - mas/placementId
    ManagedPineapple_allOf_metadata:
      properties:
        name:
          type: string
        namespace:
          type: string
        annotations:
          $ref: '#/components/schemas/ManagedPineapple_allOf_metadata_annotations'
    ManagedPineapple_allOf_spec_serviceAccounts:
      properties:
        name:
          type: string
        principal:
          type: string
        password:
          type: string
      required:
      - name
      - password
      - principal
    ManagedPineapple_allOf_spec_oauth:
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        tokenEndpointURI:
          type: string
        jwksEndpointURI:
          type: string
        validIssuerEndpointURI:
          type: string
        userNameClaim:
          type: string
        tlsTrustedCertificate:
          nullable: true
          type: string
        customClaimCheck:
          type: string
    ManagedPineapple_allOf_spec_endpoint_tls:
      nullable: true
      properties:
        cert:
          type: string
        key:
          type: string
    ManagedPineapple_allOf_spec_endpoint:
      properties:
        bootstrapServerHost:
          type: string
        tls:
          $ref: '#/components/schemas/ManagedPineapple_allOf_spec_endpoint_tls'
    ManagedPineapple_allOf_spec:
      properties:
        serviceAccounts:
          items:
            $ref: '#/components/schemas/ManagedPineapple_allOf_spec_serviceAccounts'
          type: array
        capacity:
          $ref: '#/components/schemas/ManagedPineappleCapacity'
        oauth:
          $ref: '#/components/schemas/ManagedPineapple_allOf_spec_oauth'
        owners:
          items:
            type: string
          type: array
        endpoint:
          $ref: '#/components/schemas/ManagedPineapple_allOf_spec_endpoint'
        versions:
          $ref: '#/components/schemas/ManagedPineappleVersions'
        deleted:
          type: boolean
      required:
      - deleted
    ManagedPineapple_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ManagedPineapple_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ManagedPineapple_allOf_spec'
    ManagedPineappleList_allOf:
      example: '{"kind":"ManagedPineappleList","items":{"$ref":"#/components/examples/ManagedPineappleExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ManagedPineapple'
          type: array
    DatePlaneClusterUpdateStatusRequestResizeInfo_delta:
      description: Description to show how the data plane cluster capacity will be
        affected by applying the nodeDelta
      example:
        partitions: 4
        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
        connections: 2
        dataRetentionSize: dataRetentionSize
      nullable: true
      properties:
        ingressEgressThroughputPerSec:
          nullable: true
          type: string
        connections:
          nullable: true
          type: integer
        dataRetentionSize:
          nullable: true
          type: string
        partitions:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_conditions:
      example:
        reason: reason
        type: type
        message: message
        status: status
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
    DataPlaneClusterUpdateStatusRequest_total:
      description: The total capacity of the data plane cluster for Pineapple clusters
      example:
        partitions: 6
        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
        connections: 0
        dataRetentionSize: dataRetentionSize
      properties:
        ingressEgressThroughputPerSec:
          nullable: true
          type: string
        connections:
          nullable: true
          type: integer
        dataRetentionSize:
          nullable: true
          type: string
        partitions:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_remaining:
      description: The remaining capacity of the data plane cluster for Pineapple
        clusters
      example:
        partitions: 5
        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
        connections: 1
        dataRetentionSize: dataRetentionSize
      properties:
        ingressEgressThroughputPerSec:
          nullable: true
          type: string
        connections:
          nullable: true
          type: integer
        dataRetentionSize:
          nullable: true
          type: string
        partitions:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_pineappleOperator:
      example:
        ready: true
        version: version
      properties:
        ready:
          type: boolean
        version:
          type: string
      required:
      - ready
      - version
    DataPlanePineappleStatus_capacity:
      description: Capacity information of the Pineapple cluster
      properties:
        ingressEgressThroughputPerSec:
          nullable: true
          type: string
        totalMaxConnections:
          nullable: true
          type: integer
        maxDataRetentionSize:
          nullable: true
          type: string
        maxPartitions:
          nullable: true
          type: integer
        maxDataRetentionPeriod:
          nullable: true
          type: string
        maxConnectionAttemptsPerSec:
          nullable: true
          type: integer
    DataPlanePineappleStatus_versions:
      description: Version information related to a Pineapple cluster
      properties:
        pineapple:
          type: string
        pineappleOperator:
          type: string
    DataPlanePineappleStatus_routes:
      properties:
        name:
          type: string
        prefix:
          type: string
        router:
          type: string
    DataplaneClusterAgentConfig_spec_observability:
      description: Observability configurations
      example:
        channel: channel
        tag: tag
        accessToken: accessToken
        repository: repository
      properties:
        accessToken:
          nullable: true
          type: string
        channel:
          type: string
        repository:
          type: string
        tag:
          type: string
    DataplaneClusterAgentConfig_spec:
      description: Data plane cluster agent spec
      example:
        observability:
          channel: channel
          tag: tag
          accessToken: accessToken
          repository: repository
      properties:
        observability:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec_observability'
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http

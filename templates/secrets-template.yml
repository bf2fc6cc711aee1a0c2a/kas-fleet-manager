---
apiVersion: v1
kind: Template
metadata:
  name: managed-services-api-secrets
  annotations:
    description: "Managed Services API Secrets"
parameters:

- name: DATABASE_HOST
  description: Hostname for the database server.

- name: DATABASE_PORT
  description: Port of the database server.
  value: "5432"

- name: DATABASE_NAME
  description: Name for the database in the server.
  value: managed-services-api

- name: DATABASE_USER
  description: User for the database server.
  value: ocm

- name: DATABASE_PASSWORD
  description: Password for the database user.
  value: TheBlurstOfTimes

- name: OCM_SERVICE_CLIENT_ID
  description: Client id used to interact with other UHC services

- name: OCM_SERVICE_CLIENT_SECRET
  description: Client secret used to interact with other UHC services

- name: OCM_SERVICE_TOKEN
  description: Offline token used to interact with other UHC services

- name: SENTRY_KEY
  description: Private key used in Sentry DSN

- name: AWS_ACCESS_KEY
  description: AWS access key used to create CCS clusters

- name: AWS_ACCOUNT_ID
  description: AWS account id used to create CCS clusters

- name: AWS_SECRET_ACCESS_KEY
  description: AWS secret access key used to create CCS clusters

- name: DEX_PASSWORD
  description: Dex password for observability stack

- name: DEX_SECRET
  description: Dex secret for observability stack

objects:

- apiVersion: v1
  kind: Secret
  metadata:
    name: managed-services-api-rds
  stringData:
    db.host: ${DATABASE_HOST}
    db.port: ${DATABASE_PORT}
    db.name: ${DATABASE_NAME}
    db.user: ${DATABASE_USER}
    db.password: ${DATABASE_PASSWORD}

- apiVersion: v1
  kind: Secret
  metadata:
    name: managed-services-api
  stringData:
    ocm-service.clientId: ${OCM_SERVICE_CLIENT_ID}
    ocm-service.clientSecret: ${OCM_SERVICE_CLIENT_SECRET}
    ocm-service.token: ${OCM_SERVICE_TOKEN}
    sentry.key: ${SENTRY_KEY}
    aws.accesskey: ${AWS_ACCESS_KEY}
    aws.accountid: ${AWS_ACCOUNT_ID}
    aws.secretaccesskey: ${AWS_SECRET_ACCESS_KEY}
    dex.password: ${DEX_PASSWORD}
    dex.secret: ${DEX_SECRET}
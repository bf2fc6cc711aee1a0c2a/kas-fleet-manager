---
kind: Template
apiVersion: v1
metadata:
  name: managed-services-api-service
  annotations:
    openshift.io/display-name: Managed Services API
    description: Managed Services API for managed Kafka deployment
    tags: golang,uhc,service-delivery
    iconClass: icon-shadowman
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://gitlab.cee.redhat.com/service/
labels:
  template: managed-services-api
parameters:

- name: ENVIRONMENT
  displayName: Environment
  description: Which Managed Service API environment to use for this deployment
  value: production

- name: IMAGE_REGISTRY
  displayName: Image Registry
  required: true

- name: IMAGE_REPOSITORY
  displayName: Image Repository
  required: true

- name: VERSION
  displayName: Image version
  value: latest

- name: IMAGE_TAG
  displayName: Image tag
  value: latest

- name: GLOG_V
  displayName: GLOG V Level
  description: Log verbosity level
  value: "10"

- name: MEMORY_REQUEST
  description: Memory request for the API pods.
  value: "512Mi"

- name: MEMORY_LIMIT
  description: Memory limit for the API pods.
  value: "1Gi"

- name: CPU_REQUEST
  description: CPU request for the API pods.
  value: "200m"

- name: CPU_LIMIT
  description: CPU limit for the API pods.
  value: "1"

- name: JWKS_URL
  displayName: JWK Token Certificate URL

- name: JWKS_CA
  displayName: JWK Token Certificate CA

- name: OCM_BASE_URL
  displayName: OCM API Base URL
  description: Base path for all OCM APIs

- name: OCM_DEBUG
  displayName: OCM API Debug mode
  description: Debug mode for OCM API client
  value: "false"

- name: REPLICAS
  description: Number of replicas of the service to run.
  value: "1"

- name: ENABLE_JWT
  displayName: Enable JWT
  description: Enable JWT authentication validation
  value: "true"

- name: ENABLE_HTTPS
  displayName: Enable HTTPS
  description: Enable HTTPS rather than HTTP
  value: "true"

- name: API_SERVER_BINDADDRESS
  displayName: API Server Bindaddress
  description: API server bind adddress
  value: :8000

- name: METRICS_SERVER_BINDADDRESS
  displayName: Metrics Server Bindaddress
  description: Metrics server bind adddress
  value: :8080

- name: HEALTH_CHECK_SERVER_BINDADDRESS
  displayName: Health check Server Bindaddress
  description: Health check server bind adddress
  value: :8083

- name: API_SERVER_HOSTNAME
  displayName: API Server Hostname
  description: Server's public hostname
  value: ""

- name: ENABLE_AUTHZ
  displayName: Enable Authz
  description: Enable Authorization on endpoints, should only be disabled for debug
  value: "true"

- name: DB_MAX_OPEN_CONNS
  displayName: Maximum Open Database Connections
  description: Maximum number of open database connections per pod
  value: "50"

- name: DB_SSLMODE
  displayName: DB SSLmode
  description: Database ssl mode (disable | require | verify-ca | verify-full)
  value: "disable"

- name: ENABLE_DB_DEBUG
  displayName: Enable DB Debug
  description: framework's debug mode
  value: "false"

- name: ENABLE_METRICS_HTTPS
  displayName: Enable Metrics HTTPS
  description: Enable HTTPS for metrics server
  value: "false"

- name: ENABLE_OCM_MOCK
  displayName: Enable OCM Mock
  description: Enable mock uhc client
  value: "false"

- name: OCM_MOCK_MODE
  displayName: OCM mock mode
  description: OCM mock mode
  value: "emulate-server"

- name: HTTP_READ_TIMEOUT
  displayName: HTTP Read Timeout
  description: HTTP server read timeout
  value: 5s

- name: HTTP_WRITE_TIMEOUT
  displayName: HTTP Write Timeout
  description: HTTP server write timeout
  value: 30s

- name: LABEL_METRICS_INCLUSION_DURATION
  displayName: Label metrics inclusion duration
  description: A cluster's last telemetry date needs be within in this duration in order to have labels collected
  value: "168h"

- name: ENABLE_SENTRY
  displayName: Enable Sentry Error Reporting
  value: "false"

- name: SENTRY_URL
  displayName: Sentry base URL
  description: Base URL (without https://) of sentry server
  value: "sentry.autom8.in"

- name: SENTRY_PROJECT
  displayName: Sentry Project ID
  value: "8"

- name: ENABLE_SENTRY_DEBUG
  displayName: Enable Sentry Debug Logging
  value: "false"

- name: SENTRY_TIMEOUT
  displayName: Sentry Timeout
  description: Timeout for all Sentry operations
  value: "5s"

- name: SUPPORTED_CLOUD_PROVIDERS
  displayName: Supported Cloud Providers
  description: A list of supported cloud providers in a yaml format.
  value: "[{name: aws, default: true, regions: [{name: us-east-1, default: true}]}]"

- name: DEX_URL
  displayName: Dex url
  description: A URL to dex that will be used by the observability stack for authentication.
  value: "http://dex-dex.apps.pbraun-observatorium.observability.rhmw.io"

- name: DEX_USERNAME
  displayName: Dex username
  description: Dex username that will be used by the observability stack for authentication.
  value: "admin@example.com"

- name: OBSERVATORIUM_GATEWAY
  displayName: Observatorium gateway
  description: A URL to an Observatorium instance where observability metrics will sent to. 
  value: "https://observatorium-observatorium.apps.pbraun-observatorium.observability.rhmw.io"

- name: OBSERVATORIUM_TENANT
  displayName: Observatorium tenant
  description: Observatorium tenant where observability metrics will sent to. 
  value: "test"  

- name: ENABLE_ALLOW_LIST
  displayName: Enable the Allow List
  description: Enable the allow list access control feature
  value: "false"

- name: MAX_ALLOWED_INSTANCES
  displayName: Maximum allowed instances
  description: The default value of maximum number of instances that can be created by users.
  value: "1"

- name: ALLOWED_SERVICE_ACCOUNTS
  displayName: A list of allowed service accounts
  description: A list of allowed service accounts that are allowed to access the service without requiring an organisation to do so in a yaml format.
  value: "[]"

- name: ALLOWED_USERS_PER_ORGANISATION
  displayName: A list of allowed users per organisation
  description: A list of allowed users that are allowed to access the service via their organisation in a yaml format.
  value: "[{id: 13640203, max_allowed_instances: 5, allow_all: true, allowed_users: []}, {id: 12147054, max_allowed_instances: 1, allow_all: true, allowed_users: []}, {id: 13639843, max_allowed_instances: 1, allow_all: true, allowed_users: []}]"

objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ocm-managed-services-providers-config
      annotations:
        qontract.recycle: "true"
    data:
      provider-configuration.yaml: |-
        supported_providers: ${SUPPORTED_CLOUD_PROVIDERS}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ocm-managed-services-allowed-users-config
      annotations:
        qontract.recycle: "true"
    data:
      allow-list-configuration.yaml: |-
        allowed_service_accounts: ${ALLOWED_SERVICE_ACCOUNTS}
        allowed_users_per_organisation: ${ALLOWED_USERS_PER_ORGANISATION}       
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: managed-services-api
      labels:
        app: managed-services-api
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: managed-services-api
      labels:
        app: managed-services-api
    spec:
      selector:
        matchLabels:
          app: managed-services-api
      replicas: ${{REPLICAS}}
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: managed-services-api
        spec:
          serviceAccount: managed-services-api
          serviceAccountName: managed-services-api
          volumes:
          - name: tls
            secret:
              secretName: managed-services-api-tls
          - name: service
            secret:
              secretName: managed-services-api
          - name: rds
            secret:
              secretName: managed-services-api-rds
          - name: ocm-managed-services-providers-config
            configMap:
              name: ocm-managed-services-providers-config
          - name: ocm-managed-services-allowed-users-config
            configMap:
              name: ocm-managed-services-allowed-users-config     
          initContainers:
          - name: id
            image: quay.io/app-sre/centos:8
            command:
            - echo
            - ${VERSION}-${BUILD_ID}-${BUILD_TS}
          - name: migration
            image: ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            volumeMounts:
            - name: service
              mountPath: /secrets/service
            - name: rds
              mountPath: /secrets/rds
            command:
            - /usr/local/bin/managed-services-api
            - migrate
            - --db-host-file=/secrets/rds/db.host
            - --db-port-file=/secrets/rds/db.port
            - --db-user-file=/secrets/rds/db.user
            - --db-password-file=/secrets/rds/db.password
            - --db-name-file=/secrets/rds/db.name
            - --alsologtostderr
            - -v=${GLOG_V}
          containers:
          - name: service
            image: ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            volumeMounts:
            - name: tls
              mountPath: /secrets/tls
            - name: service
              mountPath: /secrets/service
            - name: rds
              mountPath: /secrets/rds
            - name: ocm-managed-services-providers-config
              mountPath: /config/provider-configuration.yaml
              subPath: provider-configuration.yaml
            - name: ocm-managed-services-allowed-users-config
              mountPath: /config/allow-list-configuration.yaml
              subPath: allow-list-configuration.yaml
            env:
              - name: "OCM_ENV"
                value: "${ENVIRONMENT}"
            command:
            - /usr/local/bin/managed-services-api
            - serve
            - --providers-config-file=/config/provider-configuration.yaml
            - --allow-list-config-file=/config/allow-list-configuration.yaml
            - --aws-access-key-file=/secrets/service/aws.accesskey
            - --aws-account-id-file=/secrets/service/aws.accountid
            - --aws-secret-access-key-file=/secrets/service/aws.secretaccesskey
            - --dex-password-file=/secrets/service/dex.password
            - --dex-secret-file=/secrets/service/dex.secret 
            - --dex-username=${DEX_USERNAME}
            - --dex-url=${DEX_URL}
            - --observatorium-gateway=${OBSERVATORIUM_GATEWAY}
            - --observatorium-tenant=${OBSERVATORIUM_TENANT}
            - --db-host-file=/secrets/rds/db.host
            - --db-port-file=/secrets/rds/db.port
            - --db-user-file=/secrets/rds/db.user
            - --db-password-file=/secrets/rds/db.password
            - --db-name-file=/secrets/rds/db.name
            - --ocm-client-id-file=/secrets/service/ocm-service.clientId
            - --ocm-client-secret-file=/secrets/service/ocm-service.clientSecret
            - --self-token-file=/secrets/service/ocm-service.token
            - --ocm-base-url=${OCM_BASE_URL}
            - --ocm-debug=${OCM_DEBUG}
            - --https-cert-file=/secrets/tls/tls.crt
            - --https-key-file=/secrets/tls/tls.key
            - --jwk-cert-url=${JWKS_URL}
            - --jwk-cert-ca-file=${JWKS_CA}
            - --enable-jwt=${ENABLE_JWT}
            - --enable-https=${ENABLE_HTTPS}
            - --api-server-hostname=${API_SERVER_HOSTNAME}
            - --api-server-bindaddress=${API_SERVER_BINDADDRESS}
            - --metrics-server-bindaddress=${METRICS_SERVER_BINDADDRESS}
            - --health-check-server-bindaddress=${HEALTH_CHECK_SERVER_BINDADDRESS}
            - --enable-health-check-https=${ENABLE_HTTPS}
            - --db-sslmode=${DB_SSLMODE}
            - --db-max-open-connections=${DB_MAX_OPEN_CONNS}
            - --enable-authz=${ENABLE_AUTHZ}
            - --enable-db-debug=${ENABLE_DB_DEBUG}
            - --enable-metrics-https=${ENABLE_METRICS_HTTPS}
            - --enable-ocm-mock=${ENABLE_OCM_MOCK}
            - --ocm-mock-mode=${OCM_MOCK_MODE}
            - --enable-sentry=${ENABLE_SENTRY}
            - --enable-sentry-debug=${ENABLE_SENTRY_DEBUG}
            - --sentry-url=${SENTRY_URL}
            - --sentry-project=${SENTRY_PROJECT}
            - --sentry-timeout=${SENTRY_TIMEOUT}
            - --sentry-key-file=/secrets/service/sentry.key
            - --http-read-timeout=${HTTP_READ_TIMEOUT}
            - --http-write-timeout=${HTTP_WRITE_TIMEOUT}
            - --enable-allow-list=${ENABLE_ALLOW_LIST}
            - --max-allowed-instances=${MAX_ALLOWED_INSTANCES}
            - --label-metrics-inclusion-duration=${LABEL_METRICS_INCLUSION_DURATION}
            - --alsologtostderr
            - -v=${GLOG_V}
            resources:
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
            livenessProbe:
              httpGet:
                path: /api/managed-services-api
                port: 8000
                scheme: HTTPS
              initialDelaySeconds: 15
              periodSeconds: 5
            readinessProbe:
              httpGet:
                path: /healthcheck
                port: 8083
                scheme: HTTPS
                httpHeaders:
                - name: User-Agent
                  value: Probe
              initialDelaySeconds: 20
              periodSeconds: 10

  - kind: Service
    apiVersion: v1
    metadata:
      name: managed-services-api
      labels:
        app: managed-services-api
        port: api
      annotations:
        description: Exposes and load balances the managed-services-api pods
        service.alpha.openshift.io/serving-cert-secret-name: managed-services-api-tls
    spec:
      selector:
        app: managed-services-api
      ports:
        - port: 8000
          targetPort: 8000
          protocol: TCP

  # Services for diagnostic ports (not part of main service because we
  # don't want exposing them externally through same route).
  - kind: Service
    apiVersion: v1
    metadata:
      name: managed-services-api-metrics
      labels:
        app: managed-services-api
        port: metrics
      annotations:
        description: Exposes and load balances the ocm example service pods metrics endpoint
        service.alpha.openshift.io/serving-cert-secret-name: managed-services-api-metrics-tls
    spec:
      selector:
        app: managed-services-api
      ports:
      - port: 8080
        targetPort: 8080
        name: metrics

  - apiVersion: v1
    kind: Service
    metadata:
      name: managed-services-api-healthcheck
      labels:
        app: managed-services-api
        port: healthcheck
    spec:
      selector:
        app: managed-services-api
      ports:
      - port: 8083
        targetPort: 8083

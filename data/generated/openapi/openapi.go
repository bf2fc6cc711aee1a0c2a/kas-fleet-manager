// Code generated by go-bindata. DO NOT EDIT.
// sources:
// openapi/managed-services-api.yaml (47.501kB)

package openapi

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _managedServicesApiYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\x6b\x73\xdb\x38\x92\xdf\xfd\x2b\xfa\x34\xb7\xa5\xdd\x2b\x4b\xd6\xc3\xaf\xa8\x6e\xb6\xca\x71\x9c\x8c\x66\x12\xc7\xf1\x23\x99\xcc\xd5\x95\x0c\x91\x90\x04\x9b\x04\x68\x00\xb4\xad\xec\xed\x7f\xbf\x02\xc0\xf7\x4b\x94\xad\xc4\xf6\x8c\xbc\xb5\x35\x11\x09\x34\x1a\x8d\x46\xbf\xd0\x68\x32\x0f\x53\xe4\x91\x01\xf4\xdb\x9d\x76\x67\x83\xd0\x09\x1b\x6c\x00\x48\x22\x1d\x3c\x80\x0f\x88\xa2\x29\xb6\xe1\x0c\xf3\x5b\x62\x61\x38\x38\x19\x6e\x00\xdc\x62\x2e\x08\xa3\x03\xe8\xb4\x3b\xed\xee\x06\x80\x8d\x85\xc5\x89\x27\xf5\xc3\xa2\x3e\x02\x73\xd5\x49\x41\x6e\x81\xcf\x9d\x01\xcc\xa4\xf4\xc4\x60\x6b\x0b\x79\xa4\xad\x70\x10\x33\x32\x91\x6d\x8b\xb9\x1b\x00\x39\x80\x84\xc2\xdf\x3d\xce\x6c\xdf\x52\x4f\xfe\x01\x06\x5c\x31\x30\x21\xd1\x14\x2f\x02\x79\x26\xd1\x94\xd0\x69\x21\xa0\xc1\xd6\x96\xc3\x2c\xe4\xcc\x98\x90\x83\xfd\x4e\xa7\x93\xef\x1e\xbd\x8f\x7b\x6e\xe5\x5b\x59\x3e\xe7\x98\x4a\xb0\x99\x8b\x08\xdd\xf0\x90\x9c\x69\x0a\x28\x34\xb7\x5c\x43\xa5\x96\x30\x54\x12\x2d\xf5\xf0\xb6\xbb\x75\x8d\x26\xd7\x48\x6c\xfd\x8b\xd8\xff\x1e\x68\x90\x53\x2c\xcd\x3f\x00\x98\x87\x39\x52\xb0\x87\xf6\x40\x3d\xff\x4d\xb5\x7d\x3d\x1f\xda\xc1\x7b\x8e\x85\xc7\xa8\xc0\x22\xec\x00\xd0\xe8\x75\x3a\x8d\xf8\x27\x80\xc5\xa8\xc4\x54\x26\x1f\x01\x20\xcf\x73\x88\xa5\x41\x6f\x5d\x09\x46\xd3\x6f\x01\x84\x35\xc3\x2e\xca\x3e\x05\xf8\x4f\x8e\x27\x03\x68\xfe\xb4\x65\x31\xd7\x63\x14\x53\x29\xb6\x4c\x5b\xb1\xa5\x91\x3b\xc5\x37\x3e\x16\xb2\x99\xe9\x89\xef\x91\xeb\x39\x49\x3c\xc3\xbf\x64\xaf\x77\x58\x9e\x06\x33\x3a\x32\x1d\xf2\xed\x8b\x71\x08\xe1\xa7\x90\x08\x60\x64\x71\x29\x1d\xf3\x0b\x91\xb3\xb7\x88\x38\xd8\x3e\xe4\x58\xd3\xe6\x4c\x22\xe9\x8b\x55\xe0\x52\x01\x37\x89\x5f\x8a\x9d\x74\x7f\xe0\x06\x00\x4c\x98\x4f\x6d\x18\xcf\x81\xd8\xf1\x62\x6f\x77\xba\x4f\xb3\xd8\x47\x9c\x33\x5e\x7f\x95\xb7\x3b\xdd\x87\x52\x31\xee\x5a\x4a\xa8\x03\x5f\xce\x40\xb2\x6b\x4c\x81\x08\x20\xf4\x16\x39\x69\x22\xf5\x5f\x08\x91\xfa\x0f\x27\x52\x7f\x11\x91\x2e\x04\xe6\x40\x99\x04\xe4\xcb\x19\xe3\xe4\x1b\xb6\x41\x32\x40\x96\x85\x85\x00\x39\xc3\x10\x48\xa6\x76\x92\x72\xdb\x2f\x84\x72\xdb\x0f\xa7\xdc\xf6\x22\xca\x1d\x33\xb8\x4e\x6d\xc5\x3b\x22\x67\x20\x3c\x6c\x91\x09\xc1\x36\x10\x1b\xf0\x3d\x11\x52\xc4\x84\xdb\x79\x2a\x21\xbc\x24\xe1\x76\x3a\x9d\x87\x12\x2e\xee\x5a\xce\x72\x14\xdf\x7b\xd8\x92\xd8\x06\xac\xf0\x02\x66\x69\x15\x19\xee\x4d\x81\x2d\x9f\x13\x39\x8f\xc7\x6e\xc1\x6b\x8c\x38\xe6\x03\xf8\x9f\xff\x0d\x1b\xf9\xae\x8b\xf8\x7c\x00\xef\xb0\x04\x94\x59\x89\x58\x1c\xda\xd8\xc1\x12\x17\x2a\x4e\xf3\x2a\xab\x3b\x3d\xc4\x91\x8b\x65\x60\xa4\x84\xc3\x13\x3a\x80\x1b\x1f\xf3\x79\x62\x4e\x14\xb9\x78\x00\x48\xcc\xa9\x55\x36\xd3\x13\xcc\x27\x8c\xbb\x7a\x1b\x21\x6d\xb3\x00\xa1\x80\xa8\xe9\x35\xe3\x8c\x32\x5f\x80\x8b\x28\xd5\xc6\x47\xd5\x0a\xcb\xb9\x87\x07\x30\x66\xcc\xc1\x88\x26\xde\xa8\x29\x13\x8e\xed\x01\x48\xee\xe3\x4a\x03\xa0\xf7\xfc\x78\x2f\x0b\xe9\xa7\x63\x06\x87\x06\xb1\x32\x9a\xbe\xd1\xcb\x96\x92\xe3\x2f\x63\x53\x6d\x77\x3a\x1a\x77\xc2\xe8\xc3\xa5\x52\x16\x44\xe9\x26\xfb\xac\x94\x9d\x9e\xaf\xd9\x64\x22\xbb\xcb\xd6\x66\xc2\xda\x4c\x58\x9b\x09\x86\x72\xdb\x46\xa8\x3c\xc2\x58\x48\x01\xf8\x8b\x9a\x0c\x8f\x23\x62\x16\xc0\xc3\xcd\x87\xd0\x32\x30\xe0\x2a\x8c\x83\x5a\xa6\x46\xde\x20\x68\x05\x13\x69\xa4\x26\x12\xb7\xdb\x22\x76\xa3\x9e\x7b\x6f\x20\x7a\x4c\x14\xbb\xf6\x96\xf2\x0b\x8d\x85\xf2\xe7\xb2\x4e\xf4\x42\xbc\x66\x76\x82\xee\x05\x2e\xae\x8d\x24\x8a\xde\x17\xf0\x7d\x35\xd7\x17\xf3\x7c\xdd\x48\xc5\x09\x9a\x3b\x0c\xd9\x69\xfe\x2f\xe3\xfe\x8b\xb3\x53\x3c\x25\xf9\x6d\xb7\x80\xe3\xc3\x6e\x25\x01\x89\xa3\x8b\x07\x41\x0d\xbb\xe5\xa0\x3e\x7f\x4b\xf1\xf1\xa1\xa2\x13\x26\xbe\x77\xac\x28\x6d\x3b\x58\x16\xf6\x5e\xaa\x35\x1a\x86\x9d\x1e\x61\x8d\x66\x40\xac\xad\xd1\xb5\x35\x1a\x12\x69\xc5\xd6\x68\x04\xf6\x03\xba\x3f\x70\x1c\x76\x87\xed\x21\x15\x12\x51\x0b\x9f\x62\x64\xcd\xb0\xfd\x88\xf1\x16\xc1\xac\x36\x8b\x27\x8c\x8f\x89\x6d\x63\x0a\x98\xc8\x19\xe6\x30\xc6\x16\xf2\x05\xd6\x8a\xd5\x57\x2d\x88\xa8\x65\x3b\x03\x4b\xf7\x75\xd1\x3d\x71\x7d\x17\xa8\xef\x8e\x31\x07\x36\x01\x12\xa0\xa7\xba\x21\x09\x16\xa2\x30\xc6\x81\x9d\xa0\xa3\xc0\x72\x46\x84\x19\x73\x86\x04\x8c\x31\xa6\xc0\xcd\x54\x5e\xa6\x61\xfe\x1d\xe3\x77\xe7\x33\x1c\x9a\x22\xd8\x56\x8a\x90\xf9\xdc\xc2\x60\x33\x2c\x68\x53\x1a\x43\x3c\x49\xb3\x57\x2f\x84\x66\xaf\x8e\x91\x8b\x0f\x19\x9d\x38\xc4\x92\x0f\xa7\x5f\x11\x98\x72\xa9\xa5\xe8\xa1\x5b\xc6\x7c\x67\x63\x69\xac\x74\x42\x35\x37\x5b\x81\xae\x50\x7c\xac\xd9\x34\x24\xf9\x8b\x74\x76\xbe\x63\x7c\xf4\x80\x82\x5f\xe6\xe3\x04\x54\xa4\x53\x4d\x52\x63\x27\x07\xb6\x4a\x7d\x97\x26\xe1\x23\x69\x05\xae\x7c\x24\x8a\xef\x02\x3f\x29\x09\x2e\x71\xe8\x18\x75\x39\xc5\xd2\xe7\x54\x00\x02\x87\x08\xa9\x56\x33\x75\x22\x25\x8a\x3c\x19\xd5\x52\xb7\x12\xcb\x60\x59\xe7\x1c\x33\xc3\x86\x95\x28\xfd\x50\x96\x4a\x9a\x91\xef\x49\xd2\xa0\xcd\xd9\x88\xa9\x39\xbc\x46\x76\x88\xf7\x0b\xd8\x09\x43\x63\xa0\x7c\x52\xde\xe7\x23\xec\xc8\x02\x30\xcd\x72\xcb\x70\x09\x83\xe9\xf9\x52\x6e\xc5\x66\xe4\x5f\xd7\x32\x7c\x74\x9c\x32\xab\x75\x96\x8a\x36\x3d\x67\x52\xaf\x54\x4d\x15\x87\x9e\x8a\x80\x24\x22\x61\x1e\x9a\x26\xd6\x6a\x61\x73\x41\xbe\x2d\xd3\x9c\x71\x1b\xf3\xd7\xf3\x65\x06\xc0\x88\x5b\xb3\xe6\xa2\xe8\x9c\xe5\x30\xdf\x1e\x79\x9c\xdd\x12\x3b\x9a\x70\x89\x2e\xe4\x04\xdf\x62\xc3\x5a\xa1\xf2\x11\xbe\xe7\x31\xae\x58\x46\x03\x82\x08\x50\xbb\x4c\x37\x1e\xaa\x76\x27\x61\xb3\x47\xea\xc8\x66\xaf\xd3\x69\x96\x32\x74\x88\xb2\xbd\x18\xdd\xa7\x60\xf1\x14\x25\xd2\x7a\xb3\xb9\xdd\xe9\x96\xcf\x6b\xad\x07\x0c\x91\x76\xaa\x16\x7f\x2d\xcd\x9e\x40\x9a\x2d\x23\x6a\x74\xc2\xdf\x16\xd7\x11\xdc\x47\xc8\x9d\x00\x80\x71\xb5\x70\xe9\x0e\xaf\x27\x8f\x4c\x3c\xf9\xd9\x48\xa5\x70\x72\x4f\x26\x9d\x0c\x3d\xd6\xb2\x69\x2d\x9b\xa2\xbf\x1f\x26\x9b\x16\x9c\x39\xa6\x1b\xff\x50\x41\x16\xfc\x46\x96\xc5\x7c\x2a\xf3\xb2\xab\x8e\x48\xf8\x61\xcb\x1b\xe4\xa4\x1f\x18\x64\xd3\x5b\x39\xc3\x96\xef\x43\x79\x14\xc4\x68\xc3\x09\x96\x6f\xfd\xe7\xca\xa4\x4f\x79\x70\xd1\xdc\xee\xf4\x5f\x08\x91\x9e\x85\x7b\x5a\x2e\x33\x9f\x2b\xe1\x5e\x40\xce\x68\xce\xcc\x49\x8b\x01\x91\xb5\xb2\xf4\xd6\x2f\xdc\xf7\xc9\x94\x8d\xc5\xe9\x0c\x19\x10\xb9\xf0\xde\x0f\xc8\x6d\x48\xcf\xb4\xf0\x8c\xbd\x6c\x69\x45\x4d\xbe\x89\x96\xb3\x70\xac\x07\xa7\x23\x3c\x17\x25\x51\x7f\x27\xa4\x35\xe1\xd2\xbb\x21\x3d\xec\xa2\x8d\x91\xe5\xad\xe0\x2c\x70\xad\x9d\xd6\xda\x69\x69\xed\xe4\x14\x9b\x3a\x6b\x5d\xf4\xbd\x75\x91\xd9\xb4\xe9\x8d\x9f\x55\x46\xd1\x49\x5d\x7e\x75\x9a\xcb\x18\xe6\x3a\xc2\x10\xac\x62\x3e\x55\xb2\x68\xe9\x0b\xd2\xef\x53\x59\x0b\xa1\xe8\xd1\xc9\xac\xea\xc5\x94\xdc\xaa\x7d\x56\x74\x03\xe3\x91\xbe\x4d\xb1\x7e\xd8\x7e\x26\x4c\x99\x22\x94\x9d\xb9\xa7\xb0\x16\xc4\x9a\x2c\xe8\xcf\x22\x88\x1f\x41\xa4\xe7\xee\x26\xc0\xbf\xfe\xfd\xa7\x15\xb5\x66\x5b\x56\x8b\xda\x40\xc6\xad\x42\xd0\x6e\x71\x2c\xb0\x6c\x59\x1c\xdb\x98\x4a\x82\x1c\x11\xac\x52\xd2\x83\xf8\x2e\x42\xf1\xa5\x19\xcd\xa8\xa5\x49\xf5\x9d\xcd\x65\x3d\x06\x24\x96\xe3\xc1\x8c\xa4\x21\xa5\x07\x3f\xe4\xd8\xce\x39\x91\xb9\x11\x61\xc2\x78\x91\xfe\x5c\xa2\x22\xc0\x96\x8b\x25\x27\x56\xc5\x01\xc1\x3b\x2c\x21\x68\x04\xe3\x79\x90\xd9\x43\xec\xc2\x80\xff\x14\xcb\x0f\xa6\xe9\xeb\xb9\xce\x5a\x19\x2e\xb5\xbd\x96\x8e\xf5\x1f\xc0\xaf\x67\x1f\x8f\x01\x71\x8e\xe6\xca\xdc\xf4\x38\x73\xb1\x9c\x61\x5f\x44\x28\xb3\xf1\x15\xb6\xa4\x80\x09\x67\x2e\xb0\xb1\x22\x05\x92\x8c\x13\xdf\x7d\x0a\x9e\x0e\xa8\xb3\x8e\xf8\xaf\x23\xfe\xd1\xdf\xf3\x8c\xf8\x97\x36\xb6\x7d\xb3\xdf\x97\xe8\x42\xa8\x54\xdb\xce\x59\xa2\xcb\x84\x38\xea\xbf\x8d\x8d\x8d\x0d\x80\x9f\xd4\xff\xe1\x7c\x86\x05\x06\xc4\x8d\xcb\x60\x31\x4a\xb1\x25\x19\x07\x8e\x1d\x9d\xb3\x7c\x70\x32\x14\x41\xe3\x6a\xed\x1a\x75\x6d\xc9\xb9\x87\x53\x6e\xcc\x73\x3d\x65\x38\x0c\x51\x3e\x9f\x7b\xd5\x79\xc8\x31\x5d\xd4\xe4\xc0\x45\xd2\x9a\x85\x49\x9e\xd9\x68\xe1\xda\x91\xa8\x17\xd1\x79\x2e\x5e\xe1\x22\x22\x7d\xe7\x1a\x15\x11\x2f\x65\x78\x2c\x73\xd1\x74\x1d\xdb\x79\xbc\xc3\x01\x85\x86\xe2\x14\xcb\x94\x20\x78\x3d\x1f\xbe\x29\x32\xd7\x50\x76\x85\xc6\x73\x7d\x8b\x13\x10\xb5\xc3\x52\x5b\xc6\x75\x78\xd8\x8d\xd4\x85\x99\x28\x69\x01\x9b\x13\xad\x3f\x3a\x01\xf0\xf9\x8a\xf2\xca\xf3\xe2\x38\x07\x3d\xbd\x9c\xeb\x03\xe3\xe5\x04\xf8\x5a\x1e\x7d\x27\x79\xa4\xf3\xbb\x92\xec\x9c\x73\x59\xf3\x37\x3c\xf2\xac\x5c\xdb\x55\x8d\xc5\x8a\x8d\x3d\x87\xcd\x5d\x1c\x65\x87\x2c\xb8\xf8\x1e\x21\x59\x29\x80\xfe\x74\x97\xdf\xa3\x69\xff\xf0\x0b\xf0\xd1\xc8\x2f\xe9\xd2\x78\x01\xd2\xeb\x4b\xda\xeb\x4b\xda\x4f\x7b\x49\x7b\x7d\xbf\x76\xd9\xfb\xb5\xeb\xab\x9f\xcb\x5d\xfd\xb4\x32\xca\xb1\x9e\x21\x50\x7c\xef\x33\x0d\x6b\x6d\xf2\x67\x14\xcb\xd2\xe6\x7e\xc2\xd0\x59\x1b\xfd\x6b\xa3\xff\xd9\x19\xfd\x0f\x32\xf8\x1f\x51\x09\xab\x3a\xb0\xbb\xd0\x59\xd8\xfa\x97\x55\x18\xeb\x5d\x41\xd4\xdc\x38\x0a\x56\xea\x68\x26\xa7\xc4\x88\x1d\xde\xa3\xc9\x0a\xdd\x32\x6e\x33\x1e\x81\x90\x9c\xd0\x69\xe2\x85\x72\x55\x3c\x24\x67\x8b\x7d\x84\xe7\x28\x06\x6b\x06\xb0\xe3\x85\x5b\x87\xb1\xd7\x61\xec\x5a\x44\x5a\x87\xb1\x97\x22\xd8\xd3\x87\xb1\xb3\xfa\x23\x1b\xbe\x8e\x65\xc0\x06\xd4\x4c\x01\x34\x92\xb8\x5c\x10\x0f\x9f\x87\x10\x7e\x2e\xbb\xb1\xb2\x24\xf2\x5a\xb4\xfe\xc9\x44\xeb\xb3\x2d\x4f\xfb\x92\xc4\xed\x73\x29\x4f\xbb\xbc\xe8\x35\xf2\xb3\x54\xfa\x46\xc9\xdb\x69\xc9\xf8\xd0\x63\xc2\x8d\x8d\xf8\xa5\xea\x19\x50\xdc\x00\xf9\xa8\x13\xb3\x4e\xf1\x04\x73\x4c\xad\x88\x8c\x46\xd6\x9a\xac\xad\x50\xcc\x73\x35\x07\x49\x92\xab\x41\xec\x24\xdd\x0b\x05\xf4\x35\xa1\x8b\x1b\xcd\xd4\x34\xaa\x1a\x29\x97\x7d\x10\x09\xf2\x40\xba\x27\x08\xae\x46\x49\xfc\xf4\xd0\x14\x27\x7e\x0a\xf2\x2d\xf9\x53\x32\x89\x9c\xc4\x6f\x22\xb1\x2b\x96\x9b\x78\xad\x59\x29\x2c\xf2\x8d\x08\x95\x78\x9a\x38\x83\x50\xc8\x2d\x6e\xa5\x71\xae\x6e\xa6\x77\x50\xd8\x04\x39\xce\xc7\xc9\x22\x37\x2a\xdc\x7b\x19\x26\x48\x3a\x54\x05\xf4\x28\xa3\x09\x68\x71\x61\xe7\xb6\x62\x89\xde\x56\x0b\x89\x0a\x84\x47\x69\xf3\x68\x0b\x8d\xd2\x6c\x57\xd8\x49\x13\x23\xc9\x35\x4b\x11\x44\x75\x7c\x04\x15\x34\x43\x15\xa3\xa8\x93\x24\x33\x6f\x0a\x9b\x43\x25\x82\x7a\x7a\x06\xc3\x64\x5d\xb2\x27\x5e\x7d\xa1\xbf\x77\x54\x7b\x41\xd3\xa5\x32\x6a\x77\x73\x7d\x47\x92\x11\xfa\x56\xdc\x21\x7f\x6c\x07\x41\x81\x89\xfa\x8c\x76\x47\x97\x40\x47\x1b\xba\x75\x1b\x8f\x19\x93\x42\x72\xe4\x9d\xe9\x0f\x94\xfd\x92\x38\x30\x5d\x4c\x2e\x73\x13\x70\x84\x72\x5d\x26\x8c\xbb\x48\x0e\xc0\x46\x12\xb7\x24\x71\x71\x5d\x90\xbe\x67\xaf\x1a\xe4\x44\x7f\x01\x6b\xb4\xd4\xde\x2e\xfc\x78\x48\x11\xcb\x56\xd5\x74\xce\xef\x86\xef\xbd\xfd\x0b\xd1\xd6\x9a\x01\x1a\x59\x3c\x1a\xa9\x46\x5a\x33\x40\xa3\x9b\x7e\xaa\x35\x41\xee\xa9\x91\xfc\xb9\xc7\x4a\x68\x64\xc9\x5b\x69\xf0\x2c\x28\x83\xfd\x7d\x65\x59\x86\xfc\xf1\x5f\xf5\x42\x24\x71\xce\xaf\x6f\x50\xd3\x3d\x04\x9b\xfe\x10\xa0\x86\x10\xa5\xe6\x47\xdf\x0a\x60\xf6\x1c\x04\xa6\x12\x24\x83\x20\x52\x09\x27\x1f\xcf\xce\x2b\x6c\x0b\xb5\xc1\x97\xb3\x0e\xca\x05\x5b\x3e\xce\x96\xaa\x85\x03\x77\x33\x1c\x64\xd6\x9a\x82\x97\x96\xe3\x0b\xa9\x9e\x13\xc7\x49\x56\x06\x26\x74\x91\xf1\x51\x24\x25\xd3\x14\xc2\xd2\x94\x6d\x95\x4c\xbb\xc9\xea\xbf\x16\xa3\x13\x32\xf5\x0b\x51\x90\x4c\x21\xa0\xc1\x1e\xfc\x91\x1b\x3d\x2b\x76\xb3\x52\x31\x35\x74\x53\xcd\x5c\xa7\xc2\x05\x21\x80\xd4\x48\x6d\x18\x4a\x70\x7d\x21\x15\x3a\x22\x88\x5f\x3b\xec\x0e\xf3\x96\x85\x04\x06\xe4\x78\x33\x44\x7d\x17\x73\x62\x81\x35\x43\x1c\x59\xca\xd8\x05\xc6\xa1\xd9\x6c\x35\x9b\x9b\x4a\x0f\xf1\xc0\xd9\x41\xd4\xb4\x1f\x63\x99\x6c\xbd\xa9\x93\xf0\x30\xb5\xd3\xad\x72\x50\x4d\x3b\x0b\x51\x7d\x7b\x6b\x8c\xc1\x61\x74\xaa\x88\x31\x43\x14\xfa\xbd\xc4\xf0\xed\xe6\xa2\x15\xc9\x6b\xa1\x82\xe3\x55\xd5\x64\x45\x5c\x90\xab\xbc\xf6\x54\xb2\x30\x87\xc8\xd3\x0b\xc3\x14\x4a\x2f\x45\x1a\xa6\x90\x6e\xc4\x6b\x1c\xd7\xaf\x7a\xd2\x15\x8e\xd1\x78\x26\xeb\x5b\xfa\x35\x8e\xe7\xbb\xba\x06\xe5\x46\x7e\xff\x16\x2a\xb9\xe6\x61\xba\xfa\x5b\xb3\x42\x27\x65\x3d\xd6\x34\xa0\x21\xb5\x89\x85\x64\x50\x7f\x4e\x07\xe2\xc3\xaa\xde\x86\x11\xda\xf0\x25\x10\x3e\xcd\x66\x0a\xb1\x66\x13\x1c\x42\xaf\x17\x8b\x3f\x52\x31\xfc\x05\x25\x37\x3e\x06\xa2\xaf\xd4\x4d\x88\xa9\x8d\xaf\x30\x09\x06\x5f\x08\xdc\x26\xc2\x73\xd0\x7c\x54\xad\x76\x8e\x13\x2a\x27\xa3\x78\x95\xa1\x10\x00\x01\xcf\xe7\x1e\x13\xb8\x86\x48\xaf\x1e\xee\x17\xdf\x45\x14\x26\x9c\x60\x6a\x3b\xf3\x82\xd9\xa5\x71\xd8\xd4\x48\x04\x2c\x0c\x97\xe8\x4e\x5c\x2e\xc6\x00\x53\x34\x76\x70\x05\x69\xbf\xcc\xb0\xfe\x86\x41\xc1\x9c\x89\x08\xbb\x9b\xe9\xeb\x20\x3f\xa1\x53\xa5\x0e\x3f\x9e\xbd\x89\xf4\x71\x1e\x89\xb4\xb6\x2f\x32\x9a\x02\xc0\x59\x21\x55\xcc\xc6\x6f\xe2\x5f\x8a\x34\x28\xd4\x83\xfa\xdf\xd6\xd3\xf1\xb8\xc1\xb9\xd9\x7c\x71\xcc\x1d\xd0\xaf\x88\xa9\x33\x5c\x76\xdc\x86\xcf\x84\x4f\x09\x25\x68\xd5\xdc\x16\x20\xb1\x2a\x2e\x33\x83\x4d\x90\xef\xc8\x01\x4c\x90\x23\x70\x4d\xf6\x4b\xdf\xe9\x2d\xe6\xc0\xe8\x9b\xe6\xe9\xaa\x3b\x40\x28\x7c\x38\x38\x6b\x9d\x9d\x7d\x8c\x5c\x09\x63\x92\x1d\x06\x26\x99\x7a\x8a\x7c\x39\x53\x6b\x6b\x22\xe2\xcd\x87\xe8\xe0\xd5\xc5\x60\xf2\xb1\xb1\xf4\x4c\xcd\x97\xd1\x61\x8a\x29\xe6\x7a\x8a\x7e\xc8\x9e\x51\x71\xd1\xf4\x35\xe6\x6c\x4c\x7e\xa9\x40\x48\x7a\xec\xda\xa0\x92\xdd\x56\x03\xd1\x72\x08\xa6\x72\xf8\x66\x89\xe0\x94\xea\x70\x86\x2d\x9e\xbf\xc3\xbe\xb2\x30\x46\xe1\x5d\xf7\x46\x01\xd7\x66\xe2\x7b\x19\xe6\x2d\xf6\x75\x95\x3f\x57\x52\x63\xa6\xb9\x52\x77\x77\x39\x5f\xaf\x82\xbd\x8a\xa5\x5f\x31\x2f\xa4\x07\x39\x48\xfe\x2e\xbb\x90\xbf\x60\xa8\xdc\xf2\x2d\xb1\x74\x45\xa1\xa8\x7c\x4d\xca\x61\xc2\x8c\x2d\xe6\xe3\xbf\x9c\xd0\x28\xdb\x97\x0f\xdc\xe6\x4f\x27\x83\xf2\xab\x5d\xea\x8c\x3d\xc0\xc1\xca\x43\xcf\x3b\x48\x39\x57\x64\x89\x32\x1b\x21\x77\x2e\xe1\x2c\x65\x8d\xad\x4a\x62\x3e\xa9\x67\x55\x3c\x55\x43\xc0\x44\x29\x88\x55\xae\x57\x00\xb6\x91\xdd\x65\xd0\xe8\xd2\xb1\x77\xb6\xd7\xf9\xc5\xf6\x4f\xf0\xb6\xd3\x91\x6c\xff\xea\x6c\xda\x3b\x7c\xff\x6d\xe2\xd7\x58\x52\x53\x4f\x23\x4f\x82\x91\x36\x0e\x47\xa3\x81\x39\xf0\x1f\x99\x0d\x3b\x1a\x73\x76\x8d\xb9\x64\x1e\xb1\x82\x4a\x1c\xa3\xf1\x5c\x62\x31\x22\x74\x94\x3e\x05\x0d\xff\xd4\xda\xb9\xdf\xc8\x88\xb0\x51\x60\x98\x05\x20\x5b\xd9\x0a\x45\xe1\x9f\x86\x3e\x80\xd1\xc8\x62\x54\xf8\x2e\xe6\x23\x36\x99\x08\x9c\xfa\x48\x8f\xfa\xbb\x45\x8e\x5f\x74\x92\xdf\x82\x73\xe2\x62\x21\x91\xeb\x0d\xa0\xbb\xdb\xed\xee\xee\x75\x7a\xfd\x4e\xa7\xd3\x29\x58\xe8\xcf\x0a\xc8\x00\xf6\xb7\xbb\x3b\xdb\xf5\x20\xed\x2e\x80\xb4\xb3\xbf\xbf\x5f\x0f\xd2\xab\x05\x90\xf6\x76\x7b\xbd\x95\xef\x9b\x17\xb2\xc5\x0c\xbf\x27\xb7\xd4\x92\x99\x04\x79\xc6\x2e\xd9\x75\xc8\xb6\x89\x12\xbc\xc8\x39\x29\x21\x70\x21\x85\xf2\xdc\x57\x4c\x9a\x02\xb2\x54\x65\xad\x18\xb0\x46\x5c\xa6\x87\xa8\x39\xef\x98\xcf\x72\xa8\x65\x53\x00\xe2\x43\x39\x42\xe5\x6e\xcc\xfe\x86\xff\x72\xdd\xcd\x47\x06\x0b\x7a\xdb\xcc\x1f\x3b\x55\xce\x93\x06\xa8\x4b\x7e\x98\x3a\x1e\x00\x3f\x25\x2e\x31\x86\x85\x3e\xe2\x3c\x72\xd3\x26\x75\x05\xb5\xd0\xca\xf9\x67\x2b\x1a\xe4\x14\x7b\x1c\x0b\x45\xca\xfc\x35\xf9\xf8\x43\x01\xfa\xfb\x87\x18\x0e\x4e\x86\xf5\xec\x55\xf5\x93\x79\x98\x1e\x9c\x0c\x3f\xf7\x8d\x55\x9c\x78\x93\xbc\x72\x5f\x6a\x69\x15\x2f\x73\xc6\xd2\x6a\x3e\xdc\xd2\x5a\x68\xa0\xa4\x62\x54\x29\xc2\xb4\xeb\x4a\x82\x60\xa2\x95\xc3\x7c\x36\x6d\x1e\x39\x52\x5d\x1b\x29\x6d\x9e\x67\xc7\xac\x3d\xdc\x95\x60\x74\x54\x9c\x5c\x56\xc6\x68\xe1\xdf\x81\xee\x1c\xe4\x3e\xa5\x3e\xb6\xe9\x0b\x53\x8c\xef\xd6\xdc\x96\x4c\xe5\x5d\x65\x75\x18\xc4\xaf\x46\xc2\xc3\x16\x4c\x08\x76\xec\x62\xfc\x0d\x4b\xc0\x4f\x20\x99\xcd\x06\xc0\xb1\xe7\x20\x0b\x9b\xf3\xa6\x31\x96\xfa\x48\x6d\xee\xe1\x8d\xfc\xe6\xa9\x11\xc9\x2f\x66\xd3\xf4\xc5\xa6\x27\x4a\x5b\x59\xa8\x41\x6a\xd7\xd6\x49\x5d\xd8\xfa\xeb\x12\x24\x43\x8c\x42\xd1\x7a\x90\xd8\xc1\x33\xe6\xd8\x22\xdc\x61\xfa\x38\xd7\xdc\x01\x36\xe7\xbb\xaa\x11\xa0\x20\x8a\xa5\x6d\x37\x5d\x89\x92\x32\x1d\xb7\x13\x73\x21\xb1\xdb\xfe\xf1\x32\x32\x45\x1e\x17\x4b\x64\x23\x99\xdb\xe4\x25\x70\xaa\x96\x50\xfd\x19\x93\x38\x6f\x4a\x41\x95\xac\x81\xb2\x44\xa0\x85\xbd\x8a\x44\xfc\xc2\x4e\xe5\xc9\x3d\x50\x23\x1b\x67\x21\xf8\xf2\x44\x9f\x07\x81\xcf\x28\x81\xf0\x72\xc0\xc8\x61\x26\x06\xba\xa2\x85\xab\x4e\x10\x5b\x38\xe9\xb2\x44\x31\xa8\x4c\x16\x83\xd2\x84\xb1\x6a\x32\xc4\x9a\x41\xb5\xa9\x93\xa3\x98\xef\xa9\x74\x4a\x6d\xda\xd5\xc8\xb6\xdb\xc8\x67\x0d\xc7\x78\x65\x6e\x68\x94\x5c\x93\xe3\xd8\x62\x3c\xca\x75\xce\xe8\xde\x82\x29\x65\xae\x63\x14\x5c\xc5\x08\x4b\xd7\xa5\xf1\x08\x9f\x26\xc0\x24\xab\x80\xa4\xb0\xd3\xe8\x39\x98\x4e\xe5\x4c\x1b\x13\xc4\xc5\x40\x28\xb8\x84\xfa\x12\x0b\x60\xb7\x3a\x93\x86\x58\x33\x25\xda\xb8\xbe\x0b\x69\xbe\xbf\x6d\x7c\xe0\x76\x39\x6e\x65\x53\xcc\xda\xe2\xc5\x96\x78\x74\x3c\xb1\x13\xfb\x35\x84\x12\xd7\x77\x07\xd0\x8d\x1f\x99\xaf\x80\x0f\x60\xbb\xdf\x0b\xfd\xc9\x7c\xa2\x7b\x96\x4a\x10\x7a\x18\x21\xf4\xb0\x9c\x5f\x66\x39\x83\xa7\x75\xc8\xa8\x17\x39\x68\xaf\xe8\x27\xb0\xc5\xa8\x2d\x94\x75\x72\xa7\x3f\xf8\x8c\x24\x02\x8f\x11\x2a\x7f\x00\xc9\xfa\x9d\x5a\x34\xeb\x76\xf6\x3b\xe5\x44\xcb\xd2\x24\x41\xb4\x00\x7e\x50\xd1\x30\x4d\xb4\xe0\x61\x1d\x9a\x85\x5f\x0f\x0a\x0b\x9b\x4a\x06\x13\x2c\xad\x59\x1b\xde\xaa\xff\x28\x95\x19\xbd\xbb\x9b\x61\x0a\xd8\xf5\xe4\xbc\x6d\xfa\x61\x2a\x39\xc1\x42\x57\x4f\x0c\x2a\xb8\x2a\x84\x29\x0a\xfb\x68\x7c\x22\x62\x17\xd3\x35\x6d\x79\xe4\x6c\x8e\x92\x18\x7a\x40\xe5\xa0\xc8\x6b\x32\x33\xdd\x90\x20\x91\x31\x5f\x39\xff\x13\x34\x55\x4c\x63\xe3\xfb\x1c\x47\x24\xcf\xe4\x6a\x08\x8a\xfc\xea\x65\xf3\xe5\x83\x95\x0b\x93\x41\x92\x89\xf2\x06\xe9\x44\x5e\x7f\x25\xd2\xc7\xf1\xf7\xf6\x15\xb9\x14\xaf\x63\x64\xcd\x92\x93\x5e\xe1\x34\xb2\x09\xfd\xd1\x34\x3a\x1d\x33\x91\xe0\x33\xa7\x85\x86\xdc\xff\xc5\xae\xcb\x59\x70\x4f\xc7\xd8\x72\xba\x93\xf2\x88\x2d\x4e\x24\xe6\x04\xb5\xf5\xfe\x15\x73\x2a\xd1\x7d\x74\x90\x1d\x49\x7b\x20\x22\x81\x90\x4b\x1c\xa4\x33\xf8\x64\xa6\x0b\x86\x51\x08\x78\x04\x96\x83\x7c\xa1\x9d\x4f\x44\xe1\xec\xd3\x7b\xad\x61\xb0\x52\xec\xb1\x87\x73\xa4\xe8\xa6\x09\x1d\xfa\x4f\xba\xbf\x71\xd6\x11\x9d\x87\x60\xaf\x13\x79\x9a\xc2\xb8\x49\x22\x86\xf2\x36\x3e\x82\xde\x54\xab\x61\x70\x30\xc2\x5a\x7f\x36\x50\xef\xa3\x20\x3d\x33\x31\x80\x9c\x61\xc2\x03\x03\x2b\x02\x76\x79\x79\x29\x6e\xe2\x48\xa6\x29\xb1\x27\xac\xe4\xfb\xb8\xf1\x47\xfe\xb0\xf1\x60\x84\xa8\x3d\x8a\xce\x85\x95\xa5\xb4\x18\x85\xcd\x84\x59\x57\x8e\xd2\xd0\x50\x2c\xb9\x74\xb4\x29\xc3\x8c\x07\x7b\x13\x18\x07\x62\xda\x68\x56\xd2\x27\xea\x4a\xaa\x6c\xaa\x67\xb1\xf1\x62\xce\xfe\x84\xef\x48\x11\x65\x0a\x26\xe6\xa2\x90\x6a\x47\x4c\xeb\x39\xcc\xc6\x29\x29\x9e\x67\xe4\x0c\x9f\x26\x79\x39\x9c\x61\xa3\x64\xfb\x99\xfd\x19\x00\x78\xec\x16\x13\x72\xee\x28\x29\xcd\xb8\xa9\x16\x6d\x3e\xfa\x5b\xbc\x7d\xe2\xdd\xa3\x1b\xc5\xbb\x25\xa6\xf7\x82\x6d\xb3\x60\xbb\xe8\xdc\xcc\xf4\x5e\x89\xc7\x4c\xed\x19\x38\x70\x1c\x76\x87\xed\x80\xfb\x15\xdf\x99\x93\x32\x8d\x18\xe2\x78\x90\x31\x70\x37\x35\xd9\x36\x8d\xdb\xb1\x19\xe6\x4f\x20\x6a\x07\xa6\x5e\x0c\x51\xb9\x5f\x88\x23\xc9\xb8\x51\x26\x97\xff\xfd\xcf\xcb\x4d\xb8\xfc\xf9\x52\xf1\xca\xe5\xfb\xe1\x6f\x47\x97\xf1\x66\x0b\x3b\x5d\x31\x42\x83\xe6\x07\xc7\x6f\x2e\x35\xe0\xcb\x8f\xa7\x97\x9b\x30\x63\x77\xf8\xd6\x64\x6d\x70\xcd\x5e\x08\x1c\xe2\x12\xa3\xe8\xd0\x3d\x74\x3b\x41\xe7\xf4\x14\xf4\x82\x27\x08\x7b\x14\x71\x50\x4c\xeb\xc4\x16\x2b\xb8\x8a\xa8\xd9\x08\xdf\xf8\xc8\x81\x4b\x77\xde\xd2\x2d\x0c\x62\xc1\xe4\x83\x77\xe8\x4e\x5c\x6e\x26\x76\x80\x98\x31\xdf\xb1\x61\x9c\xd9\x83\xe9\x0d\xf8\x33\x84\x20\x4d\x12\x6f\x8a\xd6\xf0\x33\xa0\x3b\x51\xbc\x21\x17\x20\x4d\xa4\x30\x03\xe8\x34\x63\x42\xa7\xe6\xf1\xa5\x3b\x5f\x1e\x47\x87\x5c\x63\x70\xe7\x7f\xeb\xed\x7c\x17\xd9\xa0\xc5\x5a\x24\x8e\x45\x42\x54\x20\xa9\x9f\xfb\x02\x73\x98\x21\x01\x1e\xe6\x2e\x11\x22\x88\x13\x08\x8c\x23\x11\x62\xec\x67\x6c\x27\x16\xfa\x98\x49\xdc\x0e\x71\x33\xca\x20\xbe\x90\xbb\xa9\xb4\x87\xb9\x29\x99\x05\x51\x21\x7d\x02\x85\xae\x19\xab\x44\xa6\x14\xcb\x8f\x02\xfd\x9b\x12\x0f\x90\x95\x5a\x35\xd8\xa2\xf1\x50\xd9\x14\xde\x05\xd5\xb1\xe7\x10\xa7\xe0\x32\x68\x12\xa6\x72\x3d\xf5\xd3\xe0\xa1\xf9\xf1\x36\xb0\x90\x7f\xfd\x12\x5e\x47\x30\x03\xce\xa4\xf4\x36\xb2\x33\xbd\x38\x4b\xa5\xb7\x86\xe0\x6f\xd3\x87\x01\x81\x23\x0b\x0d\x5f\xb4\x30\x12\xb2\x95\x48\xac\xcd\x78\xd7\xd0\x48\xcc\x3c\x5c\x90\x46\xf8\x0d\x0c\x8f\xc8\xe8\x0e\xc6\xd1\xc5\x52\x43\x63\xbf\x75\x87\x57\x34\x74\xc1\x25\x96\x92\xe1\xcd\x61\x2b\x39\xfb\xba\x7b\xfa\xa9\xff\xeb\x6f\xc3\xfd\x4f\x9d\x8f\xe7\xee\xd5\xa7\xb7\x76\x9f\x59\x6f\x4f\xa7\xf1\x70\xc1\x91\xad\x66\x89\xf8\xe9\xcc\x9c\x76\xd5\xa9\x74\x53\x6b\x94\xc0\x5b\x87\x06\xc7\xc8\x9e\xd7\x25\x45\x14\xc2\x48\xee\x95\xea\x65\x35\x41\x2b\x80\x06\xf2\xc8\x28\x3e\x0d\x26\xc9\x04\x91\x1c\x85\xe3\x57\x45\x37\xd4\x92\x2d\x5b\x5d\x22\xe6\xbb\xfc\xa6\x7f\x75\x4d\xf6\x6f\x3a\x4c\xba\x57\x37\x13\x35\xdb\x09\x9f\xb6\x91\xe7\x89\xb6\x2b\x5a\x63\x29\xa7\x9d\x2b\xda\xdd\xeb\xcc\xbc\xf6\xfd\x8e\xbf\xdf\x16\xdd\xb6\x8d\x6f\xc5\x8c\x4c\x64\x9b\xf1\x04\x5d\x12\x81\x2f\x5d\x74\xb2\xd3\xea\x76\x5a\x9d\x9d\xf3\x6e\x6f\xb0\xd3\x1d\xf4\xb6\xdb\x9d\x9d\x7e\x77\xbb\xf7\x47\xdc\x23\x11\xcb\xca\xf5\xd8\x1d\xf4\x77\xdb\xfd\xdd\x5e\xaf\xb3\xff\x47\x9e\x63\xde\xea\xbb\x69\x61\xf9\xc4\x33\xbd\x22\x2f\x94\x8b\xcc\x35\xbb\x35\x1b\xfd\x28\x36\x82\xdc\xd5\x46\x68\xa0\xe0\x06\x73\xac\x61\x23\x43\xc1\x0a\x78\x0c\x92\xeb\x54\x74\xe9\xa4\x84\xef\x8a\x6e\xce\x34\xd2\x5c\x59\x24\x32\x53\xcf\x52\x69\xc3\xd0\x38\x70\xd1\x37\x46\xe1\x0b\x1e\x87\xb9\x4a\x89\xb6\x61\x62\x6f\xcc\x1f\xf9\x1b\x14\x35\x50\x4d\x5e\x5f\x88\x10\x2d\x60\xae\x0c\x6a\x17\x67\x70\x84\x84\xdc\x84\x44\x36\x72\x15\x6e\x55\xb9\x77\x25\x58\x06\x23\xb9\xf3\x16\xf2\xbc\x96\x48\x80\x4f\xf9\x0f\x8d\xec\x37\xf0\x26\x8c\x83\x3b\x07\xe4\x79\x45\x49\x7d\x75\x84\x47\x4e\x44\xa4\x41\x2c\x27\x2b\xb2\x9f\xa4\xea\xe6\x58\xe0\xd1\x33\x84\x64\x56\x1e\x34\xce\x0e\x5a\xdd\x9e\xfa\x5f\xf6\x6d\x90\x1a\xab\x00\xaa\x7f\x54\xe5\x3c\xae\x80\x4c\xe9\xac\xad\x17\x43\xae\xed\xa0\xca\xc8\xc2\x5d\x64\x88\xd0\xe9\xe7\xc8\x90\xb8\xe9\x5f\x77\xd6\xa6\xd8\xef\x56\x0a\x9a\x2e\xcc\x00\x8d\x0f\xef\xde\xb4\xce\x8e\x4e\x3f\xb7\x0e\x4e\x86\xad\x54\x83\x48\xaa\x9d\x25\xca\x65\x87\x85\xb4\x85\xbe\xfe\x18\x25\x66\x6c\x2a\xbf\xc1\x14\xd6\xfe\x59\x5f\x1d\x8d\xfc\x93\x84\xfe\x48\x56\x6b\x50\x3a\xf4\xcb\x90\xb8\x37\xef\x2c\xfe\xc6\x7f\xbf\xdb\x45\x17\xf7\xc3\x3f\x6e\x5e\x9f\xdf\x1c\x9f\xa2\x88\x52\x25\xa5\x91\xd7\x94\xca\x51\x6a\x68\x5c\xad\x4f\xca\x3b\xaa\x41\xad\xde\x4a\xa9\xd5\x5b\x40\xac\x5e\x11\xad\x8c\xe9\xa5\x7c\x4b\x0f\x71\x91\x0e\x21\x0c\xe0\x42\x8b\x78\xf5\x56\xd7\xab\x4c\xe9\x52\xf3\x7d\xb5\x9c\x15\x32\x80\xcc\xa0\x03\x58\x34\x46\x9c\x58\x64\x31\xc7\x77\xa9\x71\xc1\x15\xf4\xc0\x65\x84\x26\xb1\x9b\x6d\x38\x2b\x6a\x27\x4c\xc4\xc6\x98\x4c\x61\xa4\xa6\x38\x7e\x13\x46\x6b\x3e\x19\xcf\xd8\xac\xd5\x00\x88\x0d\x3f\x43\x37\x49\x9d\xec\xca\x3b\x5f\xde\xbc\xf3\xe7\xe3\x21\x3f\xa2\xf7\xfc\x00\xbb\x7b\xbd\xed\xe9\xcd\xf5\x35\x79\x73\x1b\xae\x7c\xb6\x28\x5f\xd1\x6a\x6f\x77\xb6\x57\xb8\xda\x7b\xd5\x8b\xbd\x57\xb0\xd6\x75\x0a\x45\x47\x13\x2a\xac\xe2\x54\x34\xad\xbd\xa7\x9d\x54\xe0\x47\x04\x73\x31\x81\x20\xfb\xe7\x66\x97\xfc\xd6\xb7\xfd\xcf\x5f\x87\xb7\xb7\x3b\x5f\x6f\xdf\x3b\xf3\x6f\x5d\xf7\xdd\x69\xff\xd7\xf9\xcd\x71\x53\x8b\x82\x09\xf3\xa9\x5d\xb1\xd9\xbf\x7e\xdc\x9b\xf6\xa6\xbb\xbf\x9c\xdb\x17\xbf\x5d\xa0\xde\xb5\xf8\x65\xbf\x77\xfd\xe9\x4d\x7f\x1e\x52\x28\x5b\x51\xad\x50\x1c\xe6\xd5\xe7\x23\xa4\x61\x77\x81\x30\xec\x16\x90\x27\xde\xc1\xb7\x98\x93\xc9\x1c\x7e\xfd\x72\x6e\x6a\xb5\x0d\xe0\x34\x08\xdc\x44\x5f\x3f\x0d\xf3\x51\xae\x31\xad\x47\xa3\xfe\xc5\xec\x68\x76\xe7\xfe\xfe\xda\xfb\x72\x32\x19\xf6\x9c\x63\x7c\xed\xd9\xdb\x7f\xbc\x09\x69\x94\xfd\x88\x76\xe1\xb6\x58\x21\x89\xb6\xab\x29\xb4\x5d\x44\x20\x81\x39\x34\x27\x8c\xb5\xc6\x88\x37\x43\x45\xb1\xe8\x7b\xb0\xed\x0a\x61\xf1\xb5\x7f\x41\x8e\x66\xdf\x68\x82\x2a\x57\x9e\xbd\xfd\xf5\x30\xa2\xca\x07\x74\x1f\x04\x7f\x87\x54\x48\x44\x2d\x7c\x8a\x91\x35\xc3\x76\x0d\x72\xed\xac\x90\x5c\x3b\xd5\xe4\xda\x59\x4c\xae\x19\x12\xea\x9d\xc2\x1d\x50\x78\x1a\x1c\xa4\xb8\x02\x9b\xc0\x2e\xa0\x20\xca\x4d\x82\x99\x8a\x85\xa4\xbb\xbe\x57\xa4\xfb\x7c\x82\x87\x3d\x76\x8c\xaf\xec\xfe\xef\xaf\x43\xca\xbd\x3a\x46\x2e\x3e\x64\x74\xe2\x10\xab\x8e\x91\xdf\xdf\x5d\x21\xb5\x92\xc0\x8a\xc8\x95\x7c\x9f\x16\x4f\x51\xa1\x08\xad\xd8\x88\x00\xe4\xe8\x68\x93\xce\x71\x2c\x25\xc7\xee\xf5\xd7\x8e\x22\xc7\xb7\xeb\xdf\x0f\xbf\x7d\xd1\xe4\xf8\x8a\x67\x76\xff\x28\xd8\x5e\xf9\xca\xa6\x45\x24\x78\xb5\x42\x0a\xbc\xaa\x26\xc0\xab\x42\xf9\x13\x97\x35\xc4\xe9\x81\x73\xe2\x04\x1f\xbd\xbf\x7d\xfb\xea\xea\xc3\xa7\xaf\xbb\x5f\xa7\xb3\xc9\x87\x57\xd3\x77\xa7\xe2\x97\xdb\xa3\x2f\xd1\x7c\x6b\x2b\xa5\x27\x9e\xb5\x09\xb3\xeb\x72\x82\x84\x4e\x41\x99\x99\x42\xf9\x64\x1f\x0f\x3f\xb4\x8e\x7e\x6f\xbd\x1a\x04\xf1\x07\x25\x5c\xec\xe0\x23\xc8\x61\x1b\x7c\x2f\x5b\xa9\x78\xcc\x7d\xa7\xef\x50\xdb\x71\x6f\x3a\x37\x13\x6b\x4f\x10\x89\x76\x84\x73\x75\xbb\x9f\xcc\x06\x53\xc6\x52\xc8\x64\x8a\x00\xdd\xe9\x8e\xbd\xbf\x7f\xd3\x71\xb8\x65\xdf\x6e\x4f\xf7\x90\x33\xde\x13\xce\x64\x4a\xaf\xfa\xf6\x6c\x2c\xae\xfe\xf6\x1f\x7f\x3f\xfa\xfd\xfc\xf4\x00\xfe\xcb\x4c\xb2\xad\xc9\xf3\x73\x7c\x17\x3a\x01\x9b\x08\x53\xc3\x73\x53\x4f\x5f\xff\x3c\x7c\x7f\x71\x76\x7e\x74\x7a\xd6\xfa\xf0\xee\xc3\x79\x4b\xbd\xd4\x31\xfb\x68\x45\x93\x97\xaa\x55\xfb\xee\x74\x87\xf1\x9d\xce\x2d\xf1\x3b\x7b\x0c\xab\xf5\x9a\xf1\x6b\xab\xb7\x6b\x4f\x27\xf2\xaa\x8b\xac\x54\x69\xcb\xf0\x0a\x6f\x73\xd1\x24\x12\x8a\xfc\x1f\x55\x5a\xea\x5c\x7c\xe1\xf3\x5d\x2a\x6e\xc6\x3d\x71\xec\xbe\xbd\xda\x19\xff\xee\xbd\xd9\x3b\x44\x8d\x8d\xff\x0f\x00\x00\xff\xff\x2f\x8d\x9b\xec\x8d\xb9\x00\x00")

func managedServicesApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedServicesApiYaml,
		"managed-services-api.yaml",
	)
}

func managedServicesApiYaml() (*asset, error) {
	bytes, err := managedServicesApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-services-api.yaml", size: 47501, mode: os.FileMode(0644), modTime: time.Unix(1612790261, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0x21, 0x91, 0x89, 0x49, 0x95, 0x6d, 0x4a, 0x8d, 0x80, 0xe6, 0x2e, 0xbe, 0xd3, 0x8c, 0xc4, 0x5, 0x69, 0xad, 0x8d, 0x9a, 0x9c, 0x14, 0x44, 0x55, 0xad, 0x3b, 0x9f, 0x84, 0xed, 0xe0, 0x16}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"managed-services-api.yaml": managedServicesApiYaml,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"managed-services-api.yaml": {managedServicesApiYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}

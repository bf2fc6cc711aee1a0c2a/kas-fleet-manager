// Code generated by go-bindata. DO NOT EDIT.
// sources:
// openapi/managed-services-api.yaml (36.368kB)

package openapi

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _managedServicesApiYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\xfb\x57\x1b\x39\xb2\xff\xef\xf9\x2b\xea\xeb\xfd\xee\xf1\xee\x3d\xd8\xb4\x1f\x3c\xe2\x73\x73\xcf\x21\x40\x32\xcc\x24\x84\x60\x18\x26\x73\xcf\x3d\x46\xee\x96\x6d\x41\xb7\xd4\x48\x6a\xc0\xd9\xbb\xff\xfb\x3d\x92\xfa\xa1\x7e\xf8\x05\x4e\x80\x5d\x98\x1f\x26\xee\x96\x4a\xa5\x8f\xaa\x4a\xa5\x52\x49\xcd\x42\x4c\x51\x48\x7a\xd0\x69\x3a\x4d\xe7\x0d\xa1\x23\xd6\x7b\x03\x20\x89\xf4\x71\x0f\x3e\x23\x8a\xc6\xd8\x83\x3e\xe6\xb7\xc4\xc5\xb0\x77\x72\xf4\x06\xe0\x16\x73\x41\x18\xed\x81\xd3\x74\x9a\xad\x37\x00\x1e\x16\x2e\x27\xa1\xd4\x0f\xab\xea\x08\xcc\x55\x25\x45\xb9\x01\x11\xf7\x7b\x30\x91\x32\x14\xbd\xcd\x4d\x14\x92\xa6\xe2\x41\x4c\xc8\x48\x36\x5d\x16\xbc\x01\x28\x11\x24\x14\xfe\x16\x72\xe6\x45\xae\x7a\xf2\x77\x30\xe4\xaa\x89\x09\x89\xc6\x78\x11\xc9\xbe\x44\x63\x42\xc7\x95\x84\x7a\x9b\x9b\x3e\x73\x91\x3f\x61\x42\xf6\x76\x1d\xc7\x29\x57\x4f\xdf\x67\x35\x37\xcb\xa5\xdc\x88\x73\x4c\x25\x78\x2c\x40\x84\xbe\x09\x91\x9c\x68\x04\x14\x9b\x9b\x81\x41\xa9\x21\x0c\x4a\xa2\xa1\x1e\xde\xb6\x36\xaf\xd1\xe8\x1a\x89\xcd\x7f\x10\xef\x9f\x3d\x4d\x72\x8c\xa5\xf9\x07\x00\x0b\x31\x47\x8a\xf6\x91\xd7\x53\xcf\x7f\x53\x65\xdf\x4f\x8f\xbc\xf8\x3d\xc7\x22\x64\x54\x60\x91\x54\x00\xa8\xb5\x1d\xa7\x96\xfd\x04\x70\x19\x95\x98\x4a\xfb\x11\x00\x0a\x43\x9f\xb8\x9a\xf4\xe6\x95\x60\x34\xff\x16\x40\xb8\x13\x1c\xa0\xe2\x53\x80\xff\xcf\xf1\xa8\x07\xf5\xbf\x6c\xba\x2c\x08\x19\xc5\x54\x8a\x4d\x53\x56\x6c\x6a\xe6\x4e\xf1\x4d\x84\x85\xac\x17\x6a\xe2\x7b\x14\x84\xbe\xcd\x67\xf2\x67\xd7\xfa\x88\xe5\x69\xdc\xa3\x43\x53\xa1\x5c\xbe\x9a\x87\x84\x7e\x8e\x89\x98\x46\x91\x97\x99\x6d\x5e\x10\x39\xf9\x80\x88\x8f\xbd\x7d\x8e\x35\x36\x7d\x89\x64\x24\xd6\xc1\xcb\x1c\xba\x36\x7f\x39\x71\xd2\xf5\x81\x1b\x02\x30\x62\x11\xf5\x60\x38\x05\xe2\x65\x83\xdd\x75\x5a\x4f\x33\xd8\x87\x9c\x33\xbe\xfc\x28\x77\x9d\xd6\x43\x51\xcc\xaa\xce\x04\x6a\x2f\x92\x13\x90\xec\x1a\x53\x20\x02\x08\xbd\x45\x7e\x1e\xa4\xce\x0b\x01\xa9\xf3\x70\x90\x3a\x8b\x40\x3a\x17\x98\x03\x65\x12\x50\x24\x27\x8c\x93\xef\xd8\x03\xc9\x00\xb9\x2e\x16\x02\xe4\x04\x43\x6c\x99\x9a\x36\x72\xdd\x17\x82\x5c\xf7\xe1\xc8\x75\x17\x21\x77\xcc\xe0\x3a\xa7\x8a\x77\x44\x4e\x40\x84\xd8\x25\x23\x82\x3d\x20\x1e\xe0\x7b\x22\xa4\xc8\x80\xdb\x7a\x2a\x23\xbc\x22\x70\x5b\x8e\xf3\x50\xe0\xb2\xaa\xb3\x45\x8e\xe2\xfb\x10\xbb\x12\x7b\x80\x15\x5f\xc0\x5c\x3d\x45\x26\xba\x29\xb0\x1b\x71\x22\xa7\x59\xdb\x0d\x78\x8f\x11\xc7\xbc\x07\xff\xfd\x3f\x49\xa1\x28\x08\x10\x9f\xf6\xe0\x23\x96\x80\x0a\x23\x91\x99\x43\x0f\xfb\x58\xe2\xca\x89\xd3\xbc\x2a\xce\x9d\x21\xe2\x28\xc0\x32\x76\x52\x92\xe6\x09\xed\xc1\x4d\x84\xf9\xd4\xea\x13\x45\x01\xee\x01\x12\x53\xea\xce\xea\xe9\x09\xe6\x23\xc6\x03\xad\x46\x48\xfb\x2c\x40\x28\x20\x6a\x6a\x4d\x38\xa3\x2c\x12\x10\x20\x4a\xb5\xf3\x31\x6f\x84\xe5\x34\xc4\x3d\x18\x32\xe6\x63\x44\xad\x37\xaa\xcb\x84\x63\xaf\x07\x92\x47\x78\xae\x03\xf0\x0c\x95\xb6\x48\xe9\x2f\xc7\x0c\xf6\x0d\x63\xb3\x30\x3d\xd0\xc3\x96\xb3\xe3\x2f\x43\xa9\xba\x8e\xa3\x79\x27\x8c\x3e\xdc\x2a\x15\x49\xcc\x54\xb2\xdf\xd5\x64\xa7\xfb\x6b\x94\x4c\x14\xb5\xec\xd5\x4d\x78\x75\x13\x5e\xdd\x04\x83\x5c\xd7\x18\x95\x47\x38\x0b\x39\x02\xff\xa6\x2e\xc3\xe3\x40\x2c\x12\x78\xb8\xfb\x90\x78\x06\x86\xdc\x1c\xe7\x60\x29\x57\xa3\xec\x10\x34\xe2\x8e\xd4\x72\x1d\xc9\xca\x6d\x12\xaf\xb6\xdc\xf2\xde\x50\x0c\x99\xa8\x5e\xda\xbb\x6a\x5d\x68\x3c\x94\x7f\x2d\xef\x44\x0f\xc4\x7b\xe6\x59\xb8\x57\x2c\x71\x3d\x24\x51\xfa\xbe\x42\xee\xe7\x4b\x7d\xb5\xcc\x2f\x1b\xa9\x38\x41\x53\x9f\x21\x2f\x2f\xff\xb3\xa4\xff\xbc\x7f\x8a\xc7\xa4\xac\x76\x0b\x24\x3e\xa9\x36\x23\x20\x71\x78\xfe\x20\xaa\x49\xb5\x12\xd5\x15\x3c\xc5\xf6\x4b\x0d\x15\x9d\x30\xf1\xa3\x63\x45\x79\xdf\xc1\x75\x71\xf8\x52\xbd\xd1\x24\xec\xf4\x08\x6f\xb4\x40\xe2\xd5\x1b\x7d\xf5\x46\x13\x90\xd6\xec\x8d\xa6\x64\x3f\xa3\xfb\x3d\xdf\x67\x77\xd8\x3b\xa2\x42\x22\xea\xe2\x53\x8c\xdc\x09\xf6\x1e\xd1\xde\x22\x9a\xf3\xdd\xe2\x11\xe3\x43\xe2\x79\x98\x02\x26\x72\x82\x39\x0c\xb1\x8b\x22\x81\xf5\xc4\x1a\xa9\x12\x44\x2c\xe5\x3b\x03\xcb\xd7\x0d\xd0\x3d\x09\xa2\x00\x68\x14\x0c\x31\x07\x36\x02\x12\xb3\xa7\xaa\x21\x09\x2e\xa2\x30\xc4\xb1\x9f\xa0\xa3\xc0\x72\x42\x84\x69\x73\x82\x04\x0c\x31\xa6\xc0\x4d\x57\x5e\xa6\x63\xfe\x03\xe3\x77\x67\x13\x9c\xb8\x22\xd8\x53\x13\x21\x8b\xb8\x8b\xc1\x63\x58\xd0\xba\x34\x8e\xb8\x8d\xd9\xdb\x17\x82\xd9\xdb\x63\x14\xe0\x7d\x46\x47\x3e\x71\xe5\xc3\xf1\xab\x22\x33\xdb\x6a\x29\x3c\x74\xc9\x4c\xee\x3c\x2c\x8d\x97\x4e\xa8\x96\x66\x37\x9e\x2b\x94\x1c\x6b\x31\x4d\x21\x7f\x91\xab\x9d\x1f\x18\x20\xdd\xa3\x10\xcd\x5a\xe4\xc4\x30\xd2\xb1\xc6\xd4\x38\xca\xb1\xb3\xb2\xfc\x9a\xc6\x5a\x24\xe9\x19\x5c\x2d\x92\x28\xbe\x8b\x17\x4a\x36\x39\x6b\xd7\x31\xad\x72\x8a\x65\xc4\xa9\x00\x04\x3e\x11\x52\x0d\x67\x6e\x4b\x4a\x54\x2d\x65\x54\x49\x5d\x4a\xac\xc2\xe5\x32\x1b\x99\x05\x39\x9c\xcb\xd2\x4f\x15\x29\xdb\x8f\xfc\x44\x6c\x8f\xb6\xe4\x24\xe6\xfa\xf0\x1e\x79\x09\xdf\x2f\x40\x13\x8e\x8c\x87\xf2\x55\x2d\x3f\x1f\xe1\x48\x56\x90\xa9\xcf\x76\x0d\x57\xf0\x98\x9e\x2f\x72\x6b\xf6\x23\xff\x7d\x5d\xc3\x47\x07\x2a\x8b\xb3\xce\x4a\xe1\xa6\xe7\x0c\xf5\x5a\xa7\xa9\xea\xd8\x53\x15\x11\x2b\x14\x16\xa2\xb1\x35\x56\x0b\x8b\x0b\xf2\x7d\x95\xe2\x8c\x7b\x98\xbf\x9f\xae\xd2\x00\x46\xdc\x9d\xd4\x17\x85\xe7\x5c\x9f\x45\xde\x20\xe4\xec\x96\x78\x69\x87\x67\xcc\x85\x9c\xe0\x5b\x6c\x44\x2b\x99\x7c\x44\x14\x86\x8c\x2b\x91\xd1\x84\x20\x25\xd4\x9c\x35\x37\xee\xab\x72\x27\x49\xb1\x47\xce\x91\xf5\xb6\xe3\xd4\x67\x0a\x74\xc2\xb2\xb7\x98\xdd\xa7\x10\xf1\x1c\x12\xf9\x79\xb3\xde\x75\x5a\xb3\xfb\xf5\x3a\x0f\x18\x90\xb6\xe6\x0d\xfe\xab\x35\x7b\x02\x6b\xb6\x8a\xa9\xd1\x19\x7f\x9b\x5c\x87\x70\x1f\x61\x77\x62\x02\x66\xad\x85\x67\x6a\xf8\x72\xf6\xc8\x04\x94\x9f\x8d\x55\x4a\x3a\xf7\x64\xd6\xc9\xe0\xf1\x6a\x9b\x5e\x6d\x53\xfa\xf7\xd3\x6c\xd3\x82\x4d\xc7\x7c\xe1\x9f\x6a\xc8\xe2\xdf\xc8\x75\x59\x44\x65\xd9\x76\x2d\x63\x12\x7e\xda\xf0\xc6\x49\xe9\x7b\x86\xd9\xbc\x2a\x17\xc4\xf2\x53\x62\x8f\xe2\x20\x6d\xd2\xc1\xd9\xaa\xff\x5c\x85\xf4\x29\x77\x2e\xea\x5d\xa7\xf3\x42\x40\x7a\x16\xcb\xd3\xd9\x36\xf3\xb9\x02\xf7\x02\x92\x46\x4b\x6e\x4e\xde\x0c\x88\xa2\x97\xa5\x55\xbf\x52\xef\xed\x9c\x8d\xc5\xf9\x0c\x05\x12\xa5\xf0\xde\x4f\x48\x6e\xc8\xf7\xb4\x72\x93\x7d\xd6\xd0\x8a\x25\xe5\x26\x1d\xce\xca\xb6\x1e\x9c\x8f\xf0\x5c\x26\x89\xe5\x35\x21\x3f\x13\xae\xac\x0d\xf9\x66\x17\x29\x46\x51\xb6\xe2\xcd\xc0\xd7\xd9\xe9\x75\x76\x5a\x79\x76\xf2\xab\x5d\x9d\xd7\xb9\xe8\x47\xcf\x45\x46\x69\xf3\x8a\x5f\x9c\x8c\xd2\x9d\xba\xf2\xe8\xd4\x57\x71\xcc\x75\x84\x21\x1e\xc5\x72\xae\x64\xd5\xd0\x57\xe4\xdf\xe7\xd2\x16\x12\xd3\xa3\xb3\x59\xd5\x8b\x31\xb9\x55\x7a\x56\x75\x04\xe3\x91\x6b\x9b\xea\xf9\xa1\xfb\x4c\x84\x32\x07\x94\x57\x38\xa8\xf0\x6a\x88\x35\x2c\xe8\x5f\xc5\x10\x3f\x02\xa4\xe7\xbe\x4c\x80\x7f\xfc\xf3\x5f\xd6\xd4\x1a\xb5\x9c\x6f\x6a\x63\x1b\xb7\x0e\x43\xbb\xc9\xb1\xc0\xb2\xe1\x72\xec\x61\x2a\x09\xf2\x45\x3c\x4a\xf6\x0a\xe2\x87\x18\xc5\x97\xe6\x34\xa3\x86\x86\xea\x07\xbb\xcb\xba\x0d\xb0\x86\xe3\xc1\x82\xa4\x29\xe5\x1b\xdf\xe7\xd8\x2b\x2d\x22\x4b\x2d\xc2\x88\xf1\xaa\xf9\x73\x85\x2b\x01\x36\x03\x2c\x39\x71\xe7\x6c\x10\x7c\xc4\x12\xe2\x42\x30\x9c\xc6\x99\x3d\xc4\xab\x0c\xf8\x8f\xb1\xfc\x6c\x8a\xbe\x9f\xea\xac\x95\xa3\x95\xd4\x6b\xe5\x58\xff\x1e\xfc\xda\xff\x72\x0c\x88\x73\x34\x55\xee\x66\xc8\x59\x80\xe5\x04\x47\x22\x65\x99\x0d\xaf\xb0\x2b\x05\x8c\x38\x0b\x80\x0d\x15\x14\x48\x32\x4e\xa2\xe0\x29\x64\x3a\x46\xe7\x35\xe2\xff\x1a\xf1\x4f\xff\x9e\x67\xc4\x7f\x66\x61\x2f\x32\xfa\xbe\x42\x15\x42\xa5\x52\x3b\x7f\x85\x2a\x23\xe2\xab\xff\xd7\xde\x64\xaf\x55\x87\x62\x88\x4d\xdf\xbe\x68\xd5\x3e\xc5\x23\xcc\x31\x75\x53\xf4\xcc\x11\x22\xa3\xf7\x09\x2a\x5c\x99\x29\x49\x6c\xf8\x89\x67\xc3\x6d\x2a\x09\xc9\x09\x1d\xa7\x8f\xaf\x09\x5d\x5c\x68\xa2\x3a\x32\xaf\x90\x52\x76\x3b\xc2\xa7\x43\x55\x16\x12\xaa\x15\xeb\x67\x88\xc6\xd8\xfa\x29\xc8\x77\xfb\xa7\x64\x12\xf9\xd6\x6f\x22\x71\x20\x56\xeb\xf8\x52\xbd\x52\x5c\x94\x0b\xa9\x81\x1c\x5b\x67\xb8\x14\x73\x8b\x4b\x69\x9e\xe7\x17\xd3\x2a\x93\x14\x41\xbe\xff\x65\xb4\x48\x7c\x13\x65\x2b\x08\x81\x2d\x62\x15\x78\xcc\xc2\x04\xb4\x7d\xf0\x4a\x1a\x58\x89\x0d\xe8\x81\x44\x15\xd6\x62\x66\xf1\x74\x96\x1c\xe4\xc5\xae\xb2\x92\x06\xc3\x96\x9a\x95\x00\x51\x15\x1f\x81\x82\x16\xa8\x6a\x16\xf5\x34\x5b\x78\x53\x59\x1c\xe6\x32\xa8\xbb\x67\x38\xb4\x33\x5b\x9f\x78\xf4\x85\xbe\x32\x67\xe9\x01\xcd\x27\x5b\x2c\x5d\x2d\x88\x7c\x49\x06\xe8\x7b\x75\x85\xf2\xb1\x47\x88\x53\x14\x96\x17\xb4\x3b\xba\x02\x3b\xfa\x6c\xe7\xb2\x85\x87\x8c\x49\x21\x39\x0a\xfb\xfa\x8e\xab\x5f\xac\x65\xc7\x62\xb8\x4c\x2c\x79\x80\x4a\x55\x46\x8c\x07\x48\xf6\xc0\x43\x12\x37\x24\x09\xf0\xb2\x24\xa3\xd0\x5b\x37\xc9\x91\xbe\x44\x69\xb0\x92\x6e\x57\xde\x3f\x51\x25\xb2\xf3\x8e\x05\x96\xb5\xe1\x47\xab\x7f\x25\xdb\x7a\x66\x80\x5a\x91\x8f\x5a\xae\x90\x9e\x19\xa0\xd6\xca\x3f\xd5\x33\x41\xe9\xa9\xb1\xfc\xa5\xc7\xca\x68\x14\xe1\x7d\xcc\x49\xca\x1f\x6b\xcb\x0a\xf0\x67\x7f\xf3\x07\xc2\xe6\xb9\x3c\xbe\xf1\xb1\xe0\x84\x6c\xfe\x2e\x39\x4d\x21\x5d\xdc\xa5\xc7\xcd\x99\x37\x05\x81\xa9\x04\xc9\x20\x5e\xc3\xc1\xc9\x97\xfe\xd9\x1c\xdf\x42\x29\xf8\x6a\xde\xc1\x6c\xc3\x56\x3a\xf3\x94\xcf\xa6\x82\xbb\x09\xe6\xd8\x3a\x4c\xe2\xfa\x91\x90\xea\x39\xf1\x7d\xfb\x70\x19\xa1\x8b\x9c\x8f\x2a\x2b\x99\x47\x08\x4b\x73\xf2\x47\x32\xbd\xe7\xa7\xfe\xef\x32\x3a\x22\xe3\xa8\x92\x05\xc9\x14\x03\x9a\xec\xde\x9f\xa5\xd6\x8b\x66\xb7\x68\x15\x73\x4d\xd7\x55\xcf\x55\x89\x24\x23\x2e\xd7\x52\x13\x8e\x24\x04\x91\x90\x8a\x1d\x11\x6f\x82\xf8\xec\x0e\xf3\x86\x8b\x04\x06\xe4\x87\x13\x44\xa3\x00\x73\xe2\x82\x3b\x41\x1c\xb9\xca\xcd\x05\xc6\xa1\x5e\x6f\xd4\xeb\x1b\x6a\x1e\xe2\x71\x00\x1c\x51\x53\x7e\x88\xa5\x5d\x7a\x03\x10\xf5\x00\x53\x2f\x5f\xaa\x44\xd5\x94\x73\x11\xd5\xf1\xbf\x21\x06\x9f\xd1\xb1\x02\x63\x82\x28\x74\xda\x56\xf3\xcd\xfa\xa2\x11\x29\xcf\x42\x15\x27\xe0\x54\x91\x35\x49\x41\x29\x77\xf7\xa9\x6c\x61\x89\x91\xa7\x37\x86\x39\x96\x5e\x8a\x35\xcc\x31\x5d\xcb\xc6\x38\xcb\x80\x7c\xd2\x11\xce\xd8\x78\x26\xe3\x3b\xf3\x42\x87\xe7\x3b\xba\x86\xe5\x5a\x59\x7f\x2b\x27\xb9\xfa\x7e\x3e\x7f\xb8\x3e\x67\x4e\x2a\xae\x58\xf3\x84\x8e\xa8\x47\x5c\x24\xe3\x0c\x66\xd5\xe5\xf4\x60\xa8\x11\x84\x26\x5c\xc4\xc6\xa7\x5e\xcf\x31\x56\xaf\x83\x4f\xe8\xf5\x62\xf3\x47\xe6\x34\x7f\x4e\xc9\x4d\x84\x81\xe8\xa0\xec\x88\x98\xe3\xd5\x8a\x93\xb8\xf1\x85\xc4\x3d\x22\x42\x1f\x4d\x07\xf3\xa7\x9d\x63\x6b\xca\x29\x4c\xbc\xca\x51\x88\x89\x40\x18\xf1\x90\x09\xbc\x84\x49\x9f\xdf\xdc\x2f\x51\x80\x28\x8c\x38\xc1\xd4\xf3\xa7\x15\xbd\xcb\xf3\xb0\xa1\x99\x88\x45\x18\x2e\xd1\x9d\xb8\x5c\xcc\x01\xa6\x68\xe8\xe3\x39\xd0\x5e\x4c\xb0\x3e\x06\x5f\xd1\x67\x22\x92\xea\xa6\xfb\x38\xf4\xd9\x94\xd0\xb1\x9a\x0e\xbf\xf4\x0f\xd2\xf9\xb8\xcc\x44\x7e\xb6\xaf\x72\x9a\x62\xc2\x45\x23\x55\x2d\xc6\x07\xd9\x2f\x05\x0d\x4a\xe6\x41\xfd\x6f\xf7\xe9\x64\xdc\xf0\x5c\xaf\xbf\x38\xe1\x8e\xf1\xab\x12\xea\x82\x94\x1d\x37\xe1\x77\xc2\xc7\x84\x12\xb4\x6e\x69\x8b\x99\x58\x97\x94\x99\xc6\x46\x28\xf2\x65\x0f\x46\xc8\x17\x78\x49\xf1\xcb\xef\x0a\x55\x4b\x60\x7a\x2d\x76\x3e\x6f\x0b\x08\x85\xcf\x7b\xfd\x46\xbf\xff\x25\x5d\x4a\x18\x97\x6c\x3f\x76\xc9\xd4\x53\x14\xc9\x89\x1a\x5b\x13\x02\xaf\x3f\x64\x0e\x5e\x5f\x0c\xa6\x1c\x1b\xcb\xf7\xd4\x5c\xae\x0d\x63\x4c\x31\xd7\x5d\x8c\x12\xf1\x4c\x8f\xa7\xe4\x37\xc2\x8a\x41\xf8\x95\x02\x21\xf9\xb6\x97\x26\x65\x57\x5b\x0f\x45\xd7\x27\x98\xca\xa3\x83\x15\x82\x53\xaa\x42\x1f\xbb\xbc\xbc\x0b\xba\xb6\x30\x46\xe5\x6e\x69\xad\x42\x6a\x0b\xf1\xbd\x82\xf0\x56\xaf\x75\xd5\x7a\x6e\x46\x96\x52\x7d\xad\xcb\xdd\xd5\xd6\x7a\x73\xc4\xab\xda\xfa\x55\xcb\x42\xbe\x91\x3d\xfb\xf7\xac\x2d\xdd\x05\x4d\x95\x86\x6f\x85\xa1\xab\x0a\x45\x95\x4f\x35\x1c\x59\x6e\x6c\xb5\x1c\xff\xdb\x19\x8d\x59\x7a\xf9\x40\x35\x7f\x3a\x1b\x54\x1e\xed\x99\x8b\xb1\x07\x2c\xb0\xca\xd4\xcb\x0b\xa4\xd2\x52\x64\x85\x44\x8d\x44\x3a\x57\x58\x2c\x15\x9d\xad\xb9\x60\x3e\xe9\xca\xaa\xba\xab\x06\x40\x2b\x99\x60\x9d\xe3\x15\x93\xad\x15\xb5\x0c\x6a\x2d\x3a\x0c\xfb\x3b\xce\x2f\x5e\x74\x82\xbb\xbe\x23\xd9\xee\x55\x7f\xdc\xde\xff\xf4\x7d\x14\x2d\x31\xa4\x26\x23\xa3\x0c\xc1\x40\x3b\x87\x83\x41\xcf\xe4\x96\x0c\x8c\xc2\x0e\x86\x9c\x5d\x63\x2e\x59\x48\xdc\x38\x97\x63\x30\x9c\x4a\x2c\x06\x84\x0e\xf2\xbb\xa0\xc9\x9f\x1a\xbb\xe0\x3b\x19\x10\x36\x88\x1d\xb3\x98\x64\xa3\x98\xe3\x96\xfc\x69\xea\x3d\x18\x0c\x5c\x46\x45\x14\x60\x3e\x60\xa3\x91\xc0\xb9\x6b\x5e\xd4\xdf\x2d\xf2\xa3\xaa\xad\xfb\x06\x9c\x91\x00\x0b\x89\x82\xb0\x07\xad\xed\x56\x6b\x7b\xc7\x69\x77\x9c\xe4\x13\x1f\xf9\xbf\xdf\x15\x91\x1e\xec\x76\x5b\x5b\xdd\xe5\x28\x6d\x2f\xa0\xb4\xb5\xbb\xbb\xbb\x1c\xa5\xb7\x0b\x28\xed\x6c\xb7\xdb\x6b\xd7\x9b\x17\xa2\x62\x46\xde\x6d\x95\x5a\x31\x93\xa0\x2c\xd8\x33\xb4\x0e\x79\x1e\x51\x86\x17\xf9\x27\x33\x00\xae\x44\xa8\x2c\x7d\xd5\xd0\x54\xc0\x32\x2f\x4d\xc5\x90\x35\xe6\x32\xdf\xc4\x92\xfd\xce\xe4\xac\xc4\x5a\x31\x05\x20\xdb\x94\x23\x54\x6e\x67\xe2\x6f\xe4\xaf\x54\xdd\xdc\x53\x57\x51\xdb\x63\xd1\xd0\x9f\xb7\x78\xd2\x04\xdf\x94\xf3\x60\x32\x61\x34\xf7\xd9\xa6\x29\x54\xa5\x38\xb6\xf1\x0b\x38\x76\x19\x4f\x93\xd7\x0a\x49\x40\x15\xa3\x44\x68\x0f\x42\x24\x27\x45\xd6\xb2\x23\x49\x49\xde\x4c\x9e\x8f\xe4\xa9\x45\xc6\xbe\x80\x37\xc7\x9d\x66\xcf\xc7\x74\x2c\x27\xda\x75\x21\x01\x56\x8b\xbc\x80\xd0\x48\x62\x01\xec\x56\x6f\xc2\x10\x77\xa2\xdc\x67\xae\xef\xd6\x32\xb7\xff\x19\xf3\xd9\x9c\xcd\xdb\xac\x2e\x16\x87\xb1\x7a\x10\xd3\x95\xed\x56\xa6\x12\x84\x92\x20\x0a\x7a\xd0\xca\x1e\x99\x3b\x08\x7b\xd0\xed\xb4\x9d\xbc\xdb\x6a\xc9\x54\x11\x25\x48\x84\x33\xa1\x9e\xe4\x12\x15\x86\x33\x7e\xba\x0c\x8c\x7a\x90\xe3\xf2\x0a\x3f\x81\x5d\x46\x3d\x01\x43\x2c\xef\xf4\x75\x73\x48\x22\x08\x19\xa1\xf2\x27\x40\xd6\x71\x96\xc2\xac\xe5\xec\x3a\xb3\x41\x2b\x62\x62\x81\x16\xd3\x8f\xd3\xa9\xf2\xa0\xc5\x0f\x97\xc1\x2c\x39\xba\x9c\x64\x55\x4a\x06\x23\x2c\xdd\x49\x13\x3e\xa8\xff\x29\xd3\x9b\xbe\xbb\x9b\x60\x0a\x38\x08\xe5\xb4\x69\xea\x61\x2a\x39\xc1\x02\x10\xc7\x49\xfa\xa8\x62\x98\xa2\xa4\x8e\xe6\x27\x05\xbb\x1a\xd7\xbc\xb1\x2b\x99\xba\x19\xcb\xaf\x18\xe5\xf4\x06\xee\x2c\xa9\xc9\x40\x60\x25\x5b\xcd\xed\xff\x09\x1a\x2b\xa1\xf1\xf0\x7d\x49\x22\xec\x70\xce\x12\x86\xa2\x3c\x7a\xc5\x54\xab\x78\xe4\x92\x7d\x04\x3b\xc7\xca\x30\x6d\xa5\x84\xcd\x65\xfa\x38\xbb\xed\x53\xc1\xa5\x64\x1d\x23\x77\x62\x77\x7a\x8d\xdd\x28\xe6\x82\xa5\xdd\x70\x1c\xd3\x91\xf8\x8e\xa5\xca\x45\xe4\xff\x36\xd2\x9a\xfd\xf8\x12\x7b\x13\xea\xd4\x95\x60\x38\x05\x97\x13\x89\x39\x41\x4d\xad\xbf\x62\x4a\x25\xba\x4f\x63\xa0\xa9\xb5\x07\x22\x2c\x86\x02\xe2\x23\xbd\xf9\x2b\x0b\x55\x30\x0c\x12\xc2\x03\x70\x7d\x7d\x4f\x2a\x1b\x01\xa2\xd0\xff\xfa\x49\xa7\x02\xe1\x00\x53\x99\xdd\xec\x75\xa8\x70\xd3\x40\x27\x57\xa5\xea\xfa\xe6\xaa\x54\x44\xa7\x09\xd9\x6b\x6b\x8b\x5f\xc0\x88\x60\xdf\x13\x19\x95\x0f\x59\xf4\x72\x43\x8d\x86\xe1\xc1\x18\x6b\x7d\x67\x89\xd6\xa3\x78\x67\xdf\x6a\x40\x4e\x30\xe1\xf1\xfa\x30\x25\x76\x79\x79\x29\x6e\x32\x27\x58\x87\x29\x90\x70\xed\xf7\x59\xe1\x2f\xfc\x61\xed\xc1\x00\x51\x6f\x90\x86\x14\x3d\x24\x97\x60\x61\xc3\x4a\xf7\x99\xcd\xd2\x91\x41\xcc\x1e\x3a\x5a\x97\x49\xb0\xdc\xdb\x00\xc6\x81\x98\x32\x5a\x94\x74\x30\x56\x59\x95\x0d\xf5\x2c\x8b\xac\x9a\xb0\x91\x88\x7c\x29\xd2\x4d\x66\xab\x2f\x8a\xa9\x66\x2a\xb4\xa1\xcf\x3c\x9c\xb3\xe2\x65\x41\x2e\xc8\xa9\x2d\xcb\x49\x0f\x6b\x33\xd4\xcf\xe8\x67\x4c\xe0\xb1\x2a\x26\xe4\xd4\x57\x56\x9a\x71\x93\xaa\x6e\x6e\x1c\xab\x56\x9f\x4c\x7b\x74\xa1\x4c\x5b\x32\xbc\x17\xa8\xcd\x02\x75\xd1\xdb\xfa\x79\x5d\xc9\xda\xcc\xe9\x0c\xc4\x17\x20\xc7\xd2\x9f\x5c\xda\x6a\xb8\x57\x73\x40\xaf\x90\x63\xb2\xa1\x61\xdb\x30\xa9\x6b\x1b\x49\xe8\x1d\x51\x2f\xce\xc9\xcb\x28\x2a\x27\x16\x71\x24\x19\x37\x93\xc9\xe5\x7f\xfe\xd7\xe5\x06\x5c\xbe\xbb\x54\xb2\x72\xf9\xe9\xe8\xb7\xc3\xcb\x4c\xd9\x92\x4a\x57\x8c\xd0\xb8\xf8\xde\xf1\xc1\xa5\x26\x7c\xf9\xe5\xf4\x72\x03\x26\xec\x0e\xdf\x9a\x80\x3f\xd7\xe2\x85\xc0\x27\x01\x31\x13\x1d\xba\x87\x96\x13\x57\xce\x77\x41\x0f\xb8\x05\xec\x61\x2a\x41\x19\xd6\x96\x8a\x55\x7c\xa7\x43\x8b\x11\xbe\x89\x90\x0f\x97\xc1\xb4\xa1\x4b\x18\xc6\xe2\xce\xc7\xef\xd0\x9d\xb8\xdc\xb0\x34\x40\x4c\x58\xe4\x7b\x30\x2c\xe8\x60\x5e\x01\xdf\x41\x42\xd2\xe4\x7f\xe4\xb0\x86\x77\x80\xee\x44\xb5\x42\x2e\x60\x9a\x48\x61\x1a\xd0\x19\x2a\x84\x8e\xcd\xe3\xcb\x60\xba\x3a\x8f\x3e\xb9\xc6\x10\x4c\xff\xda\xde\xfa\x21\xb6\x41\x9b\xb5\xd4\x1c\x0b\xcb\x54\x20\x99\xdd\xa5\x3d\x41\x02\x42\xcc\x03\x22\x84\xc2\x5c\x32\x10\x18\xa7\x26\xc4\xf8\xcf\xd8\xb3\x06\xfa\x98\x49\xdc\x4c\x78\x33\x93\x41\x76\x22\x63\x43\xcd\x1e\xe6\xec\x41\x91\xc4\x1c\xeb\x13\x4f\xe8\x5a\xb0\x66\xd8\x94\x6a\xfb\x51\x31\xff\xe6\xcc\x03\x14\xad\xd6\x12\x62\x51\x7b\xa8\x6d\x4a\x0e\xf7\xe8\x60\x7e\xc2\x53\x7c\xba\xc7\xa6\x89\x7b\x30\xd4\x4f\xe3\x87\xe6\xc7\x87\xd8\x43\xfe\xf5\x22\xc9\x64\x33\x0d\x4e\xa4\x0c\xdf\x14\x7b\x5a\xf8\xd4\x45\x42\xfe\x36\xbf\x8e\x8c\xd3\x95\xa0\x16\x89\x06\x46\x42\x36\xac\x9c\x8c\x42\x82\x1b\xd4\xac\x9e\x27\x03\x52\x4b\x0e\xe0\x85\x44\xa6\xe9\x7b\x85\xef\x61\x2c\x6a\x1a\x47\x8d\x3b\xbc\xa6\xa6\x2b\xf2\x1f\x67\x34\x6f\xe2\x74\xa4\xff\x6d\xfb\xf4\x6b\xe7\xd7\xdf\x8e\x76\xbf\x3a\x5f\xce\x82\xab\xaf\x1f\xbc\x0e\x73\x3f\x9c\x8e\xb3\xe6\xe2\x68\x9f\x16\x89\xec\xe9\xc4\x04\x4a\x96\x39\x3e\xb6\x54\x2b\x71\x5a\x35\xd4\x38\x46\xde\x74\x59\x28\xd2\x04\x40\x5b\x57\xe6\x0f\xab\x49\x7c\x06\xa8\xa1\x90\x0c\xb2\x40\x22\xb1\xf7\x16\x4a\x08\x67\xaf\xaa\x92\x9b\xed\x92\x8d\x16\x11\xd3\x6d\x7e\xd3\xb9\xba\x26\xbb\x37\x0e\x93\xc1\xd5\xcd\x48\xf5\x76\xc4\xc7\x4d\x14\x86\xa2\x19\x88\xc6\x50\xca\xb1\x73\x45\x5b\x3b\xce\x24\x6c\xde\x6f\x45\xbb\x4d\xd1\x6a\x7a\xf8\xd6\x7c\x37\x98\x71\x0b\x17\x2b\x21\x5a\x7f\x27\xc5\x69\xb4\x9c\x86\xb3\x75\xd6\x6a\xf7\xb6\x5a\xbd\x76\xb7\xe9\x6c\x75\x5a\xdd\xf6\x9f\x59\x0d\x2b\xdf\xb9\x54\x63\xbb\xd7\xd9\x6e\x76\xb6\xdb\x6d\x67\xf7\xcf\xb2\xc4\x2c\xf1\xcd\xd9\x97\x22\x45\x26\x43\xfb\x55\x8c\x7e\x96\x18\x41\x29\x2b\x1e\x6a\x28\x3e\xfc\x92\xcd\xb0\xa9\xa3\x90\xde\xcc\x6f\x8f\x53\x55\xbe\xe2\x0c\xb9\xab\x4a\xba\xac\xe5\xa5\xb2\xca\x64\xe6\x9e\xe5\x32\x4e\xa0\xb6\x17\xa0\xef\x8c\xc2\x05\x1e\x26\xdb\x5c\x56\xd9\x24\x27\x24\x93\x8f\x72\xf2\xdd\x12\xac\xda\x99\x6f\x29\xa3\x15\xc2\x55\x60\xed\xbc\x0f\x87\x48\xc8\x0d\xb0\x12\x59\xe6\xf1\x36\x6f\xdb\x76\x06\x97\x71\x4b\xc1\xb4\x81\xc2\xb0\x21\x2c\xf2\xb9\xf5\x43\xad\x78\x01\xc7\x88\x71\x08\xa6\x80\xc2\xb0\x6a\x3f\x78\x19\xe3\x51\x32\x11\x79\x12\xab\xd9\x8a\xe2\x79\xf8\x56\x49\x04\x1e\xdd\x43\xb0\x37\x74\xa1\xd6\xdf\x6b\xb4\xda\xea\xbf\xe2\xdb\x38\xab\x42\x11\x54\xff\x98\xb7\x5d\xbe\x06\x98\xf2\x1b\x7e\x2f\x06\xae\xd9\x5f\x28\xad\x04\xc1\xe9\x94\x60\xb0\x0e\x89\x2d\xdb\x6b\xf3\x3d\xa8\xcd\x1c\x35\x7d\xa6\x0f\x6a\x9f\x3f\x1e\x34\xfa\x87\xa7\xbf\x37\xf6\x4e\x8e\x1a\xb9\x02\xa9\x55\xeb\x5b\x5f\xaa\x4b\xbe\x61\x67\x3e\xb6\x93\x5e\x1f\xbb\xa1\xd6\x0d\xe6\x9b\x76\xef\xf4\xa9\x83\x74\x7d\x62\xcd\x1f\xf6\x41\x3f\x35\x87\x5e\x1c\x91\xe0\xe6\xa3\xcb\x0f\xa2\x4f\xdb\x2d\x74\x7e\x7f\xf4\xe7\xcd\xfb\xb3\x9b\xe3\x53\x94\x22\x35\xe3\xeb\x59\xaf\x48\x95\x90\x9a\xf3\x89\x88\x2a\xb4\xda\x6b\x45\xab\xbd\x00\xac\x76\x15\x56\xc6\xf5\x52\x6b\xcb\x10\x71\x91\x0f\x21\xf4\xe0\x5c\x9b\x78\xf5\x56\xdf\x97\x95\x9b\x4b\xcd\xe5\x0e\x25\x2f\xa4\x07\x85\x46\x7b\xb0\xa8\x0d\xeb\xfa\x63\xe6\x47\x01\x35\x4b\x70\x45\x3d\x5e\x32\x42\x9d\x78\xf5\x26\xf4\xab\xca\x09\x13\xb1\x31\x2e\x53\x12\xa9\xa9\x8e\xdf\x24\xd1\x9a\xaf\x66\x65\x6c\xc6\xaa\x07\xc4\x83\x77\xd0\xb2\xd1\x29\x8e\xbc\x7f\x71\xf0\x31\x9a\x0e\x8f\xf8\x21\xbd\xe7\x7b\x38\xd8\x69\x77\xc7\x37\xd7\xd7\xe4\xe0\x36\x19\xf9\xe2\xd7\x9b\xaa\x46\xbb\xeb\x74\xd7\x38\xda\x3b\xf3\x07\x7b\xa7\x62\xac\x97\xf9\x0c\x54\xda\xa1\xca\x4f\x9c\x56\x75\x6b\xe7\x69\x3b\x15\xaf\x23\xe2\xbe\x98\x40\x90\xf7\xae\xde\x22\xbf\x75\xbc\xe8\xf7\x6f\x47\xb7\xb7\x5b\xdf\x6e\x3f\xf9\xd3\xef\xad\xe0\xe3\x69\xe7\xd7\xe9\xcd\x71\x5d\x9b\x82\x11\x8b\xa8\x37\x47\xd9\xbf\x7d\xd9\x19\xb7\xc7\xdb\xbf\x9c\x79\xe7\xbf\x9d\xa3\xf6\xb5\xf8\x65\xb7\x7d\xfd\xf5\xa0\x33\x4d\x10\x2a\x5e\x1e\x51\x69\x0e\xcb\xd3\xe7\x23\xac\x61\x6b\x81\x31\x6c\x55\xc0\x93\x69\xf0\x2d\xe6\x64\x34\x85\x5f\x2f\xce\xcc\x65\x1d\x3d\xfd\xf5\x23\xc2\xb1\x97\x5e\xbd\x64\x5c\x63\x73\x95\xc7\x52\x18\x75\xce\x27\x87\x93\xbb\xe0\x8f\xf7\xe1\xc5\xc9\xe8\xa8\xed\x1f\xe3\xeb\xd0\xeb\xfe\x79\x90\x60\x54\xbc\xc1\xaf\x52\x2d\xd6\x08\x51\x77\x3e\x42\xdd\x2a\x80\x04\xe6\x50\x1f\x31\xd6\x18\x22\x5e\x5f\xf6\xfb\x75\xcd\x39\xc6\xe2\x5b\xe7\x9c\x1c\x4e\xbe\x53\x0b\x95\xab\xd0\xeb\x7e\xdb\x4f\x51\x59\xf6\xc3\x7e\x55\x70\x6d\xad\x11\xae\xad\xf9\x70\x6d\x2d\x86\x6b\x82\x44\xf2\xd5\x3d\x40\x15\x5f\xf1\xdb\x06\x14\x47\xb9\xd3\xef\xf9\x2d\x84\xee\xfa\x5e\x41\xf7\xfb\x09\x3e\x6a\xb3\x63\x7c\xe5\x75\xfe\x78\x9f\x20\x37\xef\x83\x6f\x55\x60\x75\xb6\xd7\x88\x96\x4d\xac\x0a\x2e\xfb\x7d\xde\x3c\xa5\x67\x0c\xf5\xc4\x46\x04\x20\x5f\x47\x9b\x94\x13\x32\x5b\xbf\xb6\xaf\xbf\x39\x0a\x8e\xef\xd7\x7f\xec\x7f\xbf\xd0\x70\x7c\xc3\x13\xaf\x73\x78\x50\xd3\xc5\x75\xbd\xf2\xdd\x2c\x55\x38\xbc\x5d\x23\x0c\x6f\xe7\xa3\xf0\xb6\xd2\x08\x65\x1f\xfe\xc6\xf9\x86\x4b\x36\x05\x1f\x7e\xba\xfd\xf0\xf6\xea\xf3\xd7\x6f\xdb\xdf\xc6\x93\xd1\xe7\xb7\xe3\x8f\xa7\xe2\x97\xdb\xc3\x8b\x5a\xd2\xdf\xa5\x67\xa6\x27\xee\xb5\x89\xb5\xeb\x4b\xd8\x08\x1d\x83\xf2\x35\x85\x5a\x98\x7d\xd9\xff\xdc\x38\xfc\xa3\xf1\xb6\x17\x07\x21\x94\x85\xf1\xe2\x6b\xd8\x92\x32\xf8\x5e\x36\x72\x41\x99\x7b\xa7\xe3\x53\xcf\x0f\x6e\x9c\x9b\x91\xbb\x23\x88\x44\x5b\xc2\xbf\xba\xdd\xb5\x53\x06\x95\xc7\x94\x48\x9a\x02\xa0\x35\xde\xf2\x76\x77\x6f\x1c\x9f\xbb\xde\x6d\x77\xbc\x83\xfc\xe1\x8e\xf0\x47\x63\x7a\xd5\xf1\x26\x43\x71\xf5\xd7\xff\xf7\xb7\xc3\x3f\xce\x4e\xf7\xe0\x3f\x4c\x27\x9b\x1a\x9e\x77\xd9\x59\x1a\x8b\x36\x11\x50\xef\x3a\xdd\xfa\x86\xee\xbe\xfe\xb9\xff\xe9\xbc\x7f\x76\x78\xda\x6f\x7c\xfe\xf8\xf9\xac\xa1\x5e\xea\xc0\x7d\x3a\xa2\xf6\xa1\x1c\x55\xbe\x35\xde\x62\x7c\xcb\xb9\x25\x91\xb3\xc3\xb0\x1a\xaf\x09\xbf\x76\xdb\xdb\xde\x78\x24\xaf\x5a\xc8\xcd\x5d\x9e\x94\x1c\x01\xa9\x2f\xea\x84\x35\x9b\xff\x7d\xde\x54\x75\x26\x2e\xf8\x74\x9b\x8a\x9b\x61\x5b\x1c\x07\x1f\xae\xb6\x86\x7f\x84\x07\x3b\xfb\xa8\xf6\xe6\xff\x02\x00\x00\xff\xff\x57\x52\x19\x27\x10\x8e\x00\x00")

func managedServicesApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedServicesApiYaml,
		"managed-services-api.yaml",
	)
}

func managedServicesApiYaml() (*asset, error) {
	bytes, err := managedServicesApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-services-api.yaml", size: 36368, mode: os.FileMode(0644), modTime: time.Unix(1611836754, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x90, 0xe4, 0x66, 0x7f, 0xb8, 0xfd, 0x95, 0xfb, 0x7c, 0x12, 0x39, 0xf0, 0x13, 0xb5, 0x7, 0xc8, 0x98, 0x1a, 0x7c, 0xc1, 0xd8, 0x6c, 0xe9, 0x70, 0x86, 0xd6, 0x9e, 0x28, 0xce, 0x12, 0x8}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"managed-services-api.yaml": managedServicesApiYaml,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"managed-services-api.yaml": {managedServicesApiYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}

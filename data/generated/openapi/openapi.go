// Code generated for package openapi by go-bindata DO NOT EDIT. (@generated)
// sources:
// openapi/managed-services-api.yaml
package openapi

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _managedServicesApiYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x53\x1c\x39\x92\xff\xdf\x9f\x22\xaf\xf7\x36\x7a\xf7\x82\x6e\xfa\x05\xd8\x1d\xe7\x8b\xc0\x80\x3d\xcc\xd8\xd8\xa6\x61\x30\x73\x71\x01\xea\x2a\x75\x97\xa0\x4a\x55\x48\xaa\x86\xf6\xde\x7e\xf7\x0d\x49\xf5\x50\x55\xa9\x5f\xd0\x36\xb0\x83\xe7\x8f\xa1\xab\xa4\x54\xea\xa7\x54\xa6\x32\x95\x52\x85\x11\xa6\x28\x22\x7d\xe8\x36\x5b\xcd\xd6\x2b\x42\x47\x61\xff\x15\x80\x20\xc2\xc7\x7d\xf8\x84\x28\x1a\x63\x17\x06\x98\x4d\x88\x83\x61\xf7\xcb\xe1\x2b\x80\x09\x66\x9c\x84\xb4\x0f\xad\x66\xab\xd9\x7e\x05\xe0\x62\xee\x30\x12\x09\xf5\xd0\x56\x87\x63\x26\x2b\x49\xca\x0d\x88\x99\xdf\x07\x4f\x88\x88\xf7\x37\x37\x51\x44\x9a\x92\x07\xee\x91\x91\x68\x3a\x61\xf0\x0a\xa0\x42\x90\x50\xf8\x5b\xc4\x42\x37\x76\xe4\x93\xbf\x83\x26\x67\x27\xc6\x05\x1a\xe3\x45\x24\x07\x02\x8d\x09\x1d\x5b\x09\xf5\x37\x37\xfd\xd0\x41\xbe\x17\x72\xd1\x7f\xdd\x6a\xb5\xaa\xd5\xb3\xf7\x79\xcd\xcd\x6a\x29\x27\x66\x0c\x53\x01\x6e\x18\x20\x42\x5f\x45\x48\x78\x0a\x01\xc9\xe6\x66\xa0\x51\x6a\x70\x8d\x12\x6f\xc8\x87\x93\xf6\xe6\x35\x1a\x5d\x23\xbe\xf9\x0f\xe2\xfe\xb3\xaf\x48\x8e\xb1\xd0\x7f\x00\x84\x11\x66\x48\xd2\x3e\x74\xfb\xf2\xf9\x6f\xb2\xec\xbb\xe9\xa1\x9b\xbc\x67\x98\x47\x21\xe5\x98\xa7\x15\x00\x6a\x9d\x56\xab\x96\xff\x04\x70\x42\x2a\x30\x15\xe6\x23\x00\x14\x45\x3e\x71\x14\xe9\xcd\x2b\x1e\xd2\xe2\x5b\x00\xee\x78\x38\x40\xe5\xa7\x00\xff\xc9\xf0\xa8\x0f\xf5\xbf\x6c\x3a\x61\x10\x85\x14\x53\xc1\x37\x75\x59\xbe\xa9\x98\x3b\xc6\x37\x31\xe6\xa2\x5e\xaa\x89\xef\x50\x10\xf9\x26\x9f\xe9\x3f\xb3\xd6\x07\x2c\x8e\x93\x1e\x1d\xe8\x0a\xd5\xf2\x76\x1e\x52\xfa\x05\x26\x12\x1a\x65\x5e\x66\xb6\x79\x46\x84\xf7\x1e\x11\x1f\xbb\x7b\x0c\x2b\x6c\x06\x02\x89\x98\xaf\x83\x97\x39\x74\x4d\xfe\x0a\xe2\xa4\xea\x03\xd3\x04\x60\x14\xc6\xd4\x85\xe1\x14\x88\x9b\x0f\x76\xaf\xd5\x7e\x9c\xc1\x3e\x60\x2c\x64\xcb\x8f\x72\xaf\xd5\xbe\x2f\x8a\x79\xd5\x99\x40\xed\xc6\xc2\x03\x11\x5e\x63\x0a\x84\x03\xa1\x13\xe4\x17\x41\xea\x3e\x13\x90\xba\xf7\x07\xa9\xbb\x08\xa4\x53\x8e\x19\xd0\x50\x00\x8a\x85\x17\x32\xf2\x1d\xbb\x20\x42\x40\x8e\x83\x39\x07\xe1\x61\x48\x34\x53\xd3\x44\xae\xf7\x4c\x90\xeb\xdd\x1f\xb9\xde\x22\xe4\x8e\x42\xb8\x2e\x4c\xc5\x5b\x22\x3c\xe0\x11\x76\xc8\x88\x60\x17\x88\x0b\xf8\x8e\x70\xc1\x73\xe0\xb6\x1e\x4b\x09\xaf\x08\xdc\x56\xab\x75\x5f\xe0\xf2\xaa\xb3\x45\x8e\xe2\xbb\x08\x3b\x02\xbb\x80\x25\x5f\x10\x3a\xca\x44\xa6\x73\x93\x63\x27\x66\x44\x4c\xf3\xb6\x1b\xf0\x0e\x23\x86\x59\x1f\xfe\xf7\xff\xd2\x42\x71\x10\x20\x36\xed\xc3\x07\x2c\x00\x95\x46\x22\x57\x87\x2e\xf6\xb1\xc0\x56\xc3\xa9\x5f\x2d\x67\x3b\x9f\xa0\xbc\x97\x29\xfd\xe5\x28\x84\x3d\xcd\xd8\x2c\xe0\xf7\x55\x8f\x5f\xec\xc4\x8b\x9d\x78\xb1\x13\x45\xe4\x7a\x7a\x6a\x3c\xc0\x5a\x14\x08\xfc\x49\x6d\xc6\xc3\x40\x2c\x13\xb8\xbf\xfd\x48\x4d\x83\x26\x37\xc7\x3a\x2c\x65\x6b\x22\xc4\x50\x80\x45\xe2\xb6\xea\x22\xba\x23\xb5\x42\x47\xf2\x72\x9b\xc4\xad\x2d\xe7\xdf\x69\x8a\x91\xf4\x30\x6d\x26\xca\x91\x8e\x81\x36\x51\xc9\xeb\x2a\x33\x92\x1d\x42\xfb\x70\x13\x63\x36\x35\x20\xa3\x28\xc0\x7d\x40\x7c\x4a\x9d\x59\x40\x7e\xc1\x6c\x14\xb2\x40\xcd\x5e\xa4\x5c\x6a\x20\x14\x10\xd5\xb5\x3c\x16\xd2\x30\xe6\x10\x20\x4a\x95\x6f\x3c\x4f\x98\xc4\x34\xc2\x7d\x18\x86\xa1\x8f\x11\x35\xde\x48\xcc\x09\xc3\x6e\x1f\x04\x8b\xf1\xab\xfc\x21\xe6\xe2\x5d\xe8\x1a\xb8\x5b\x7c\x1c\x17\x09\x94\xbd\xb7\xc8\xfd\x7c\xa9\xb7\xcb\xfc\xb2\xae\xea\x17\x34\xf5\x43\xe4\x16\xe5\x7f\x96\xf4\x9f\x0e\x8e\xf1\x98\x54\xa7\xdd\x02\x89\x4f\xab\xcd\xf0\x48\x0f\x4e\xef\x45\x35\xad\x56\xa1\x3a\x63\x2c\x6c\xeb\x9d\xce\x73\x8d\x15\x7c\x09\xf9\x8f\x0e\x16\x14\xd7\x0e\x8e\x83\xa3\xd2\x9a\xea\x79\xe8\xeb\x5e\xab\x95\xc6\x1d\xee\x6f\xf6\xca\x24\x66\xe2\xf4\xbb\x5c\x53\xa9\x92\x5a\x67\xf3\xb2\xd2\x7e\x59\x8d\xbe\xac\x46\xe7\xae\x46\x33\xb2\x9f\xd0\xdd\xae\xef\x87\xb7\xd8\x3d\xa4\x5c\x20\xea\xe0\x63\x8c\x1c\x0f\xbb\x0f\x68\x6f\x11\xcd\xf9\xcb\xe2\x51\xc8\x86\xc4\x75\x31\x05\x4c\x84\x87\x19\x0c\xb1\x83\x62\x8e\x95\x61\x8d\x65\x09\xc2\x97\x5a\x3b\x43\x58\xac\x1b\xa0\x3b\x12\xc4\x01\xd0\x38\x18\x62\x06\xe1\x08\x48\xc2\x9e\xac\x86\x04\x38\x88\xc2\x10\x27\xeb\x04\x15\x06\x14\x1e\xe1\xba\x4d\x0f\x71\x18\x62\x4c\x81\xe9\xae\x3c\xcf\x85\xf9\x0f\x0c\xe0\x9c\x78\x38\x5d\x8a\x60\x57\x1a\xc2\x30\x66\x0e\x06\x37\xc4\x9c\xd6\x85\x5e\x88\x9b\x98\xbd\x79\x26\x98\xbd\x39\x42\x01\xde\x0b\xe9\xc8\x27\x8e\xb8\x3f\x7e\x36\x32\xb3\xb5\x96\xc4\x43\x95\xcc\xe5\xce\xc5\x42\xaf\xd2\x09\x55\xd2\xec\x24\xb6\x42\xca\xb1\x12\xd3\x0c\xf2\x67\xe9\xed\xfc\xc0\x08\xd9\x2e\x85\x78\x96\x93\x93\xc0\x48\xc7\x0a\x53\xbd\x50\x4e\x16\x2b\xcb\xfb\x34\x86\x93\xa4\x2c\xb8\x74\x92\x28\xbe\x4d\x1c\x25\x93\x9c\xb1\xed\x94\x55\x39\xc6\x22\x66\x94\x03\x02\x9f\x70\x21\x87\xb3\xb0\x27\xc1\x6d\xae\x8c\x2c\xa9\x4a\xf1\x55\xb8\x5c\x66\x27\xab\x24\x87\x73\x59\xfa\xa9\x22\x65\xae\x23\x3f\x12\x73\x45\x5b\x59\x24\x16\xfa\xf0\x0e\xb9\x29\xdf\xcf\x60\x26\x1c\xea\x15\xca\x57\xe9\x7e\x3e\x60\x21\x69\x21\x53\x9f\xbd\x34\x5c\x61\xc5\xf4\x74\x91\x5b\xf3\x3a\xf2\xcf\xbb\x34\x7c\x70\xa0\xb2\x6c\x75\x56\x0a\x37\x3d\x65\xa8\xd7\x6a\xa6\xec\xb1\x27\x1b\x11\x23\x14\x16\xa1\xb1\x31\x56\x0b\x8b\x73\xf2\x7d\x95\xe2\x21\x73\x31\x7b\x37\x5d\xa5\x01\x8c\x98\xe3\xd5\x17\x85\xe7\x1c\x3f\x8c\xdd\x8b\x88\x85\x13\xe2\x66\x1d\x9e\x61\x0b\x19\xc1\x13\xac\x45\x2b\x35\x3e\x3c\x8e\xa2\x90\x49\x91\x51\x84\x20\x23\xd4\x9c\x65\x1b\xf7\x64\xb9\x2f\x69\xb1\x07\xda\xc8\x7a\xa7\xd5\xaa\xcf\x14\xe8\x94\x65\x77\x31\xbb\x8f\x21\xe2\x05\x24\x8a\x76\xb3\xde\x6b\xb5\x67\xf7\xeb\xc5\x0e\x68\x90\xb6\xe6\x0d\xfe\x8b\x36\x7b\x04\x6d\xb6\x8a\xaa\x51\x29\x5f\x9b\x4c\x85\x70\x1f\xa0\x77\x12\x02\xda\xd7\xc2\x33\x67\xf8\x72\xfa\x48\x07\x94\x9f\x8c\x56\x4a\x3b\xf7\x68\xda\x49\xe3\xf1\xa2\x9b\x5e\x74\x53\xf6\xef\xa7\xe9\xa6\x05\x9b\x8e\xc5\xc2\x3f\x55\x91\x25\xbf\x91\xe3\x84\x31\x15\x55\xdd\xb5\x8c\x4a\xf8\x69\xc3\x9b\x64\x25\xef\x6a\x66\x8b\x53\xb9\x24\x96\x1f\x53\x7d\x94\x04\x69\xd3\x0e\xce\x9e\xfa\x4f\x55\x48\x1f\x73\xe7\xa2\xde\x6b\x75\x9f\x09\x48\x4f\xc2\x3d\x9d\xad\x33\x9f\x2a\x70\xcf\x20\x6b\xb0\xb2\xcc\x29\xaa\x01\x5e\x5e\x65\xa9\xa9\x6f\x9d\xf7\x66\xce\xc6\xe2\x7c\x86\x12\x89\x4a\x78\xef\x27\x24\x37\x14\x7b\x6a\xdd\x64\x9f\x35\xb4\x7c\x49\xb9\xc9\x86\xd3\xda\xd6\xbd\xf3\x11\x9e\x8a\x91\x58\x7e\x26\x14\x2d\xe1\xca\xb3\xa1\xd8\xec\xa2\x89\x51\x96\xad\x64\x33\xf0\xc5\x3a\xbd\x58\xa7\x95\xad\x93\x6f\x5f\xea\xbc\xd8\xa2\x1f\x6d\x8b\xf4\xa4\x2d\x4e\xfc\xb2\x31\xca\x76\xea\xaa\xa3\x53\x5f\x65\x61\xae\x22\x0c\xc9\x28\x56\x73\x25\x6d\x43\x6f\xc9\x22\x2f\xa4\x2d\xa4\xaa\x47\x65\xb3\xca\x17\x63\x32\x91\xf3\xcc\x96\x83\xff\x40\xdf\xc6\x6e\x1f\x7a\x4f\x44\x28\x0b\x40\xb9\xa5\x74\xfb\x17\x45\xac\x60\x41\xff\x2e\x8a\xf8\x01\x20\x3d\x75\x37\x01\xfe\xf1\xcf\x7f\x5b\x55\xab\xa7\xe5\x7c\x55\x9b\xe8\xb8\x75\x28\xda\x4d\x86\x39\x16\x0d\x87\x61\x17\x53\x41\x90\xcf\x93\x51\x32\x3d\x88\x1f\xa2\x14\x9f\xdb\xa2\x19\x35\x14\x54\x3f\x78\xb9\xac\xda\x00\x63\x38\xee\x2d\x48\x8a\x52\xb1\xf1\x3d\x86\xdd\x8a\x13\x59\x69\x11\x46\x21\xb3\xd9\xcf\x57\x79\xef\x24\x17\x09\xa0\x9a\xa1\xcf\xc3\x2b\xec\x88\x63\x3c\xc2\x0c\x53\x27\x9b\x6a\x3a\xef\x3e\x54\x2f\x53\x59\x62\x92\x4b\x41\x4c\x8c\x89\x6b\xa2\xaa\x2b\x71\xc1\x08\x1d\x67\x8f\xaf\x09\x5d\x5c\xc8\x93\xe3\x30\xaf\x90\x74\x98\x4d\xb7\x58\xf9\x77\x06\xa2\xb2\x15\xe3\x67\x84\xc6\xd8\xf8\xc9\xc9\x77\xf3\xa7\x08\x05\xf2\x8d\xdf\x44\xe0\x80\xaf\xd6\xf1\xa5\x7a\x25\xb9\xa8\x16\x22\x54\xe0\xb1\x71\xf0\x41\x32\xb7\xb8\x94\xe2\x79\x7e\x31\x65\x68\xd2\x22\xc8\xf7\x3f\x8f\x16\x4d\xfa\x74\x6a\x95\x84\xc0\x8c\xf7\x5a\xf0\x98\x85\x09\x28\x6d\xe0\x56\xd4\xb5\x15\x1b\x50\x03\x89\x2c\xba\x61\x66\xf1\x6c\x92\x5c\x14\xc5\xce\x5a\x49\x81\x61\x4a\xcd\x4a\x80\xc8\x8a\x0f\x40\x41\x09\x94\x9d\x45\xc4\x18\x9a\x96\xde\x58\x8b\xc3\x5c\x06\x55\xf7\x34\x87\x66\x3a\xd8\x23\x8f\x3e\x57\x17\x0d\x2c\x3d\xa0\xc5\x1d\xca\xa5\xab\x05\xb1\x2f\xc8\x05\xfa\x6e\xaf\x50\x3d\x2b\x04\xc9\xbe\xde\xf2\x82\x76\x4b\x57\x60\x47\x1d\x88\x5a\xb6\xf0\x30\x0c\x05\x17\x0c\x45\x03\x75\x33\xc8\x2f\x86\xad\x5e\x0c\x97\x0e\xc0\x5c\xa0\x4a\x95\x51\xc8\x02\x24\xfa\xe0\x22\x81\x1b\x82\x04\x78\x59\x92\x71\xe4\xae\x9b\xe4\x48\x5d\x3d\x71\xb1\xd2\xdc\xb6\x1e\x3d\xb6\x89\xec\xbc\xb3\x34\xd5\xd9\xf0\xa3\xa7\xbf\x95\x6d\x65\x19\xa0\x56\xe6\xa3\x56\x28\xa4\x2c\x03\xd4\xda\xc5\xa7\xca\x12\x54\x9e\x6a\xcd\x5f\x79\x2c\x95\xc6\x32\x71\xda\x65\x8f\x1f\xfd\x58\x5d\x56\x82\x3f\xff\x37\x7f\x20\x4c\x9e\xab\xe3\x9b\x9c\xa5\x4b\xc9\x16\x6f\xe0\x51\x14\xb2\x15\x51\x76\x46\x33\x74\xa7\xc0\x31\x15\xd2\xeb\x49\x0e\x4b\xc2\x97\xcf\x83\x93\x39\x6b\x0b\x39\xc1\x57\x5b\x1d\xcc\x56\x6c\x95\x83\x02\xc5\x14\x04\xb8\xf5\x30\xc3\x46\x06\xb6\xe3\xc7\x5c\xc8\xe7\xc4\xf7\xcd\x13\x19\x84\x2e\x5a\x7c\xd8\xb4\x64\x11\x21\x2c\x74\xba\xbc\x08\x55\xa0\x5c\xfe\xdf\x09\xe9\x88\x8c\x63\x2b\x0b\x22\x94\x0c\x28\xb2\xbb\x7f\x54\x5a\x2f\xab\xdd\xb2\x56\x2c\x34\x5d\x97\x3d\x97\x25\xd2\x34\x92\x42\x4b\x4d\x38\x14\x10\xc4\x5c\x48\x76\x78\x12\x39\xf4\xc3\x5b\xcc\x1a\x0e\xe2\x18\x90\x1f\x79\x88\xc6\x01\x66\xc4\x01\xc7\x43\x0c\x39\xd2\x6f\x81\x90\x41\xbd\xde\xa8\xd7\x37\xa4\x1d\x62\x49\xd4\x08\x51\x5d\x7e\x88\x85\x59\x7a\x03\x10\x75\x01\x53\xb7\x58\xaa\x42\x55\x97\x73\x10\x55\x4e\xf3\x10\x83\x1f\xd2\xb1\x04\xc3\x43\x14\xba\x1d\xa3\xf9\x66\x7d\xd1\x88\x54\xad\x90\xe5\xd8\x88\x2c\xb2\x26\x29\xa8\x24\xbc\x3d\x96\x2e\xac\x30\xf2\xf8\xca\xb0\xc0\xd2\x73\xd1\x86\x05\xa6\x6b\xf9\x18\xe7\x69\x43\x8f\x3a\xc2\x39\x1b\x4f\x64\x7c\x67\x9e\x82\x7e\xba\xa3\xab\x59\xae\x55\xe7\xaf\xd5\xc8\xd5\xf7\x8a\x49\x77\xf5\x39\x36\xa9\xec\xb1\x16\x09\x1d\x52\x97\x38\x48\x24\x69\x7f\xb2\xcb\xd9\x69\x2a\x2d\x08\x4d\x38\x4b\x94\x4f\xbd\x5e\x60\xac\x5e\x07\x9f\xd0\xeb\xc5\xea\x8f\xcc\x69\xfe\x94\x92\x9b\x18\x03\x51\x91\x8c\x11\xd1\x67\x12\x25\x27\x49\xe3\x0b\x89\xbb\x84\x47\x3e\x9a\x5e\xcc\x37\x3b\x47\x86\xc9\x29\x19\x5e\xb9\x50\x48\x88\x40\x14\xb3\x28\xe4\x78\x09\x95\x3e\xbf\xb9\x5f\xe2\x00\x51\x18\x31\x82\xa9\xeb\x4f\x2d\xbd\x2b\xf2\xb0\xa1\x98\x48\x44\x18\x2e\xd1\x2d\xbf\x5c\xcc\x01\xa6\x68\xe8\xe3\x39\xd0\x9e\x79\x58\x9d\x1d\xb5\xf4\x99\xf0\xb4\xba\xee\x3e\x8e\xfc\x70\x4a\xe8\x58\x9a\xc3\xcf\x83\xfd\xcc\x1e\x57\x99\x28\x5a\x7b\xdb\xa2\x29\x21\x5c\x56\x52\x76\x31\xde\xcf\x7f\x49\x68\x50\x6a\x07\xd5\xdf\xce\xe3\xc9\xb8\xe6\xb9\x5e\x7f\x76\xc2\x9d\xe0\x67\x13\xea\x92\x94\x1d\x35\xe1\x77\xc2\xc6\x84\x12\xb4\x6e\x69\x4b\x98\x58\x97\x94\xe9\xc6\x46\x28\xf6\x45\x1f\x46\xc8\xe7\x78\x49\xf1\x2b\x86\x52\xed\x12\x98\x5d\x26\x5a\x4c\x76\x00\x42\xe1\xd3\xee\xa0\x31\x18\x7c\xce\x5c\x09\xbd\x24\xdb\x4b\x96\x64\xf2\x29\x8a\x85\x27\xc7\x56\x07\xbc\xeb\xf7\xb1\xc1\xeb\x8b\xc1\x54\x63\x63\xc5\x9e\xea\x2b\x49\x61\x8c\x29\x66\xaa\x8b\x71\x2a\x9e\x59\x4e\x77\x31\x7a\x5c\x8e\xb4\xaf\x14\x08\x29\xb6\xbd\x34\x29\xb3\xda\x7a\x28\x3a\x3e\xc1\x54\x1c\xee\xaf\x10\x9c\x92\x15\x06\xd8\x61\xd5\xad\x83\xb5\x85\x31\xac\x5b\x0c\x35\x8b\xd4\x96\xe2\x7b\x25\xe1\xb5\xfb\xba\xd2\x9f\x9b\xb1\xb5\x5f\x5f\xab\xbb\xbb\x9a\xaf\x37\x47\xbc\xec\xda\xcf\x2e\x0b\xc5\x46\x76\xcd\xdf\xb3\xf6\x41\x16\x34\x55\x19\xbe\x15\x86\xce\x16\x8a\xaa\xa6\x02\x1f\x1a\xcb\x58\xbb\x1c\xff\xe9\x94\xc6\xac\x79\x79\xcf\x69\xfe\x78\x3a\xa8\x3a\xda\x33\x9d\xb1\x7b\x38\x58\x55\xea\x55\x07\xa9\xe2\x8a\xac\xb0\xbb\x99\x4a\xe7\x0a\xce\x52\x79\xb1\x35\x17\xcc\x47\xf5\xac\xec\x5d\x95\x00\x96\xf7\xc7\xf3\x79\xa0\xaf\x39\xcb\x12\x48\x2a\x91\x1a\x2d\xf9\x0c\x3b\x21\xcb\x52\x06\x4a\x9b\xda\x16\x30\x08\xed\x43\x84\x84\x57\x56\xbf\x79\xa6\xaa\xb9\x67\xa8\x79\x30\xf6\x32\xcb\xf7\xb1\x15\x6f\x5d\x43\x63\x0c\x84\xba\xf8\xae\x42\xdd\x5c\x2d\x2d\xc1\x65\x75\x2f\xbd\xbc\x93\x39\x41\x7e\x6c\x78\xef\xe6\x16\xa6\x66\xda\xd8\x71\x9d\xcb\xf4\x51\x7e\x03\x8d\x1c\x72\xb9\xde\xc2\xc8\xf1\xcc\x4e\xaf\xb1\x1b\xe5\xad\xd6\xac\x1b\xad\x96\xee\x48\x72\xee\xd7\xaa\xa3\xff\xbf\x91\xd5\x1c\x24\x17\x2b\x6a\x4f\x42\x55\x82\xe1\x14\x1c\x46\x04\x66\x04\x35\x95\x84\xf0\x29\x15\xe8\x2e\x73\x31\x32\x51\x03\xc2\x0d\x86\x02\xe2\x23\x15\x5b\x15\xa5\x2a\x18\x2e\x52\xc2\x17\xe0\xf8\xea\xee\x1e\xe9\x0f\x51\x18\x7c\xfd\xa8\x76\xda\x70\x80\xa9\xc8\x4f\x9b\x1f\x48\xdc\x14\xd0\xe9\xf5\x3d\xaa\xbe\xbe\xbe\x07\xd1\x69\x4a\xf6\xda\x88\xa0\x73\x18\x11\xec\xbb\x3c\xa7\xf2\x3e\x77\x0e\x36\xe4\x68\x68\x1e\x44\x08\x2c\x39\x47\x27\x27\x21\x24\x81\x73\xa3\x01\xe1\x61\xc2\x12\xf5\x9b\x11\xbb\xbc\xbc\xe4\x37\x7e\x61\x9d\x00\x88\x3b\xe6\xfb\xbc\xf0\x67\x76\xbf\xf6\xe0\x02\x51\xf7\x22\x5b\xb1\xbb\x48\x2c\xc1\xc2\x86\xb1\x9b\x36\x9b\xa5\x43\x8d\x98\x39\x74\xb4\x2e\x52\x5f\xd4\xdd\x80\x90\x01\xd1\x65\x94\x28\x29\x5f\x27\x88\xc4\x74\x43\x3e\xcb\x1d\x17\xbd\x2a\xe3\xb1\x2f\x78\x16\xc3\x35\xfa\x22\x99\x6a\x66\x42\x1b\xf9\xa1\x8b\x0b\xb9\xeb\x55\x41\x2e\xc9\xa9\x29\xcb\x69\x0f\x6b\x33\xa6\x9f\x9e\x9f\x09\x81\x87\x4e\x31\x2e\xa6\x3e\xee\xab\xcd\x42\xad\x08\xd4\x29\x78\xfb\xf4\xc9\x67\x8f\x2a\x94\xcf\x96\x1c\xef\x05\xd3\x66\xc1\x74\x51\x51\xf3\xe2\x5c\xc9\xdb\x2c\xcc\x19\x48\x2e\xe5\x4a\xa4\x3f\xbd\x48\x48\x73\x0f\x88\xe1\x7e\x69\x0b\x67\x43\xc1\xb6\xa1\x77\x86\x37\x52\xcf\x16\x51\x37\xd9\xf2\xce\x29\x4a\xf3\x83\x18\x12\x21\xe3\x92\x10\x5c\xfe\xf7\xff\x5c\x6e\xc0\xe5\xdb\x4b\x29\x2b\x97\x1f\x0f\x7f\x3b\xb8\xcc\x27\x5b\x5a\xe9\x2a\x24\x34\x29\xbe\x7b\xb4\x7f\xa9\x08\x5f\x7e\x3e\xbe\xdc\x00\x2f\xbc\xc5\x13\xed\x4f\x33\x25\x5e\x08\x7c\x12\x10\xb5\x25\x12\xa0\x3b\x68\xb7\x92\xca\xc5\x2e\xa8\x01\x37\x80\x3d\xa8\x48\x50\x8e\xb9\x31\xd5\x2c\x77\xc8\x2a\x71\xc2\x37\x31\xf2\xe1\x32\x98\x36\x54\x09\xcd\x60\x02\x42\xf2\x0e\xdd\xf2\xcb\x0d\x63\x26\x70\x2f\x8c\x7d\x17\x86\xa5\xb9\x58\x9c\x88\x6f\x21\x25\xa9\xb7\x59\x0a\x98\xc3\x5b\x40\xb7\xdc\x3e\x31\x17\x30\x4d\x04\xd7\x0d\xa8\x8d\x20\x42\xc7\xfa\xf1\x65\x30\x5d\x9d\x47\x9f\x5c\x63\x08\xa6\x7f\xed\x6c\xfd\x10\x1d\xa1\xd4\x5b\xa6\x96\xb9\xa1\x32\x90\xc8\xef\x79\xf3\x10\x87\x08\xb3\x80\x70\x2e\x31\x17\x21\x70\x8c\x33\x55\xc2\xd4\xbd\x49\xe6\x4d\x6c\xd9\x1f\x47\xa1\xc0\xcd\x94\x47\x6d\x1c\xf2\xe4\xd8\x0d\x69\x4d\x74\xf6\x63\x99\xd4\x1c\x6d\x94\x18\x78\x25\x68\x33\x74\x8c\x5d\x9f\x58\xec\x71\x41\x5d\x40\x59\x8b\x2d\x21\x1e\xb5\xfb\xea\xaa\x34\x2d\x4f\xf9\xce\x29\x4f\x49\x5e\x9e\x49\x13\xf7\x61\xa8\x9e\x26\x0f\xf5\x8f\xf7\x49\x76\xc4\xaf\x67\x27\x05\x57\xd9\x13\x22\x7a\x55\xee\x69\xe9\x3a\xd6\x94\xbc\xee\x6a\xc6\x71\xb2\x3b\x08\xb5\x98\x37\x30\xe2\xa2\x61\x6c\x81\x94\xf6\x93\xa1\x66\xf4\x3c\x1d\x90\x5a\x9a\x24\x1a\x11\x91\xed\x96\x97\xee\x6c\x5d\xd4\x34\x8e\x1b\xb7\x78\x4d\x4d\x5b\xd2\x0d\x66\x34\x4f\xa4\x83\xd3\x26\x83\xf3\xed\xe3\xaf\xdd\x5f\x7f\x3b\x7c\xfd\xb5\xf5\xf9\x24\xb8\xfa\xfa\xde\xed\x86\xce\xfb\xe3\x71\xde\x5c\xe2\x0c\x29\x91\xc8\x9f\x7a\x7a\xe9\xbf\xcc\x67\x6f\x96\x6a\x25\xc9\x62\x82\x1a\xc3\xc8\x9d\x2e\x0b\x45\xb6\xdf\x6e\xce\x95\xf9\xc3\xaa\xf3\x8c\x00\x6a\x28\x22\x17\x8a\xc3\x8b\x84\xef\x39\x08\xe7\xaf\x6c\xb9\x44\x66\xc9\x46\x9b\xf0\xe9\x36\xbb\xe9\x5e\x5d\x93\xd7\x37\xad\x50\x04\x57\x37\x23\xd9\xdb\x11\x1b\x37\x51\x14\xf1\x66\xc0\x1b\x43\x21\xc6\xad\x2b\xda\xde\x69\x79\x51\xf3\x6e\x2b\x7e\xdd\xe4\xed\xa6\x8b\x27\xfa\xe3\x46\x21\x33\x70\x31\xf2\x8f\xd4\x5d\xbe\xad\x46\xbb\xd5\x68\x6d\x9d\xb4\x3b\xfd\xad\x76\xbf\xd3\x6b\xb6\xb6\xba\xed\x5e\xe7\x8f\xbc\x86\x91\x5e\x54\xa9\xb1\xdd\xef\x6e\x37\xbb\xdb\x9d\x4e\xeb\xf5\x1f\x55\x89\x59\xe2\xc3\x38\xcf\x45\x8a\x74\x42\xd4\x8b\x18\xfd\x2c\x31\x82\x4a\x12\x1a\xd4\x50\x92\x6b\x9a\x5b\xda\x6c\xc1\x90\xdd\x1e\x69\x8e\x93\x2d\x3d\x60\x86\xdc\xd9\x72\x1c\x6a\x45\xa9\xb4\xa9\xcc\xc2\xb3\xc2\x06\x0f\xd4\x76\x03\xf4\x3d\xa4\x70\x86\x87\x69\x54\xc9\x28\x9b\x6e\xc1\xe4\xf2\x51\xdd\xeb\x5e\x82\x55\x73\xa3\x39\x63\xd4\x22\x5c\x25\xd6\x4e\x07\x70\x80\xb8\xd8\x00\x63\xdf\x68\x1e\x6f\xf3\xa2\xa4\x33\xb8\x4c\x5a\x0a\xa6\x0d\x14\x45\x0d\x6e\x90\x2f\xf8\x13\xb5\xf2\x21\xb1\x51\xc8\x20\x98\x02\x8a\x22\x5b\xf8\x75\x19\xe5\x51\x51\x11\x45\x12\xab\xe9\x8a\xf2\x99\x8d\x76\x45\x04\x1e\xdc\x43\x30\xe3\xa7\x50\x1b\xec\x36\xda\x1d\xf9\x5f\xf9\x6d\xb2\x89\x21\x09\xca\x3f\xe6\x45\xa7\xd7\x00\x93\x19\x5f\x7b\x46\x70\xcd\xbe\xb7\xdc\x0a\x42\xab\x5b\x81\xc1\xc8\xc9\x5e\xb6\xd7\xfa\xce\xf2\xcd\x02\x35\x95\x42\x0f\xb5\x4f\x1f\xf6\x1b\x83\x83\xe3\xdf\x1b\xbb\x5f\x0e\x1b\x85\x02\x99\x56\x1b\x18\x5f\x53\x48\xbf\xb3\xa0\x2f\x84\xce\xae\x38\xda\x90\xfe\x83\xfe\xee\xc2\x5b\x95\xe4\x97\xf9\x29\x86\xfd\x30\xf3\xea\xa5\x0d\x3d\x3b\x24\xc1\xcd\x07\x87\xed\xc7\x1f\xb7\xdb\xe8\xf4\xee\xf0\x8f\x9b\x77\x27\x37\x47\xc7\x28\x43\x6a\xce\xe5\x9c\x36\xb4\x3a\x6b\x45\xab\xb3\x00\xac\x8e\x0d\x2b\xbd\xa0\x90\x9e\x53\x84\x18\x2f\x3a\xca\x7d\x38\x55\x8a\x4b\xbe\x55\x27\x95\x0b\x16\x42\x1f\xab\xa9\xd8\xd6\x3e\x94\x1a\xed\xc3\xa2\x36\x8c\x8b\xa7\x42\x3f\x0e\xa8\x76\x30\x25\xf5\xc4\x11\x82\x3a\x71\xeb\x4d\x18\xd8\xca\x71\x1d\x97\xd0\x0b\x81\x34\x1e\x61\x8f\x52\xa4\x31\x89\xaf\xda\xdf\xd3\x63\xd5\x07\xe2\xc2\x5b\x68\x9b\xe8\x94\x47\xde\x3f\xdb\xff\x10\x4f\x87\x87\xec\x80\xde\xb1\x5d\x1c\xec\x74\x7a\xe3\x9b\xeb\x6b\xb2\x3f\x49\x47\xbe\x7c\x6f\xb6\x6d\xb4\x7b\xad\xde\x1a\x47\x7b\x67\xfe\x60\xef\x58\xc6\x7a\x99\x0b\xb8\xb3\x0e\x59\x3f\x2e\x63\xeb\xd6\xce\xe3\x76\x2a\x59\x1d\x27\x7d\xd1\x61\x0e\xf7\x6d\xbd\x4d\x7e\xeb\xba\xf1\xef\xe7\x87\x93\xc9\xd6\xf9\xe4\xa3\x3f\xfd\xde\x0e\x3e\x1c\x77\x7f\x9d\xde\x1c\xd5\x95\x2a\x50\x1f\x72\x9c\x33\xd9\xcf\x3f\xef\x8c\x3b\xe3\xed\x5f\x4e\xdc\xd3\xdf\x4e\x51\xe7\x9a\xff\xf2\xba\x73\xfd\x75\xbf\x3b\x4d\x11\x2a\x1f\x47\xb5\xaa\xc3\xaa\x51\x78\x80\x36\x6c\x2f\x50\x86\x6d\x0b\x3c\xf9\x0c\x9e\x60\x46\x46\x53\xe9\x9a\xeb\xd3\xc0\x7d\x75\xef\x34\x61\xd8\xcd\x0e\xbd\xea\x05\x9f\x3e\x2b\xbc\x14\x46\xdd\x53\xef\xc0\xbb\x0d\xbe\xbd\x8b\xce\xbe\x8c\x0e\x3b\xfe\x11\xbe\x8e\xdc\xde\x1f\xfb\x29\x46\xe5\xbb\x13\xac\xd3\x62\x8d\x10\xf5\xe6\x23\xd4\xb3\x01\xc4\x31\x83\xfa\x28\x0c\x1b\x43\xc4\xea\xcb\x7e\x39\xa0\x39\x47\x59\x9c\x77\x4f\xc9\x81\xf7\x9d\x1a\xa8\x5c\x45\x6e\xef\x7c\x2f\x43\x65\xd9\x4f\x2a\xd8\xe0\xda\x5a\x23\x5c\x5b\xf3\xe1\xda\x5a\x0c\x97\x87\x78\xfa\xbd\x03\x40\x96\xef\x27\x6c\x03\x4a\x62\xb9\xd9\x97\x14\x16\x42\x77\x7d\x27\xa1\xfb\xfd\x0b\x3e\xec\x84\x47\xf8\xca\xed\x7e\x7b\x97\x22\x37\xef\xaa\x7d\x1b\x58\xdd\xed\x35\xa2\x65\x12\xb3\xc1\x65\xbe\x2f\xaa\xa7\x2c\x51\x5d\x19\x36\xc2\x01\xf9\x2a\x86\x22\x17\x21\xb3\xe7\xd7\xf6\xf5\x79\x4b\xc2\xf1\xfd\xfa\xdb\xde\xf7\x33\x05\xc7\x39\xf6\xdc\xee\xc1\x7e\x4d\x15\x57\xf5\xaa\xa7\xc1\x6d\x38\xbc\x59\x23\x0c\x6f\xe6\xa3\xf0\xc6\xaa\x84\xf2\x4f\xae\xe1\x62\xc3\x15\x9d\x82\x0f\x3e\x4e\xde\xbf\xb9\xfa\xf4\xf5\x7c\xfb\x7c\xec\x8d\x3e\xbd\x19\x7f\x38\xe6\xbf\x4c\x0e\xce\x6a\x69\x7f\x97\xb6\x4c\x8f\xdc\x6b\x1d\x41\x56\xc7\xdf\xd5\x37\xaf\xa7\xd4\xe1\xd2\xdd\xf8\xbc\xf7\xa9\x71\xf0\xad\xf1\xa6\x9f\xb8\xd6\x52\xc3\xb8\xc9\x01\xf8\xb4\x0c\xbe\x13\x8d\x42\xa8\xe1\xae\xd5\xf5\xa9\xeb\x07\x37\xad\x9b\x91\xb3\xc3\x89\x40\x5b\xdc\xbf\x9a\xbc\x36\xcf\x9f\xc9\x15\x53\x2a\x69\x12\x80\xf6\x78\xcb\x7d\xfd\xfa\xa6\xe5\x33\xc7\x9d\xf4\xc6\x3b\xc8\x1f\xee\x70\x7f\x34\xa6\x57\x5d\xd7\x1b\xf2\xab\xbf\xfe\xc7\xdf\x0e\xbe\x9d\x1c\xef\xc2\x7f\xe9\x4e\x36\x15\x3c\x6f\xf3\x84\x4c\x83\x36\xe1\x50\xef\xb5\x7a\xf5\x0d\xd5\x7d\xf5\x73\xef\xe3\xe9\xe0\xe4\xe0\x78\xd0\xf8\xf4\xe1\xd3\x49\x43\xbe\x54\xe1\xe8\x6c\x44\xcd\xcc\x4e\x59\xbe\x3d\xde\x0a\xd9\x56\x6b\x42\xe2\xd6\x4e\x88\xe5\x78\x79\xec\xda\xe9\x6c\xbb\xe3\x91\xb8\x6a\x23\xa7\x70\x7c\x3e\xcd\x23\xac\x2f\xea\x84\x61\xcd\xff\x3e\xcf\x54\x9d\xf0\x33\x36\xdd\xa6\xfc\x66\xd8\xe1\x47\xc1\xfb\xab\xad\xe1\xb7\x68\x7f\x67\x0f\xd5\x5e\xfd\x2b\x00\x00\xff\xff\x05\xc9\x51\xff\x8b\x7d\x00\x00")

func managedServicesApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedServicesApiYaml,
		"managed-services-api.yaml",
	)
}

func managedServicesApiYaml() (*asset, error) {
	bytes, err := managedServicesApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-services-api.yaml", size: 32139, mode: os.FileMode(436), modTime: time.Unix(1611323553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"managed-services-api.yaml": managedServicesApiYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"managed-services-api.yaml": &bintree{managedServicesApiYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

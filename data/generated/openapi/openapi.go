// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package openapi generated by go-bindata.// sources:
// openapi/managed-services-api.yaml
package openapi

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _managedServicesApiYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\xfd\x53\x1b\x39\x96\xbf\xe7\xaf\x78\xe7\xbd\x2d\xef\x5e\x61\xe3\x2f\x20\x71\x5d\xae\x8a\x00\xc9\x30\x93\x40\x82\x61\x98\xe4\xea\x0a\xe4\x6e\xd9\x2d\xe8\x56\x37\x92\xda\xe0\xec\xed\xff\xbe\x25\xa9\x3f\xd4\xdd\xf2\x17\x38\x01\x76\xc8\xfc\x30\x74\xb7\xf4\xf4\xf4\xf4\xbe\xf5\x24\x87\x11\xa6\x28\x22\x7d\xe8\x36\x5b\xcd\xd6\x2b\x42\x47\x61\xff\x15\x80\x20\xc2\xc7\x7d\xf8\x84\x28\x1a\x63\x17\x06\x98\x4d\x88\x83\x61\xf7\xf3\xe1\x2b\x80\x09\x66\x9c\x84\xb4\x0f\xad\x66\xab\xd9\x7e\x05\xe0\x62\xee\x30\x12\x09\xf5\xd2\xd6\x87\x63\x26\x3b\x49\xc8\x0d\x88\x99\xdf\x07\x4f\x88\x88\xf7\x37\x37\x51\x44\x9a\x12\x07\xee\x91\x91\x68\x3a\x61\xf0\x0a\xa0\x02\x90\x50\xf8\x5b\xc4\x42\x37\x76\xe4\x9b\xbf\x83\x06\x67\x07\xc6\x05\x1a\xe3\x45\x20\x07\x02\x8d\x09\x1d\x5b\x01\xf5\x37\x37\xfd\xd0\x41\xbe\x17\x72\xd1\x7f\xdd\x6a\xb5\xaa\xdd\xb3\xef\x79\xcf\xcd\x6a\x2b\x27\x66\x0c\x53\x01\x6e\x18\x20\x42\x5f\x45\x48\x78\x8a\x02\x12\xcd\xcd\x40\x53\xa9\xc1\x35\x95\x78\x43\xbe\x9c\xb4\x37\xaf\xd1\xe8\x1a\xf1\xcd\x7f\x10\xf7\x9f\x7d\x05\x72\x8c\x85\xfe\x03\x20\x8c\x30\x43\x12\xf6\xa1\xdb\x97\xef\x7f\x93\x6d\xdf\x4d\x0f\xdd\xe4\x3b\xc3\x3c\x0a\x29\xc7\x3c\xed\x00\x50\xeb\xb4\x5a\xb5\xfc\x11\xc0\x09\xa9\xc0\x54\x98\xaf\x00\x50\x14\xf9\xc4\x51\xa0\x37\xaf\x78\x48\x8b\x5f\x01\xb8\xe3\xe1\x00\x95\xdf\x02\xfc\x27\xc3\xa3\x3e\xd4\xff\xb2\xe9\x84\x41\x14\x52\x4c\x05\xdf\xd4\x6d\xf9\xa6\x42\xee\x04\xdf\xc4\x98\x8b\x7a\xa9\x27\xbe\x43\x41\xe4\x9b\x78\xa6\xff\xcc\x5e\x1f\xb0\x38\x49\x66\x74\xa0\x3b\x54\xdb\xdb\x71\x48\xe1\x17\x90\x48\x60\x94\x71\x99\x39\xe6\x39\x11\xde\x7b\x44\x7c\xec\xee\x31\xac\x68\x33\x10\x48\xc4\x7c\x1d\xb8\xcc\x81\x6b\xe2\x57\x60\x27\xd5\x1f\x98\x06\x00\xa3\x30\xa6\x2e\x0c\xa7\x40\xdc\x7c\xb1\x7b\xad\xf6\xe3\x2c\xf6\x01\x63\x21\x5b\x7e\x95\x7b\xad\xf6\x7d\xa9\x98\x77\x9d\x49\xa8\xdd\x58\x78\x20\xc2\x6b\x4c\x81\x70\x20\x74\x82\xfc\x22\x91\xba\xcf\x84\x48\xdd\xfb\x13\xa9\xbb\x88\x48\x67\x1c\x33\xa0\xa1\x00\x14\x0b\x2f\x64\xe4\x3b\x76\x41\x84\x80\x1c\x07\x73\x0e\xc2\xc3\x90\x68\xa6\xa6\x49\xb9\xde\x33\xa1\x5c\xef\xfe\x94\xeb\x2d\xa2\xdc\x51\x08\xd7\x05\x51\xbc\x25\xc2\x03\x1e\x61\x87\x8c\x08\x76\x81\xb8\x80\xef\x08\x17\x3c\x27\xdc\xd6\x63\x29\xe1\x15\x09\xb7\xd5\x6a\xdd\x97\x70\x79\xd7\xd9\x2c\x47\xf1\x5d\x84\x1d\x81\x5d\xc0\x12\x2f\x08\x1d\x65\x22\x53\xd9\xe4\xd8\x89\x19\x11\xd3\x7c\xec\x06\xbc\xc3\x88\x61\xd6\x87\xff\xfd\xbf\xb4\x51\x1c\x04\x88\x4d\xfb\xf0\x01\x0b\x40\xa5\x95\xc8\xd5\xa1\x8b\x7d\x2c\xb0\xd5\x70\xea\x4f\xcb\xd9\xce\x27\xc8\xef\x65\x48\x7f\x39\x0a\x61\x4f\x23\x36\x8b\xf0\xfb\x6a\xc6\x2f\x76\xe2\xc5\x4e\xbc\xd8\x89\x22\xe5\x7a\x5a\x34\x1e\x60\x2d\x0a\x00\xfe\xa4\x36\xe3\x61\x44\x2c\x03\xb8\xbf\xfd\x48\x4d\x83\x06\x37\xc7\x3a\x2c\x65\x6b\x22\xc4\x50\x80\x45\x12\xb6\xea\x26\x7a\x22\xb5\xc2\x44\xf2\x76\x9b\xc4\xad\x2d\x17\xdf\x69\x88\x91\x8c\x30\x6d\x26\xca\x91\x81\x81\x36\x51\xc9\xe7\x2a\x32\x12\x1d\x42\xfb\x70\x13\x63\x36\x35\x48\x46\x51\x80\xfb\x80\xf8\x94\x3a\xb3\x08\xf9\x19\xb3\x51\xc8\x02\x25\xbd\x48\x85\xd4\x40\x28\x20\xaa\x7b\x79\x2c\xa4\x61\xcc\x21\x40\x94\xaa\xd8\x78\x1e\x33\x89\x69\x84\xfb\x30\x0c\x43\x1f\x23\x6a\x7c\x91\x34\x27\x0c\xbb\x7d\x10\x2c\xc6\xaf\xf2\x97\x98\x8b\x77\xa1\x6b\xd0\xdd\x12\xe3\xb8\x48\xa0\xec\xbb\x85\xef\xe7\x73\xbd\x9d\xe7\x97\x0d\x55\x3f\xa3\xa9\x1f\x22\xb7\xc8\xff\xb3\xb8\xff\x6c\x70\x82\xc7\xa4\x2a\x76\x0b\x38\x3e\xed\x36\x23\x22\x3d\x38\xbb\x17\xd4\xb4\x5b\x05\xea\x8c\xb5\xb0\xf9\x3b\x9d\xe7\x9a\x2b\xf8\x1c\xf2\x1f\x9d\x2c\x28\xfa\x0e\x8e\x83\xa3\x92\x4f\xf5\x3c\xf4\x75\xaf\xd5\x4a\xf3\x0e\xf7\x37\x7b\x65\x10\x33\xe9\xf4\xbb\xf4\xa9\x54\x4b\xad\xb3\x79\x59\x69\xbf\x78\xa3\x2f\xde\xe8\x5c\x6f\x34\x03\xfb\x09\xdd\xed\xfa\x7e\x78\x8b\xdd\x43\xca\x05\xa2\x0e\x3e\xc1\xc8\xf1\xb0\xfb\x80\xf1\x16\xc1\x9c\xef\x16\x8f\x42\x36\x24\xae\x8b\x29\x60\x22\x3c\xcc\x60\x88\x1d\x14\x73\xac\x0c\x6b\x2c\x5b\x10\xbe\x94\xef\x0c\x61\xb1\x6f\x80\xee\x48\x10\x07\x40\xe3\x60\x88\x19\x84\x23\x20\x09\x7a\xb2\x1b\x12\xe0\x20\x0a\x43\x9c\xf8\x09\x2a\x0d\x28\x3c\xc2\xf5\x98\x1e\xe2\x30\xc4\x98\x02\xd3\x53\x79\x9e\x8e\xf9\x0f\x4c\xe0\x9c\x7a\x38\x75\x45\xb0\x2b\x0d\x61\x18\x33\x07\x83\x1b\x62\x4e\xeb\x42\x3b\xe2\xcf\xd2\x0f\xff\x81\xb9\x9b\x5d\x0a\xf1\x2c\xf7\x5b\xb3\x21\xa1\x63\xc5\xbb\xda\x85\x4b\xcc\xe8\xf2\xde\xb6\xe1\xbe\x2b\xdb\x22\xdd\x77\x8a\x6f\x13\x17\xde\x04\x67\x6c\x88\x64\x5d\x4e\xb0\x88\x19\xe5\x80\xc0\x27\x5c\x48\x81\x29\x64\xcb\xb9\xcd\xc9\x96\x2d\x55\x2b\xbe\x0a\x96\xcb\xec\xb1\x14\x29\x37\x1f\xa5\x9f\xca\x52\xa6\x87\xf3\x91\x98\xbe\x56\xc5\x7d\x29\xcc\xe1\x1d\x72\x53\xbc\x9f\x81\x24\x1c\x6a\xdb\xf9\x45\x06\x46\x0f\x70\x71\x2c\x60\xea\xb3\x9d\x96\x15\x6c\xf9\xd3\xa5\xdc\x9a\x3d\x9c\x3f\xaf\xd3\xf2\xe0\x14\x5a\xd9\xea\xac\x94\x08\x79\xca\xa4\x5e\xab\x99\xb2\x67\x45\x6c\x40\x8c\x24\x4d\x84\xc6\xc6\x5a\x2d\x6c\xce\xc9\xf7\x55\x9a\x87\xcc\xc5\xec\xdd\x74\x95\x01\x30\x62\x8e\x57\x5f\x94\x38\x72\xfc\x30\x76\x2f\x22\x16\x4e\x88\x9b\x4d\x78\x86\x2d\x64\x04\x4f\xb0\x66\xad\xd4\xf8\xf0\x38\x8a\x42\x26\x59\x46\x01\x82\x0c\x50\x73\x96\x6d\xdc\x93\xed\x3e\xa7\xcd\x1e\x68\x23\xeb\x9d\x56\xab\x3e\x93\xa1\x53\x94\xdd\xc5\xe8\x3e\x06\x8b\x17\x28\x51\xb4\x9b\xf5\x5e\xab\x3d\x7b\x5e\x2f\x76\x40\x13\x69\x6b\xde\xe2\xbf\x68\xb3\x47\xd0\x66\xab\xa8\x1a\x55\x8c\xb4\xc9\x54\x72\xf1\x01\x7a\x27\x01\x20\x5f\x2a\x9b\x37\x43\xc2\x97\xd3\x47\x3a\xd5\xf9\x64\xb4\x52\x3a\xb9\x47\xd3\x4e\x9a\x1e\x2f\xba\xe9\x45\x37\x65\xff\x7e\x9a\x6e\x5a\xb0\x1d\x56\x6c\xfc\x53\x15\x59\xf2\x8c\x1c\x27\x8c\xa9\xa8\xea\xae\x65\x54\xc2\x4f\x5b\xde\xa4\x5e\x76\x57\x23\x5b\x14\xe5\x12\x5b\x7e\x4c\xf5\x51\x92\x3e\x4c\x27\x38\x5b\xf4\x9f\x2a\x93\x3e\x66\x4e\xbd\xde\x6b\x75\x9f\x09\x91\x9e\x44\x78\x3a\x5b\x67\x3e\x55\xc2\x3d\x83\x7a\xb6\x8a\x9b\x53\x54\x03\xbc\xec\x65\x29\xd1\xb7\xca\xbd\x59\x4d\xb0\x78\xa7\xbd\x04\xa2\x92\xde\xfb\x09\xdb\xee\xc5\x99\x5a\xb7\x7f\x67\x2d\x2d\x5f\x92\x6f\xb2\xe5\xb4\x8e\x75\xef\x9d\xf2\xa7\x62\x24\x96\x97\x84\xa2\x25\x5c\x59\x1a\x8a\xc3\x2e\x12\x8c\x32\x6f\x25\xdb\x54\x2f\xd6\xe9\xc5\x3a\xad\x6c\x9d\x7c\xbb\xab\xf3\x62\x8b\x7e\xb4\x2d\xd2\x42\x5b\x14\xfc\xb2\x31\xca\x76\xea\xaa\xab\x53\x5f\xc5\x31\x57\x19\x86\x64\x15\xab\x55\x7c\xb6\xa5\xb7\xd4\x37\x17\x36\xd4\x53\xd5\xa3\xea\x2c\xe5\x87\x31\x99\x48\x39\xb3\x55\x87\x3f\x30\xb6\xb1\xdb\x87\xde\x13\x61\xca\x02\xa1\xdc\x52\x21\xf8\x8b\x22\x56\x64\x41\xff\x2e\x8a\xf8\x01\x44\x7a\xea\x61\x02\xfc\xe3\x9f\xff\xb6\xaa\x56\x8b\xe5\x7c\x55\x9b\xe8\xb8\x75\x28\xda\x4d\x86\x39\x16\x0d\x87\x61\x17\x53\x41\x90\xcf\x93\x55\x32\x23\x88\x1f\xa2\x14\x9f\x9b\xd3\x8c\x1a\x8a\x54\x3f\xd8\x5d\x56\x63\x80\xb1\x1c\xf7\x66\x24\x05\xa9\x38\xf8\x1e\xc3\x6e\x25\x88\xac\x8c\x08\xa3\x90\xd9\xec\xe7\xab\x7c\x76\x12\x8b\x84\xa0\x1a\xa1\xe3\xe1\x15\x76\xc4\x09\x1e\x61\x86\xa9\x93\x89\x9a\xae\x08\x0f\xd5\xc7\x94\x97\x98\xc4\x52\x10\x93\xc6\xc4\x35\xa9\xaa\x3b\x71\xc1\x08\x1d\x67\xaf\xaf\x09\x5d\xdc\xc8\x93\xeb\x30\xaf\x91\x0c\x98\xcd\xb0\x58\xc5\x77\x06\x45\xe5\x28\xc6\x63\x84\xc6\xd8\x78\xe4\xe4\xbb\xf9\x28\x42\x81\x7c\xe3\x99\x08\x1c\xf0\xd5\x26\xbe\xd4\xac\x24\x16\xd5\x46\x84\x0a\x3c\x36\x4a\xf2\x25\x72\x8b\x5b\x29\x9c\xe7\x37\x53\x86\x26\x6d\x82\x7c\xff\x78\xb4\x48\xe8\x53\xd1\x2a\x31\x81\x99\xef\xb5\xd0\x63\x16\x4d\x40\x69\x03\xb7\xa2\xae\xad\xb4\x01\xb5\x90\xc8\xa2\x1b\x66\x36\xcf\x84\xe4\xa2\xc8\x76\xd6\x4e\x8a\x18\x26\xd7\xac\x44\x10\xd9\xf1\x01\x54\x50\x0c\x65\x47\x11\x31\x86\xa6\xa5\x2f\xd6\xe6\x30\x17\x41\x35\x3d\x8d\xa1\x59\x0e\xf6\xc8\xab\xcf\xd5\x11\xf8\xa5\x17\xb4\xb8\x43\xb9\x74\xb7\x20\xf6\x05\xb9\x40\xdf\xed\x1d\xaa\xa7\x58\x20\xd9\xd7\x5b\x9e\xd1\x6e\xe9\x0a\xe8\xa8\xa3\x3a\xcb\x36\x1e\x86\xa1\xe0\x82\xa1\x68\xa0\xee\xac\xf8\xc5\xb0\xd5\x8b\xc9\xa5\x13\x30\x17\xa8\xd2\x65\x14\xb2\x00\x89\x3e\xb8\x48\xe0\x86\x20\x01\x5e\x16\x64\x1c\xb9\xeb\x06\x39\x52\x97\x22\x5c\xac\x24\xdb\xd6\x43\xb1\x36\x96\x9d\x77\xca\xa3\x2a\x0d\x3f\x5a\xfc\xad\x68\x2b\xcb\x00\xb5\x32\x1e\xb5\x42\x23\x65\x19\xa0\xd6\x2e\xbe\x55\x96\xa0\xf2\x56\x6b\xfe\xca\x6b\xa9\x34\x96\xc9\xd3\x2e\x7b\x30\xe6\xc7\xea\xb2\x12\xf9\xf3\x7f\xf3\x17\xc2\xc4\xb9\xba\xbe\xc9\x29\xaf\x14\x6c\xf1\x6e\x18\x05\x21\xf3\x88\xb2\xd3\x83\xa1\x3b\x05\x8e\xa9\x90\x51\x4f\x72\x8c\x0f\x3e\x1f\x0f\x4e\xe7\xf8\x16\x52\xc0\x57\xf3\x0e\x66\x2b\xb6\x4a\x09\x7b\xb1\x04\x01\x6e\x3d\xcc\xb0\x51\x81\xed\xf8\x31\x17\xf2\x3d\xf1\x7d\xf3\xac\x00\xa1\x8b\x9c\x0f\x9b\x96\x2c\x52\x08\x0b\x7d\xde\x40\x84\x2a\x51\x2e\xff\xef\x84\x74\x44\xc6\xb1\x15\x05\x11\x4a\x04\x14\xd8\xdd\x6f\x95\xd1\xcb\x6a\xb7\xac\x15\x0b\x43\xd7\xe5\xcc\x65\x8b\xb4\x8c\xa4\x30\x52\x13\x0e\x05\x04\x31\x17\x12\x1d\x9e\x64\x0e\xfd\xf0\x16\xb3\x86\x83\x38\x06\xe4\x47\x1e\xa2\x71\x80\x19\x71\xc0\xf1\x10\x43\x8e\x8c\x5b\x20\x64\x50\xaf\x37\xea\xf5\x0d\x69\x87\x58\x92\x35\x42\x54\xb7\x1f\x62\x61\xb6\xde\x00\x44\x5d\xc0\xd4\x2d\xb6\xaa\x40\xd5\xed\x1c\x44\x55\xd0\x3c\xc4\xe0\x87\x74\x2c\x89\xe1\x21\x0a\xdd\x8e\x31\x7c\xb3\xbe\x68\x45\xaa\x56\xc8\x72\xa0\x41\x36\x59\x13\x17\x54\x0a\xde\x1e\x4b\x17\x56\x10\x79\x7c\x65\x58\x40\xe9\xb9\x68\xc3\x02\xd2\xb5\x7c\x8d\xf3\xb2\xa1\x47\x5d\xe1\x1c\x8d\x27\xb2\xbe\x33\xcf\xe7\x3e\xdd\xd5\xd5\x28\xd7\xaa\xf2\x6b\x35\x72\xf5\xbd\x62\xd1\x5d\x7d\x8e\x4d\x2a\x47\xac\x45\x40\x87\xd4\x25\x0e\x12\x49\xd9\x9f\x9c\xb2\x56\xcd\x84\x27\x8c\xd0\x84\xf3\x44\xf9\xd4\xeb\x05\xc4\xea\x75\xf0\x09\xbd\x5e\xac\xfe\xc8\x9c\xe1\xcf\x28\xb9\x89\x31\x10\x95\xc9\x18\x11\x7d\x5a\x4e\x62\x92\x0c\xbe\x10\xb8\x4b\x78\xe4\xa3\xe9\xc5\x7c\xb3\x73\x64\x98\x9c\x92\xe1\x95\x8e\x42\x02\x04\xa2\x98\x45\x21\xc7\x4b\xa8\xf4\xf9\xc3\xfd\x12\x07\x88\xc2\x88\x11\x4c\x5d\x7f\x6a\x99\x5d\x11\x87\x0d\x85\x44\xc2\xc2\x70\x89\x6e\xf9\xe5\x62\x0c\x30\x45\x43\x1f\xcf\x21\xed\xb9\x87\xd5\xa9\x46\xcb\x9c\x09\x4f\xbb\xeb\xe9\xe3\xc8\x0f\xa7\x84\x8e\xa5\x39\x3c\x1e\xec\x67\xf6\xb8\x8a\x44\xd1\xda\xdb\x9c\xa6\x04\x70\x59\x49\xd9\xd9\x78\x3f\x7f\x92\xa4\x41\xa9\x1d\x54\x7f\x3b\x8f\xc7\xe3\x1a\xe7\x7a\xfd\xd9\x31\x77\x42\x3f\x1b\x53\x97\xb8\xec\xa8\x09\xbf\x13\x36\x26\x94\xa0\x75\x73\x5b\x82\xc4\xba\xb8\x4c\x0f\x36\x42\xb1\x2f\xfa\x30\x42\x3e\xc7\x4b\xb2\x5f\x31\x95\x6a\xe7\xc0\xec\x9a\xcb\x62\xb1\x03\x10\x0a\x9f\x76\x07\x8d\xc1\xe0\x38\x0b\x25\xb4\x4b\xb6\x97\xb8\x64\xf2\x2d\x8a\x85\x27\xd7\x56\x27\xbc\xeb\xf7\xb1\xc1\xeb\xcb\xc1\x54\x73\x63\xc5\x99\xea\xcb\x32\x61\x8c\x29\x66\x6a\x8a\x71\xca\x9e\x59\x4d\x77\x31\x7b\x5c\xce\xb4\xaf\x94\x08\x29\x8e\xbd\x34\x28\xb3\xdb\x7a\x20\x3a\x3e\xc1\x54\x1c\xee\xaf\x90\x9c\x92\x1d\x06\xd8\x61\xd5\xad\x83\xb5\xa5\x31\xac\x5b\x0c\x35\x0b\xd7\x96\xf2\x7b\x25\xe6\xb5\xc7\xba\x32\x9e\x9b\xb1\xb5\x5f\x5f\x6b\xb8\xbb\x5a\xac\x37\x87\xbd\xec\xda\xcf\xce\x0b\xc5\x41\x76\xcd\xe7\x59\xfb\x20\x0b\x86\xaa\x2c\xdf\x0a\x4b\x67\x4b\x45\x55\x4b\x81\x0f\x0d\x37\xd6\xce\xc7\x7f\x3a\xa5\x31\x4b\x2e\xef\x29\xe6\x8f\xa7\x83\xaa\xab\x3d\x33\x18\xbb\x47\x80\x55\x85\x5e\x0d\x90\x2a\xa1\xc8\x0a\xbb\x9b\x29\x77\xae\x10\x2c\x95\x9d\xad\xb9\xc4\x7c\xd4\xc8\xca\x3e\x55\x49\xc0\xf2\xfe\x78\x2e\x07\xfa\x02\xae\xac\x80\xa4\x92\xa9\xd1\x9c\xcf\xb0\x13\xb2\xac\x64\xa0\xb4\xa9\x6d\x21\x06\xa1\x7d\x88\x90\xf0\xca\xea\x37\xaf\x54\x35\xf7\x0c\x35\x0e\xc6\x5e\x66\xf9\xa6\xb0\xe2\x7d\x60\x68\x8c\x81\x50\x17\xdf\x55\xa0\x9b\xde\xd2\x12\x58\x56\xf7\xd2\xcb\x3b\x99\x13\xe4\xc7\x46\xf4\x6e\x6e\x61\x6a\xa4\x8d\x1d\xd7\xb9\x48\x1f\xe5\x77\xa3\xc8\x25\x97\xfe\x16\x46\x8e\x67\x4e\x7a\x8d\xd3\x28\x6f\xb5\x66\xd3\x68\xb5\xf4\x44\x92\x73\xbf\x56\x1d\xfd\xff\x8d\xac\xe7\x20\xb9\xf2\x4f\x47\x12\xaa\x13\x0c\xa7\xe0\x30\x22\x30\x23\xa8\xa9\x38\x84\x4f\xa9\x40\x77\x59\x88\x91\xb1\x1a\x10\x6e\x20\x14\x10\x1f\xa9\xdc\xaa\x28\x75\xc1\x70\x91\x02\xbe\x00\xc7\x57\xb7\xca\xc8\x78\x88\xc2\xe0\xcb\x47\xb5\xd3\x86\x03\x4c\x45\x7e\xda\xfc\x40\xd2\x4d\x11\x3a\xbd\x58\x46\xf5\xd7\x17\xcb\x20\x3a\x4d\xc1\x5e\x1b\x19\x74\x0e\x23\x82\x7d\x97\xe7\x50\xde\xe7\xc1\xc1\x86\x5c\x0d\x8d\x83\x08\x81\x25\xe7\xe8\xa4\x10\x42\x92\x38\x37\x06\x10\x1e\x26\x2c\x51\xbf\x19\xb0\xcb\xcb\x4b\x7e\xe3\x17\xfc\x04\x40\xdc\x31\xbf\xe7\x8d\x8f\xd9\xfd\xc6\x83\x0b\x44\xdd\x8b\xcc\x63\x77\x91\x58\x02\x85\x0d\x63\x37\x6d\x36\x4a\x87\x9a\x62\xe6\xd2\xd1\xba\x48\x63\x51\x77\x03\x42\x06\x44\xb7\x51\xac\xa4\x62\x9d\x20\x12\xd3\x0d\xf9\x2e\x0f\x5c\xb4\x57\xc6\x63\x5f\xf0\x2c\x87\x6b\xcc\x45\x22\xd5\xcc\x98\x36\xf2\x43\x17\x17\x6a\xd7\xab\x8c\x5c\xe2\x53\x93\x97\xd3\x19\xd6\x66\x88\x9f\x96\xcf\x04\xc0\x43\x45\x8c\x8b\xa9\x8f\xfb\x6a\xb3\x50\x2b\x02\x75\x0a\xde\x2e\x3e\xb9\xf4\xa8\x46\xb9\xb4\xe4\xf4\x5e\x20\x36\x0b\xc4\x45\x65\xcd\x8b\xb2\x92\x8f\x59\x90\x19\x48\xae\x8b\x4a\xb8\x5f\xf2\x9d\xf6\x61\x14\x62\x88\xe1\x7e\x69\x0b\x67\x43\x91\x6d\x43\xef\x0c\x6f\xa4\x91\x2d\xa2\x6e\xb2\xe5\x9d\x43\x94\xe6\x07\x31\x24\x42\xc6\x25\x20\xb8\xfc\xef\xff\xb9\xdc\x80\xcb\xb7\x97\x92\x57\x2e\x3f\x1e\xfe\x76\x70\x99\x0b\x5b\xda\xe9\x2a\x24\x34\x69\xbe\x7b\xb4\x7f\xa9\x00\x5f\x1e\x9f\x5c\x6e\x80\x17\xde\xe2\x89\x8e\xa7\x99\x62\x2f\x04\x3e\x09\x88\xda\x12\x09\xd0\x1d\x8c\xc2\x98\x25\xdd\x8b\x93\x50\x4b\x6e\x90\xf6\xa0\xc2\x43\x39\xd5\x0d\x61\xb3\xdc\x6f\xaa\x18\x0a\xdf\xc4\xc8\x87\xcb\x60\xda\x50\x2d\x34\x8a\x09\x19\x92\x6f\xe8\x96\x5f\x6e\x18\xb2\xc0\xbd\x30\xf6\x5d\x18\x96\xa4\xb1\x28\x8a\x6f\x21\x05\xa9\x37\x5a\x0a\x54\x87\xb7\x80\x6e\xb9\x5d\x34\x17\x20\x4d\x04\xd7\x03\xa8\xad\x20\x42\xc7\xfa\xf5\x65\x30\x5d\x1d\x47\x9f\x5c\x63\x08\xa6\x7f\xed\x6c\xfd\x10\x2d\xa1\x14\x5c\xa6\x98\xb9\xa1\x34\x90\xc8\xef\x20\xf3\x10\x87\x08\xb3\x80\x70\x2e\x69\x2e\x42\xe0\x18\x67\xca\x84\xa9\x9b\x93\xcc\x5b\xc2\xb2\x3f\x8e\x42\x81\x9b\x29\x8e\xda\x3c\xe4\xe5\xb1\x1b\xd2\x9e\xe8\xfa\xc7\x32\xa8\x39\xfa\x28\x31\xf1\x8a\xd1\x66\x68\x19\xbb\x46\xb1\x58\xe4\x82\xc2\x80\xb2\x1e\x5b\x82\x3d\x6a\xf7\xd5\x56\x69\x61\x9e\x8a\x9e\x53\x9c\x92\xca\x3c\x13\x26\xee\xc3\x50\xbd\x4d\x5e\xea\x87\xf7\x49\x7d\xc4\xaf\xe7\xa7\x85\x60\xd9\x13\x22\x7a\x55\x9e\x69\xe9\xaa\xd0\x14\xbc\x9e\x6a\x86\x71\xb2\x3f\x08\xb5\x98\x37\x30\xe2\xa2\x61\x6c\x82\x94\x76\x94\xa1\x66\xcc\x3c\x5d\x90\x5a\x5a\x26\x1a\x11\x91\xed\x97\x97\xee\x13\x5d\x34\x34\x8e\x1b\xb7\x78\x4d\x43\x5b\x0a\x0e\x66\x0c\x4f\x64\x88\xd3\x26\x83\xaf\xdb\x27\x5f\xba\xbf\xfe\x76\xf8\xfa\x4b\xeb\xf8\x34\xb8\xfa\xf2\xde\xed\x86\xce\xfb\x93\x71\x3e\x5c\x12\x0e\x29\x96\xc8\xdf\x7a\xda\xf9\x5f\xe6\x27\x59\x96\x1a\x25\xa9\x63\x82\x1a\xc3\xc8\x9d\x2e\x4b\x8a\x6c\xc7\xdd\x94\x95\xf9\xcb\xaa\x2b\x8d\x00\x6a\x28\x22\x17\x0a\xc3\x8b\x04\xef\x39\x14\xce\x3f\xd9\xaa\x89\xcc\x96\x8d\x36\xe1\xd3\x6d\x76\xd3\xbd\xba\x26\xaf\x6f\x5a\xa1\x08\xae\x6e\x46\x72\xb6\x23\x36\x6e\xa2\x28\xe2\xcd\x80\x37\x86\x42\x8c\x5b\x57\xb4\xbd\xd3\xf2\xa2\xe6\xdd\x56\xfc\xba\xc9\xdb\x4d\x17\x4f\xf4\x0f\xef\x84\xcc\xa0\x8b\x51\x81\xa4\xee\x99\x6d\x35\xda\xad\x46\x6b\xeb\xb4\xdd\xe9\x6f\xb5\xfb\x9d\x5e\xb3\xb5\xd5\x6d\xf7\x3a\xdf\xf2\x1e\x46\x81\x51\xa5\xc7\x76\xbf\xbb\xdd\xec\x6e\x77\x3a\xad\xd7\xdf\xaa\x1c\xb3\xc4\x8f\xb6\x3c\x17\x2e\xd2\x25\x51\x2f\x6c\xf4\xb3\xd8\x08\x2a\x65\x68\x50\x43\x49\xb5\x69\x6e\x69\x33\x87\xc1\x49\x78\x0c\xcc\x75\xb2\x15\x08\xcc\xe0\x3b\x5b\x95\x43\xad\xc8\x95\x36\x95\x59\x78\x57\xd8\xe2\x81\xda\x6e\x80\xbe\x87\x14\xce\xf1\x30\xcd\x2b\x19\x6d\xd3\x4d\x98\x9c\x3f\xaa\xbb\xdd\x4b\xa0\x6a\x6e\x35\x67\x88\x5a\x98\xab\x84\xda\xd9\x00\x0e\x10\x17\x1b\x60\xec\x1c\xcd\xc3\x6d\x5e\x9e\x74\x06\x96\xc9\x48\xc1\xb4\x81\xa2\xa8\xc1\x0d\xf0\x85\x88\xa2\x56\x3e\x26\x36\x0a\x19\x04\x53\x40\x51\x64\x4b\xc0\x2e\xa3\x3c\x2a\x2a\xa2\x08\x62\x35\x5d\x51\x3e\xb5\xd1\xae\xb0\xc0\x83\x67\x08\x66\x06\x15\x6a\x83\xdd\x46\xbb\x23\xff\x2b\x7f\x4d\xb6\x31\x24\x40\xf9\xc7\xbc\xfc\xf4\x1a\xc8\x64\x66\xd8\x9e\x11\xb9\x66\xdf\xa9\x6d\x25\x42\xab\x5b\x21\x83\x51\x95\xbd\xec\xac\xf5\x7d\xda\x9b\x05\x68\xaa\x88\x1e\x6a\x9f\x3e\xec\x37\x06\x07\x27\xbf\x37\x76\x3f\x1f\x36\x0a\x0d\x32\xad\x36\x30\x6e\xfa\x4f\x7f\x03\x40\x5f\x56\x9c\x5d\x72\xb4\x21\xe3\x07\xfd\x9b\x00\x6f\x55\x99\x5f\x16\xa7\x18\xf6\xc3\xac\xac\x97\x36\xf4\xfc\x90\x04\x37\x1f\x1c\xb6\x1f\x7f\xdc\x6e\xa3\xb3\xbb\xc3\x6f\x37\xef\x4e\x6f\x8e\x4e\x50\x46\xa9\x39\xd7\x73\xda\xa8\xd5\x59\x2b\xb5\x3a\x0b\x88\xd5\xb1\xd1\x4a\x3b\x14\x32\x72\x8a\x10\xe3\xc5\x40\xb9\x0f\x67\x4a\x71\xc9\xaf\xea\xac\x72\xc1\x42\xe8\x83\x35\x15\xdb\xda\x87\xd2\xa0\x7d\x58\x34\x86\x71\xf5\x54\xe8\xc7\x01\xd5\x01\xa6\x84\x9e\x04\x42\x50\x27\x6e\xbd\x09\x03\x5b\x3b\xae\x33\x13\xda\x11\x48\x33\x12\xf6\x3c\x45\x9a\x95\xf8\xa2\xe3\x3d\xbd\x56\x7d\x20\x2e\xbc\x85\xb6\x49\x9d\xf2\xca\xfb\xe7\xfb\x1f\xe2\xe9\xf0\x90\x1d\xd0\x3b\xb6\x8b\x83\x9d\x4e\x6f\x7c\x73\x7d\x4d\xf6\x27\xe9\xca\x97\xef\x74\xb6\xad\x76\xaf\xd5\x5b\xe3\x6a\xef\xcc\x5f\xec\x1d\xcb\x5a\x2f\x73\x39\x74\x36\x21\xeb\x0f\x9f\xd8\xa6\xb5\xf3\xb8\x93\x4a\xbc\xe3\x64\x2e\x3a\xcd\xe1\xbe\xad\xb7\xc9\x6f\x5d\x37\xfe\xfd\xeb\xe1\x64\xb2\xf5\x75\xf2\xd1\x9f\x7e\x6f\x07\x1f\x4e\xba\xbf\x4e\x6f\x8e\xea\x4a\x15\xa8\x1f\x19\x9c\x23\xec\x5f\x8f\x77\xc6\x9d\xf1\xf6\x2f\xa7\xee\xd9\x6f\x67\xa8\x73\xcd\x7f\x79\xdd\xb9\xfe\xb2\xdf\x9d\xa6\x14\x2a\x1f\x48\xb5\xaa\xc3\xaa\x51\x78\x80\x36\x6c\x2f\x50\x86\x6d\x0b\x79\x72\x09\x9e\x60\x46\x46\x53\x19\x9a\xeb\xf3\xc0\x7d\x75\xf3\x34\x61\xd8\xcd\x8e\xbd\x6a\x87\x4f\x9f\x16\x5e\x8a\x46\xdd\x33\xef\xc0\xbb\x0d\xfe\x78\x17\x9d\x7f\x1e\x1d\x76\xfc\x23\x7c\x1d\xb9\xbd\x6f\xfb\x29\x8d\xca\xb7\x27\x58\xc5\x62\x8d\x24\xea\xcd\xa7\x50\xcf\x46\x20\x8e\x19\xd4\x47\x61\xd8\x18\x22\x56\x5f\xf6\x56\xfb\xe6\x1c\x65\xf1\xb5\x7b\x46\x0e\xbc\xef\xd4\xa0\xca\x55\xe4\xf6\xbe\xee\x65\x54\x59\xf6\xba\x7f\x1b\xb9\xb6\xd6\x48\xae\xad\xf9\xe4\xda\x5a\x4c\x2e\x0f\xf1\xf4\x2e\x7e\x40\x96\xbb\xfd\xb7\x01\x25\xd9\xdc\xec\x96\xff\x85\xa4\xbb\xbe\x93\xa4\xfb\xfd\x33\x3e\xec\x84\x47\xf8\xca\xed\xfe\xf1\x4e\x77\xa9\x9e\x7d\xb6\x11\xe8\xcd\x1a\x09\xf4\x66\x3e\x81\xde\x58\x05\x2e\xff\xe9\x2b\x5c\x1c\xb8\x22\x3f\xf8\xe0\xe3\xe4\xfd\x9b\xab\x4f\x5f\xbe\x6e\x7f\x1d\x7b\xa3\x4f\x6f\xc6\x1f\x4e\xf8\x2f\x93\x83\xf3\x6c\xbe\x4b\x6b\xe1\x47\x9e\xb5\xce\x96\xaa\xc3\xde\xea\xb7\x87\xa7\xd4\xe1\xd2\xb5\x3e\xde\xfb\xd4\x38\xf8\xa3\xf1\xa6\x9f\x84\x91\x52\x9a\xdc\xe4\xb8\x77\xda\x06\xdf\x89\x46\x21\xac\xbe\x6b\x75\x7d\xea\xfa\xc1\x4d\xeb\x66\xe4\xec\x70\x22\xd0\x16\xf7\xaf\x26\xaf\xcd\xd3\x56\xd2\x3b\x48\x0f\x00\x48\x02\xb4\xc7\x5b\xee\xeb\xd7\x37\x2d\x9f\x39\xee\xa4\x37\xde\x41\xfe\x70\x87\xfb\xa3\x31\xbd\xea\xba\xde\x90\x5f\xfd\xf5\x3f\xfe\x76\xf0\xc7\xe9\xc9\x2e\xfc\x97\x9e\x64\x53\x91\xe7\x6d\x5e\x7e\x68\xc0\x26\x1c\xea\xbd\x56\xaf\xbe\xa1\xa6\xaf\x1e\xf7\x3e\x9e\x0d\x4e\x0f\x4e\x06\x8d\x4f\x1f\x3e\x9d\x36\xe4\x47\x95\x7a\xcd\x56\xd4\xac\x63\x94\xed\xdb\xe3\xad\x90\x6d\xb5\x26\x24\x6e\xed\x84\x58\xae\x97\xc7\xae\x9d\xce\xb6\x3b\x1e\x89\xab\x36\x72\x0a\x87\xc5\xd3\xaa\xb9\xfa\xa2\x49\x18\x96\xeb\xef\xf3\xd4\xf2\x29\x3f\x67\xd3\x6d\xca\x6f\x86\x1d\x7e\x14\xbc\xbf\xda\x1a\xfe\x11\xed\xef\xec\xa1\xda\xab\x7f\x05\x00\x00\xff\xff\x1e\xa5\xaa\x40\x13\x7b\x00\x00")

func managedServicesApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedServicesApiYaml,
		"managed-services-api.yaml",
	)
}

func managedServicesApiYaml() (*asset, error) {
	bytes, err := managedServicesApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-services-api.yaml", size: 31507, mode: os.FileMode(436), modTime: time.Unix(1610126567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"managed-services-api.yaml": managedServicesApiYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"managed-services-api.yaml": &bintree{managedServicesApiYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

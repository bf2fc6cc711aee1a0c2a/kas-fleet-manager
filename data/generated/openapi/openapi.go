// Code generated for package openapi by go-bindata DO NOT EDIT. (@generated)
// sources:
// openapi/managed-services-api.yaml
package openapi

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _managedServicesApiYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\x6b\x53\x1b\xb9\x96\xdf\xf9\x15\x67\x7d\xf7\x56\xcf\x6c\x61\xe3\x17\x90\x71\x6d\xb6\x8a\x00\xc9\x30\x93\x40\x82\x61\x18\xb2\xb5\x05\x72\xb7\x6c\x0b\xba\xd5\x8d\xa4\x36\x38\x77\xef\x7f\xbf\x25\xa9\x1f\xea\x6e\xf9\x05\x24\xc0\x1d\xc8\x87\xd8\xdd\xd2\xd1\x39\x47\xe7\xad\x87\xc3\x08\x53\x14\x91\x1e\x74\x1a\xcd\x46\x73\x8d\xd0\x61\xd8\x5b\x03\x10\x44\xf8\xb8\x07\x9f\x10\x45\x23\xec\x41\x1f\xb3\x09\x71\x31\xec\x7c\x3e\x58\x03\x98\x60\xc6\x49\x48\x7b\xd0\x6c\x34\x1b\xad\x35\x00\x0f\x73\x97\x91\x48\xa8\x87\xb6\x3e\x1c\x33\xd9\x49\x42\xae\x43\xcc\xfc\x1e\x8c\x85\x88\x78\x6f\x63\x03\x45\xa4\x21\x71\xe0\x63\x32\x14\x0d\x37\x0c\xd6\x00\x2a\x00\x09\x85\x9f\x22\x16\x7a\xb1\x2b\x9f\xfc\x0c\x1a\x9c\x1d\x18\x17\x68\x84\x17\x81\xec\x0b\x34\x22\x74\x64\x05\xd4\xdb\xd8\xf0\x43\x17\xf9\xe3\x90\x8b\xde\x9b\x66\xb3\x59\xed\x9e\xbd\xcf\x7b\x6e\x54\x5b\xb9\x31\x63\x98\x0a\xf0\xc2\x00\x11\xba\x16\x21\x31\x56\x1c\x90\x68\x6e\x04\x9a\x4b\x75\xae\xb9\xc4\xeb\xf2\xe1\xa4\xb5\x71\x8d\x86\xd7\x88\x6f\xfc\x83\x78\xff\xec\x29\x90\x23\x2c\xf4\x07\x80\x30\xc2\x0c\x49\xd8\x07\x5e\x4f\x3e\xff\x5d\xb6\x7d\x37\x3d\xf0\x92\xf7\x0c\xf3\x28\xa4\x1c\xf3\xb4\x03\x40\xad\xdd\x6c\xd6\xf2\xaf\x00\x6e\x48\x05\xa6\xc2\x7c\x04\x80\xa2\xc8\x27\xae\x02\xbd\x71\xc5\x43\x5a\x7c\x0b\xc0\xdd\x31\x0e\x50\xf9\x29\xc0\x7f\x32\x3c\xec\x81\xf3\xb7\x0d\x37\x0c\xa2\x90\x62\x2a\xf8\x86\x6e\xcb\x37\x14\x72\xc7\xf8\x26\xc6\x5c\x38\x46\xcf\x02\x8b\x54\x23\x60\xba\x15\x0c\xc3\x98\x7a\x30\x98\x02\xf1\x72\x02\xba\xcd\xd6\xd3\x10\xb0\xcf\x58\xc8\x9c\x52\x17\x7c\x87\x82\xc8\x37\x39\x9c\xfe\x75\x9b\xad\x7d\xfd\xb2\xfa\xce\x3e\x50\x0a\x6b\x23\xef\x3a\x93\x51\x3b\xb1\x18\x83\x08\xaf\x31\x05\xc2\x81\xd0\x09\xf2\x8b\x4c\xea\xbc\x10\x26\x75\xee\xcf\xa4\xce\x22\x26\x9d\x72\xcc\x80\x86\x02\x50\x2c\xc6\x21\x23\xdf\xb0\x07\x22\x04\xe4\xba\x98\x73\x10\x63\x0c\x89\xb6\x35\x4c\xce\x75\x5f\x08\xe7\xba\xf7\xe7\x5c\x77\x11\xe7\x0e\x43\xb8\x2e\xa8\xe2\x2d\x11\x63\xe0\x11\x76\xc9\x90\x60\x0f\x88\x07\xf8\x8e\x70\xc1\x73\xc6\x6d\x3e\x95\x61\x59\x91\x71\x9b\xcd\xe6\x7d\x19\x97\x77\x9d\x2d\x72\x14\xdf\x45\xd8\x15\xd8\x03\x2c\xf1\x82\xd0\x55\x66\x3f\xd5\x4d\x8e\xdd\x98\x11\x31\xcd\xc7\xae\xc3\x3b\x8c\x18\x66\x3d\xf8\xdf\xff\x4b\x1b\xc5\x41\x80\xd8\xb4\x07\x1f\xb0\x00\x54\x9a\x89\xdc\x1c\x7a\xd8\xc7\x02\x5b\x9d\x81\x7e\xb5\x9c\x3f\x78\x86\xf2\x5e\x86\xf4\xb7\xc3\x10\x76\x35\x62\xb3\x18\xbf\xa7\x28\x7e\xf5\x13\xaf\x7e\xe2\xd5\x4f\x14\x39\xd7\xd5\xaa\xf1\x00\x6f\x51\x00\xf0\x17\xf5\x19\x0f\x63\x62\x19\xc0\xfd\xfd\x47\xea\x1a\x34\xb8\x39\xde\x61\x29\x5f\x13\x21\x86\x02\x2c\x92\x54\x4c\x37\xd1\x84\xd4\x0a\x84\xe4\xed\x36\x88\x57\x5b\x2e\x67\xd1\x10\x23\x99\x35\xd9\x5c\x94\xcb\x30\x4a\x5c\x54\xf2\xba\x8a\x8c\x44\x87\xd0\x1e\xdc\xc4\x98\x4d\x0d\x96\x51\x14\xe0\x1e\x20\x3e\xa5\xee\x2c\x46\x7e\xc6\x6c\x18\xb2\x40\x69\x2f\x52\x69\x22\x10\x0a\x88\xea\x5e\x63\x16\xd2\x30\xe6\x10\x20\x4a\x55\xbe\x37\x4f\x98\xc4\x34\xc2\x3d\x18\x84\xa1\x8f\x11\x35\xde\x48\x9e\x13\x86\xbd\x1e\x08\x16\xe3\xb5\xfc\x21\xe6\xe2\x5d\xe8\x19\x7c\xb7\xe4\x38\x1e\x12\x28\x7b\x6f\x91\xfb\xf9\x52\x6f\x97\xf9\x65\xd3\xaf\xcf\x68\xea\x87\xc8\x2b\xca\xff\x2c\xe9\x3f\xed\x1f\xe3\x11\xa9\xaa\xdd\x02\x89\x4f\xbb\x59\x04\x5e\xfe\xed\x9f\xde\x0b\x6a\xda\xad\x02\x75\xc6\x5c\xd8\xe2\x9d\xf6\xf3\xca\x7f\xe7\xf1\x1e\xa0\x30\x6d\x21\x17\xc7\x09\x49\xf7\x35\x44\x26\xbc\x85\xb1\x83\xeb\xe2\xa8\x14\x53\xbd\x0c\x7b\xdd\x6d\x36\x77\xa5\x79\xc9\x25\xe5\x1e\x6e\xaf\x0c\x62\x26\x9f\xfe\x90\x31\x95\x6a\xa9\x6d\x36\x2f\x1b\xed\xd7\x68\xf4\x35\x1a\x9d\x1b\x8d\x66\x60\x3f\xa1\xbb\x1d\xdf\x0f\x6f\xb1\x77\x40\xb9\x40\xd4\xc5\xc7\x18\xb9\x63\xec\x3d\x60\xbc\x45\x30\xe7\x87\xc5\xc3\x90\x0d\x88\xe7\x61\x0a\x98\x88\x31\x66\x30\xc0\x2e\x8a\x39\x56\x8e\x35\x96\x2d\x08\x5f\x2a\x76\x86\xb0\xd8\x37\x40\x77\x24\x88\x03\xa0\x71\x30\xc0\x0c\xc2\x21\x90\x04\x3d\xd9\x0d\x09\x70\x11\x85\x01\x4e\xe2\x04\x55\x06\x14\x63\xc2\xf5\x98\x63\xc4\x61\x80\x31\x05\xa6\x49\x79\x99\x81\xf9\x77\x2c\xe0\x9c\x8c\x71\x1a\x8a\x60\x4f\x3a\xc2\x30\x66\x2e\x06\x2f\xc4\x9c\x3a\x42\x07\xe2\x2f\x32\x0e\xff\x8e\xb5\x9b\x1d\x0a\xf1\xac\xf0\x5b\x8b\x21\xa1\x23\x25\xbb\x3a\x84\x4b\xdc\xe8\xf2\xd1\xb6\x11\xbe\x2b\xdf\x22\xc3\x77\x8a\x6f\x93\x10\xde\x04\x67\x14\xf9\xb3\x2e\xc7\x58\xc4\x8c\x72\x40\xe0\x13\x2e\xa4\xc2\x14\xaa\xe5\xdc\x16\x64\xcb\x96\xaa\x15\x5f\x05\xcb\x65\xd6\x0d\x8a\x9c\x9b\x8f\xd2\x0f\x15\x29\x33\xc2\xf9\x48\xcc\x58\xab\x12\xbe\x14\x68\x78\x87\xbc\x14\xef\x17\xa0\x09\x07\xda\x77\x7e\x91\x89\xd1\x03\x42\x1c\x0b\x18\x67\x76\xd0\xb2\x82\x2f\x7f\xbe\x9c\x7b\xe4\x08\xe7\xaf\x1b\xb4\x3c\xb8\x84\x56\xf6\x3a\x2b\x15\x42\x9e\x33\xab\x1f\xd5\x4d\xd9\xab\x22\x36\x20\x46\x91\x26\x42\x23\x63\xae\x16\x36\xe7\xe4\xdb\x2a\xcd\x43\xe6\x61\xf6\x6e\xba\xca\x00\x18\x31\x77\xec\x2c\x2a\x1c\xb9\x7e\x18\x7b\x17\x11\x0b\x27\xc4\xcb\x08\x9e\xe1\x0b\x19\xc1\x13\xac\x45\x2b\x75\x3e\x3c\x8e\xa2\x90\x49\x91\x51\x80\x20\x03\xd4\x98\xe5\x1b\x77\x65\xbb\xcf\x69\xb3\x07\xfa\x48\xa7\xdd\x6c\x3a\x33\x05\x3a\x45\xd9\x5b\x8c\xee\x53\x88\x78\x81\x13\x45\xbf\xe9\x74\x9b\xad\xd9\x74\xbd\xfa\x01\xcd\xa4\xcd\x79\x93\xff\x6a\xcd\x9e\xc0\x9a\xad\x62\x6a\xd4\x06\x9b\x0d\xa6\x8a\x8b\x0f\xb0\x3b\x09\x00\xf9\x50\xf9\xbc\x19\x1a\xbe\x9c\x3d\xd2\xa5\xce\x67\x63\x95\x52\xe2\x9e\xcc\x3a\x69\x7e\xbc\xda\xa6\x57\xdb\x94\xfd\xfd\x30\xdb\xb4\x60\x39\xac\xd8\xf8\x87\x1a\xb2\xe4\x3b\x72\xdd\x30\xa6\xa2\x6a\xbb\x96\x31\x09\x3f\x6c\x7a\x93\x3d\xa0\x3b\x1a\xd9\xa2\x2a\x97\xc4\xf2\x63\x6a\x8f\x92\xf2\x61\x4a\xe0\x6c\xd5\x7f\xae\x42\xfa\x94\x35\x75\xa7\xdb\xec\xbc\x10\x26\x3d\x8b\xf4\x74\xb6\xcd\x7c\xae\x8c\x7b\x01\xfb\xd9\x2a\x61\x4e\xd1\x0c\xf0\x72\x94\xa5\x54\xdf\xaa\xf7\xe6\x6e\x82\xc5\x2b\xed\x25\x10\x95\xf2\xde\x0f\x58\x76\x2f\x52\x6a\x5d\xfe\x9d\x35\xb5\x7c\x49\xb9\xc9\xa6\xd3\x3a\xd6\xbd\x57\xca\x9f\x8b\x93\x58\x5e\x13\x8a\x9e\x70\x65\x6d\x28\x0e\xbb\x48\x31\xca\xb2\x95\x2c\x53\xbd\x7a\xa7\x57\xef\xb4\xb2\x77\xf2\xed\xa1\xce\xab\x2f\xfa\xde\xbe\x48\x2b\x6d\x51\xf1\xcb\xce\x28\x5b\xa9\xab\xce\x8e\xb3\x4a\x60\xae\x2a\x0c\xc9\x2c\x56\x77\xf1\xd9\xa6\xde\xb2\xbf\xb9\xb0\xa0\x9e\x9a\x1e\xb5\xcf\x52\xbe\x18\x91\x89\xd4\x33\xdb\xee\xf0\x07\xe6\x36\x76\xff\xd0\x7d\x26\x42\x59\x60\x94\x57\xda\x08\xfe\x6a\x88\x15\x5b\xd0\xbf\x8b\x21\x7e\x00\x93\x9e\x7b\x9a\x00\xff\xf8\xe7\xbf\xad\xa9\xd5\x6a\x39\xdf\xd4\x26\x36\xee\x31\x0c\xed\x06\xc3\x1c\x8b\xba\xcb\xb0\x87\xa9\x20\xc8\xe7\xc9\x2c\x99\x19\xc4\x77\x31\x8a\x2f\x2d\x68\x46\x75\xc5\xaa\xef\x1c\x2e\xab\x31\xc0\x98\x8e\x7b\x0b\x92\x82\x54\x1c\x7c\x97\x61\xaf\x92\x44\x56\x46\x84\x61\xc8\x6c\xfe\x73\x2d\xa7\x4e\x62\x91\x30\x54\x23\x74\x34\xb8\xc2\xae\x38\xc6\x43\xcc\x30\x75\x33\x55\xd3\x3b\xc2\x43\xf5\x32\x95\x25\x26\xb1\x14\xc4\xe4\x31\xf1\x4c\xae\xea\x4e\x5c\x30\x42\x47\xd9\xe3\x6b\x42\x17\x37\x1a\xcb\x79\x98\xd7\x48\x26\xcc\x66\x5a\xac\xf2\x3b\x83\xa3\x72\x14\xe3\x6b\x84\x46\xd8\xf8\xca\xc9\x37\xf3\xab\x08\x05\xf2\x8d\xef\x44\xe0\x80\xaf\x46\xf8\x52\x54\x49\x2c\xaa\x8d\x08\x15\x78\x64\x6c\xc9\x97\xc8\x2d\x6e\xa5\x70\x9e\xdf\x4c\x39\x9a\xb4\x09\xf2\xfd\xa3\xe1\x22\xa5\x4f\x55\xab\x24\x04\x66\xbd\xd7\xc2\x8f\x59\x3c\x01\x65\x0d\xbc\x8a\xb9\xb6\xf2\x06\xd4\x44\x22\x8b\x6d\x98\xd9\x3c\x53\x92\x8b\xa2\xd8\x59\x3b\x29\x66\x98\x52\xb3\x12\x43\x64\xc7\x07\x70\x41\x09\x94\x1d\x45\xc4\x18\x9a\x96\xde\x58\x9b\xc3\x5c\x04\x15\x79\x1a\x43\x73\x3b\xd8\x13\xcf\x3e\x17\x48\xc4\x33\x08\xb7\x4c\x68\x71\x85\x72\xe9\x6e\x41\xec\x0b\x72\x81\xbe\xd9\x3b\x54\x4f\xb1\x40\xb2\xae\xb7\xbc\xa0\xdd\xd2\x15\xd0\x51\x47\x75\x96\x6d\x3c\x08\x43\xc1\x05\x43\x51\x5f\xdd\xc3\xf0\xab\xe1\xab\x17\xb3\x4b\x17\x60\x2e\x50\xa5\xcb\x30\x64\x01\x12\x3d\xf0\x90\xc0\x75\x41\x02\xbc\x2c\xc8\x38\xf2\x1e\x17\xa4\xf5\x78\xab\x4d\xf8\xe6\x9d\xd7\xa8\xca\xf5\xf7\x56\x64\x2b\xda\xca\xc6\x43\xad\x8c\x47\xad\xd0\x48\xd9\x78\xa8\xb5\x8a\x4f\x95\x4d\xaf\x3c\xd5\x36\xbc\xf2\x58\xaa\xff\x32\x15\xd7\x65\x8f\xb8\x7c\x5f\xab\x54\x62\x7f\xfe\x37\x7f\x22\x4c\x9c\xab\xf3\x9b\x9c\xd7\x4a\xc1\x16\x6f\x2e\x51\x10\xb2\xd8\x26\x3b\x07\x18\x7a\x53\xe0\x98\x0a\x99\xbf\x24\x07\xf2\xe0\xf3\x51\xff\x64\x4e\x94\x20\x55\x75\x35\x3f\x3f\xdb\x44\x55\x36\xa3\x17\x37\x13\xc0\xed\x18\x33\x6c\xec\xa5\x76\xfd\x98\x0b\xf9\x9c\xf8\xbe\xb9\xeb\x9f\xd0\x45\x61\x84\xcd\xde\x15\x39\x84\x85\x3e\x39\x20\x42\x55\xf2\x96\xff\xbb\x21\x1d\x92\x51\x6c\x45\x41\x84\x12\x01\x05\x76\xe7\x6b\x65\xf4\xb2\x01\x2d\xdb\xb7\xc2\xd0\x8e\xa4\x5c\xb6\x48\x37\x84\x14\x46\x6a\xc0\x81\x80\x20\xe6\x42\xa2\xc3\x93\x1a\xa0\x1f\xde\x62\x56\x77\x11\xc7\x80\xfc\x68\x8c\x68\x1c\x60\x46\x5c\x70\xc7\x88\x21\x57\x66\x20\x10\x32\x70\x9c\xba\xe3\xac\x4b\x8f\xc2\x92\xfa\x0f\xa2\xba\xfd\x00\x0b\xb3\xf5\x3a\x20\xea\x01\xa6\x5e\xb1\x55\x05\xaa\x6e\xe7\x22\xaa\xd2\xdf\x01\x06\x3f\xa4\x23\xc9\x8c\x31\xa2\xd0\x69\x1b\xc3\x37\x9c\x45\x33\x52\xf5\x27\x96\xa3\x09\xb2\xc9\x23\x49\x41\x65\xeb\xda\x53\xd9\xc2\x0a\x22\x4f\x6f\x0c\x0b\x28\xbd\x14\x6b\x58\x40\xba\x96\xcf\x71\xbe\x01\xe8\x49\x67\x38\x47\xe3\x99\xcc\xef\xcc\x93\xb6\xcf\x77\x76\x35\xca\xb5\xaa\xfe\x5a\x9d\x9c\xb3\x5b\xdc\x3e\xe7\xac\x90\x7b\x16\x01\x1d\x50\x8f\xb8\x48\x24\x1b\xf8\x24\xc9\xda\x34\x13\x9e\x08\x42\x03\xce\x12\xe3\xe3\x38\x05\xc4\x1c\x07\x7c\x42\xaf\x17\x9b\x3f\x32\x67\xf8\x53\x4a\x6e\x62\x0c\x44\xd5\x24\x86\x44\x9f\x7b\x93\x98\x24\x83\x2f\x04\xee\x11\x1e\xf9\x68\x7a\x31\xdf\xed\x1c\x1a\x2e\xa7\xe4\x78\x65\xa0\x90\x00\x81\x28\x66\x51\xc8\xf1\x12\x26\x7d\xfe\x70\xbf\xc6\x01\xa2\x30\x64\x04\x53\xcf\x9f\x5a\xa8\x2b\xe2\xb0\xae\x90\x48\x44\x18\x2e\xd1\x2d\xbf\x5c\x8c\x01\xa6\x68\xe0\xe3\x39\xac\x3d\x1b\x63\x75\x3e\xd1\x42\x33\xe1\x69\x77\x4d\x3e\x8e\xfc\x70\x4a\xe8\x48\xba\xc3\xa3\xfe\x5e\xe6\x8f\xab\x48\x14\xbd\xbd\x2d\x68\x4a\x00\x97\x8d\x94\x5d\x8c\xf7\xf2\x6f\x92\x35\x28\xf5\x83\xea\xb3\xfb\x74\x32\xae\x71\x76\x9c\x17\x27\xdc\x09\xff\x6c\x42\x5d\x92\xb2\xc3\x06\xfc\x41\xd8\x88\x50\x82\x1e\x5b\xda\x12\x24\x1e\x4b\xca\xf4\x60\x43\x14\xfb\xa2\x07\x43\xe4\x73\xbc\xa4\xf8\x15\x8b\xa2\x76\x09\xcc\x2e\x61\x2c\x6e\x5b\x00\x42\xe1\xd3\x4e\xbf\xde\xef\x1f\x65\xa9\x84\x0e\xc9\x76\x93\x90\x4c\x3e\x45\xb1\x18\xcb\xb9\xd5\xa5\x6b\xe7\x3e\x3e\xf8\xf1\xaa\x29\xd5\x2a\x57\x91\x52\x7d\x95\x23\x8c\x30\xc5\x4c\x91\x18\xa7\xe2\x99\xed\xce\x2e\xd6\x81\xcb\x35\xf3\x95\x4a\x1a\xc5\xb1\x97\x06\x65\x76\x7b\x1c\x88\xae\x4f\x30\x15\x07\x7b\x2b\x94\x99\x64\x87\x3e\x76\x59\x75\x11\xe0\xd1\xca\x18\xd6\xc5\x82\x9a\x45\x6a\x4b\x95\xba\x92\xf0\xda\x73\x5d\x99\xcf\xcd\x58\xa4\x77\x1e\x35\xdd\x5d\x2d\xd7\x9b\x23\x5e\x76\xeb\x67\x97\x85\xe2\x20\x3b\xe6\xf7\x59\x2b\x1a\x0b\x86\xaa\x4c\xdf\x0a\x53\x67\x2b\x45\x55\x37\xf5\x1e\x18\x61\xac\x5d\x8e\xff\x72\x46\x63\x96\x5e\xde\x53\xcd\x9f\xce\x06\x55\x67\x7b\x66\x32\x76\x8f\x04\xab\x0a\xbd\x9a\x20\x55\x52\x91\x15\xd6\x29\x53\xe9\x5c\x21\x59\x2a\x07\x5b\x73\x99\xf9\xa4\x99\x95\x9d\x54\xc9\xc0\xf2\x4a\x77\xae\x07\xfa\x2a\xad\x6c\x2b\x48\xa5\x52\xa3\x25\x9f\x61\x37\x64\xd9\xe2\x7f\x69\x79\xda\xc2\x0c\x42\x7b\x10\x21\x31\x2e\x9b\xdf\x7c\xcf\xa9\xb9\xfa\xa7\x71\x30\x56\x25\xcb\x77\x7e\x15\x6f\xf6\x42\x23\x0c\x84\x7a\xf8\xae\x02\xdd\x8c\x96\x96\xc0\xb2\xba\x2a\x5e\x5e\x93\x9c\x20\x3f\x36\xb2\x77\x73\x31\x52\x23\x6d\xac\x9d\xce\x45\xfa\x30\xbf\xe5\x44\x4e\xb9\x8c\xb7\x30\x72\xc7\x26\xd1\x8f\x48\x46\x79\xd1\x34\x23\xa3\xd9\xd4\x84\x24\x27\x78\xad\x36\xfa\xff\xeb\x59\xcf\x7e\x72\x79\x9f\xce\x24\x54\x27\x18\x4c\xc1\x65\x44\x60\x46\x50\x43\x49\x08\x9f\x52\x81\xee\xb2\x14\x23\x13\x35\x20\xdc\x40\x28\x20\x3e\x52\xb5\x55\x51\xea\x82\xe1\x22\x05\x7c\x01\xae\xaf\xee\x87\x91\xf9\x10\x85\xfe\x97\x8f\x6a\xcd\x0c\x07\x98\x8a\xfc\xdc\xf8\xbe\xe4\x9b\x62\x74\x7a\x45\x8c\xea\xaf\xaf\x88\x41\x74\x9a\x82\xbd\x36\x2a\xe8\x1c\x86\x04\xfb\x1e\xcf\xa1\xbc\xcf\x93\x83\x75\x39\x1b\x1a\x07\x11\x02\x4b\x4e\xc4\x49\x25\x84\xa4\x70\x6e\x0c\x20\xc6\x98\xb0\xc4\xfc\x66\xc0\x2e\x2f\x2f\xf9\x8d\x5f\x88\x13\x00\x71\xd7\x7c\x9f\x37\x3e\x62\xf7\x1b\x0f\x2e\x10\xf5\x2e\xb2\x88\xdd\x43\x62\x09\x14\xd6\x8d\x75\xb1\xd9\x28\x1d\x68\x8e\x99\x53\x47\x1d\x91\xe6\xa2\xde\x3a\x84\x0c\x88\x6e\xa3\x44\x49\xe5\x3a\x41\x24\xa6\xeb\xf2\x59\x9e\xb8\xe8\xa8\x8c\xc7\xbe\xe0\x59\x0d\xd7\xa0\x45\x22\xd5\xc8\x84\x36\xf2\x43\x0f\x17\x76\xa1\x57\x05\xb9\x24\xa7\xa6\x2c\xa7\x14\xd6\x66\xa8\x9f\xd6\xcf\x04\xc0\x43\x55\x8c\x8b\xa9\x8f\x7b\x6a\xd9\x4f\x1b\x02\x75\x9e\xdd\xae\x3e\xb9\xf6\xa8\x46\xb9\xb6\xe4\xfc\x5e\xa0\x36\x0b\xd4\x45\x55\xcd\x8b\xba\x92\x8f\x59\xd0\x19\x48\x2e\x7e\x4a\xa4\x5f\xca\x9d\x8e\x61\x14\x62\x88\xe1\x5e\x69\x09\x67\x5d\xb1\x6d\x5d\xaf\xf1\xae\xa7\x99\x2d\xa2\x5e\xb2\x78\x9d\x43\x94\xee\x07\x31\x24\x42\xc6\x25\x20\xb8\xfc\xef\xff\xb9\x5c\x87\xcb\xb7\x97\x52\x56\x2e\x3f\x1e\xfc\xbe\x7f\x99\x2b\x5b\xda\xe9\x2a\x24\x34\x69\xbe\x73\xb8\x77\xa9\x00\x5f\x1e\x1d\x5f\xae\xc3\x38\xbc\xc5\x13\x9d\x4f\x33\x25\x5e\x08\x7c\x12\x10\xb5\x24\x12\xa0\x3b\x18\x86\x31\x4b\xba\x17\x89\x50\x53\x6e\xb0\x76\xbf\x22\x43\x39\xd7\x0d\x65\xb3\xdc\x54\xaa\x04\x0a\xdf\xc4\xc8\x87\xcb\x60\x5a\x57\x2d\x34\x8a\x09\x1b\x92\x77\xe8\x96\x5f\xae\x1b\xba\xc0\xc7\x61\xec\x7b\x30\x28\x69\x63\x51\x15\xdf\x42\x0a\x52\x2f\xb4\x14\xb8\x0e\x6f\x01\xdd\x72\xbb\x6a\x2e\x40\x9a\x08\xae\x07\x50\x4b\x41\x84\x8e\xf4\xe3\xcb\x60\xba\x3a\x8e\x3e\xb9\xc6\x10\x4c\xff\xde\xde\xfc\x2e\x56\x42\x19\xb8\xcc\x30\x73\xc3\x68\x20\x91\xdf\x26\x36\x46\x1c\x22\xcc\x02\xc2\xb9\xe4\xb9\x08\x81\x63\x9c\x19\x13\xa6\xee\x40\x32\xef\xfb\xca\x3e\x1c\x86\x02\x37\x52\x1c\xb5\x7b\xc8\x37\xba\xae\x4b\x7f\xa2\x77\x32\x96\x41\xcd\xb1\x47\x89\x8b\x57\x82\x36\xc3\xca\xd8\x2d\x8a\xc5\x23\x17\x0c\x06\x94\xed\xd8\x12\xe2\x51\xbb\xaf\xb5\x4a\xb7\xd8\xa9\xec\x39\xc5\x29\xd9\x63\x67\xc2\xc4\x3d\x18\xa8\xa7\xc9\x43\xfd\xe5\x7d\xb2\xd3\xe1\xb7\xb3\x93\x42\xb2\x3c\x16\x22\x5a\x2b\x53\x5a\xba\xf4\x33\x05\xaf\x49\xcd\x30\x4e\xd6\x07\xa1\x16\xf3\x3a\x46\x5c\xd4\x8d\x45\x90\xd2\x8a\x32\xd4\x0c\xca\xd3\x09\xa9\xa5\x1b\x3e\x23\x22\xb2\xf5\xf2\xd2\xcd\xa0\x8b\x86\xc6\x71\xfd\x16\x3f\xd2\xd0\x96\x0d\x07\x33\x86\x27\x32\xc5\x69\x91\xfe\xf9\xd6\xf1\x97\xce\x6f\xbf\x1f\xbc\xf9\xd2\x3c\x3a\x09\xae\xbe\xbc\xf7\x3a\xa1\xfb\xfe\x78\x94\x0f\x97\xa4\x43\x4a\x24\xf2\xa7\x63\x1d\xfc\x2f\xf3\x83\x21\x4b\x8d\x92\xec\x48\x82\x9a\xb4\xe6\x3e\x16\x78\x59\x6e\x64\x8b\xee\xa6\xba\xcc\x9f\x59\xbd\x6d\x08\xa0\x86\x22\x72\xa1\x90\xbc\x48\x50\x9f\xc3\xe4\xfc\x95\x6d\x6b\x90\xd9\xb2\xde\x22\x7c\xba\xc5\x6e\x3a\x57\xd7\xe4\xcd\x4d\x33\x14\xc1\xd5\xcd\x50\x12\x3c\x64\xa3\x06\x8a\x22\xde\x08\x78\x7d\x20\xc4\xa8\x79\x45\x5b\xdb\xcd\x71\xd4\xb8\xdb\x8c\xdf\x34\x78\xab\xe1\xe1\x89\xfe\x65\x98\x90\x19\xac\x31\xb6\x13\xa9\x4b\x63\x9b\xf5\x56\xb3\xde\xdc\x3c\x69\xb5\x7b\x9b\xad\x5e\xbb\xdb\x68\x6e\x76\x5a\xdd\xf6\xd7\xbc\x87\xb1\x5b\xa8\xd2\x63\xab\xd7\xd9\x6a\x74\xb6\xda\xed\xe6\x9b\xaf\x96\x45\xaf\xf9\x52\x63\x5b\x5d\xae\x15\x65\xca\x26\xaa\x85\x67\x85\xd2\x3a\xd4\x76\x02\xf4\x2d\xa4\x70\x86\x07\x69\x3e\x6f\xb4\x4d\x8b\xdf\xf9\xdc\x56\x57\x19\x97\x40\xd5\x5c\xe2\xcb\x10\xb5\x08\x46\x09\xb5\xd3\x3e\xec\x23\x2e\xd6\xc1\xa8\xd8\xcf\xc3\x6d\x5e\x7d\x6a\x06\x96\xc9\x48\xc1\xb4\x8e\xa2\xa8\xce\x0d\xf0\x85\x48\xae\x56\x3e\x68\x33\x0c\x19\x04\x53\x40\x51\x64\x2b\x7c\x2d\xa3\xfa\x15\x05\x2f\x82\x58\x4d\xd3\xcb\xfb\xde\x5b\x15\x11\x78\x30\x85\x60\x56\xae\xa0\xd6\xdf\xa9\xb7\xda\xf2\x5f\xf9\x6d\x52\x3e\x96\x00\xe5\x87\x79\x75\xc1\x47\x60\x93\x59\xd9\x78\x41\xec\x9a\x7d\x2b\xb1\x95\x09\xcd\x4e\x85\x0d\xc6\xbe\xd6\x65\xa9\xd6\x37\x12\x6f\x14\xa0\xa9\x6d\xc8\x50\x3b\xda\xfd\x54\xdf\xff\xb3\x5e\x78\x95\x6c\x3a\x86\x5a\xdf\xb8\x25\x3d\xb9\x3f\xfd\xa7\xec\x0e\xcc\x42\x20\xca\x7f\x96\x81\x56\x4c\xb3\x8b\x63\xd6\x65\x24\xa7\xef\x59\x7f\xab\x36\x5c\x65\x11\xa3\xe1\x0d\xcc\xdd\xca\xd2\x27\x9e\x1d\x90\xe0\xe6\x83\xcb\xf6\xe2\x8f\x5b\x2d\x74\x7a\x77\xf0\xf5\xe6\xdd\xc9\xcd\xe1\x31\xca\x78\x37\xe7\xca\x43\x1b\xff\xda\x8f\xca\xbf\x76\x95\x7d\x9f\x3e\xec\xd5\xfb\xfb\xc7\x7f\xd4\x77\x3e\x1f\xd4\xdb\x36\x1e\xbe\x47\xc4\xd7\x27\x88\x22\xc4\x78\x31\x65\xe9\xc1\xa9\x32\x65\xf2\xad\x3a\xff\x59\xe4\xa9\x5e\x6f\x2b\x7b\xca\x1e\x94\x06\xed\xc1\xa2\x31\x8c\xeb\x7c\x42\x3f\x0e\xa8\x0e\xf5\x25\xf4\x24\x24\x05\x87\x78\x4e\x03\xfa\xb6\x76\x5c\xe7\x88\xda\xad\xa7\xb9\xa1\x3d\x63\x4c\xf3\xc3\x2f\x3a\xf2\xd6\x73\xd5\x03\xe2\xc1\x5b\x68\x99\xdc\x29\xcf\xbc\x7f\xb6\xf7\x21\x9e\x0e\x0e\xd8\x3e\xbd\x63\x3b\x38\xd8\x6e\x77\x47\x37\xd7\xd7\x64\x6f\x92\xce\x7c\xf9\x9e\x5c\xdb\x6c\x77\x9b\xdd\x55\x66\x7b\x84\x04\xbe\x45\x53\x63\x82\x0b\x00\x92\x19\xfe\xb0\x73\xb2\x7f\xb6\x73\x5e\x2f\xbc\xcb\x66\x77\x99\x2b\x76\x33\x12\xac\x3f\x1f\x61\x21\xc4\xd9\x76\x4a\x64\x28\x2a\xee\x23\xb2\xdb\x65\x7a\x12\x7d\xdf\xae\x90\x92\x04\xb0\x09\x01\x3a\xaf\xf4\xde\x3a\x2d\xf2\x7b\xc7\x8b\xff\x38\x3f\x98\x4c\x36\xcf\x27\x1f\xfd\xe9\xb7\x56\xf0\xe1\xb8\xf3\xdb\xf4\xe6\xd0\x51\xdb\x04\xd5\xef\xb3\xcd\x98\xd8\x16\x39\x3f\xda\x1e\xb5\x47\x5b\xbf\x9e\x78\xa7\xbf\x9f\xa2\xf6\x35\xff\xf5\x4d\xfb\xfa\xcb\x5e\x67\x9a\xf0\xa4\x7c\x90\xcf\x6a\x04\xab\xae\xe0\x01\x36\xb0\x35\xd3\x04\xb6\x2c\xf3\x9b\xeb\xe7\x04\x33\x32\x9c\xca\x14\x48\x9f\xa0\xec\xa9\xbb\x7a\x65\xda\x97\x1d\x14\xd4\xd7\xbf\xeb\xf3\x95\x19\x6b\xe6\x98\xbb\xf3\xce\xe9\x78\x7f\x7c\x1b\xfc\xf9\x2e\x3a\xfb\x3c\x3c\x68\xfb\x87\xf8\x3a\xf2\xba\x5f\xf7\x52\x89\x29\x9f\x37\xb7\xc9\x4a\x77\x19\x59\x59\x86\x33\xdd\x12\x5f\x0a\x56\xa6\x5b\x61\x8d\x3a\x26\xe9\x0c\xc3\xb0\x3e\x40\xcc\x59\xf6\x02\xf0\xc6\x2c\x49\xf1\xcf\x3b\xa7\x64\x7f\xfc\x8d\x1a\xcc\xb8\x8a\xbc\xee\xf9\x6e\xca\x8b\x65\xaf\x45\x7f\xc6\x4c\x1a\x23\x9e\x5e\x56\x0e\xc8\x72\xf9\xf9\x16\xa0\xa4\x48\x96\x5d\x83\xbe\x80\x61\xd7\x77\x92\x61\x7f\x7c\xc6\x07\xed\xf0\x10\x5f\x79\x9d\x3f\xdf\xa9\x0e\xd5\x93\xa1\x36\xb6\xfc\xf2\x68\x76\xe6\x97\xb2\x56\x15\x18\xf3\x4b\x95\x31\x34\xff\x4d\x20\x5c\x18\xb4\x6c\x41\xf0\xfe\xc7\xc9\xfb\x5f\xae\x3e\x7d\x39\xdf\x3a\x1f\x8d\x87\x9f\x7e\x19\x7d\x38\xe6\xbf\x4e\xf6\xcf\x52\x3a\x97\xb6\xaa\xdf\x91\xda\xc4\x84\x54\xe9\x74\x74\xbd\x49\x1d\x7c\x55\xbf\x2d\x3a\xa5\x2e\x97\x41\x72\xda\xa3\x07\xc3\xcc\x79\x7b\xc9\xd1\xd7\xb4\x0d\xbe\x13\xf5\x42\x72\x7b\xd7\xec\xf8\xd4\xf3\x83\x9b\xe6\xcd\xd0\xdd\xe6\x44\xa0\x4d\xee\x5f\x4d\xde\x98\x27\x4f\xa4\x57\x4f\xb7\x50\x2b\x0e\x8e\x36\xbd\x37\x6f\x6e\x9a\x3e\x73\xbd\x49\x77\xb4\x8d\xfc\xc1\x36\xf7\x87\x23\x7a\xd5\xf1\xc6\x03\x7e\xf5\xf7\xff\xf8\x69\xff\xcf\x93\xe3\x1d\xf8\x2f\x4d\x5c\x43\x71\xe5\x6d\xbe\x81\xcb\x80\x4d\x38\x38\x4e\xb7\xd9\x75\x9c\x75\x45\xb8\x7e\xb0\xfb\xf1\xb4\x7f\xb2\x7f\xdc\xaf\x7f\xfa\xf0\xe9\xa4\xae\x5e\xab\x02\x56\x36\x93\xe6\x6e\x30\xd5\xa3\x35\xda\x0c\xd9\x66\x73\x42\xe2\xe6\x76\x88\xe5\x54\x8d\xd9\xb5\xdb\xde\xf2\x46\x43\x71\xd5\x42\xae\x53\x38\x3e\x9b\xee\x3e\x52\xfd\xe6\xd2\xe2\x18\x2e\xe9\x67\x67\xb6\x53\x3a\xe1\x67\x6c\xba\x45\xf9\xcd\xa0\xcd\x0f\x83\xf7\x57\x9b\x83\x3f\xa3\xbd\xed\x5d\xb4\xf6\xaf\x00\x00\x00\xff\xff\x30\x6e\x58\x40\xf9\x76\x00\x00")

func managedServicesApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedServicesApiYaml,
		"managed-services-api.yaml",
	)
}

func managedServicesApiYaml() (*asset, error) {
	bytes, err := managedServicesApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-services-api.yaml", size: 30457, mode: os.FileMode(420), modTime: time.Unix(1608653925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"managed-services-api.yaml": managedServicesApiYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"managed-services-api.yaml": &bintree{managedServicesApiYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

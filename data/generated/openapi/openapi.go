// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package openapi generated by go-bindata.// sources:
// openapi/managed-services-api.yaml
package openapi

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _managedServicesApiYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\x6b\x57\xdb\xb8\xb6\xdf\xf9\x15\xfb\xe6\xdc\xb3\x3c\x73\x17\x09\x79\x01\x6d\xd6\xea\x07\x0a\xb4\x65\xa6\xa5\x2d\x81\x52\x7a\xd7\x5d\x54\xb1\x95\x44\x60\xcb\x46\x92\x03\xe9\xb9\xe7\xbf\x9f\x25\xc9\x0f\xd9\x56\x5e\x40\x0b\xcc\xc0\x7c\x98\xda\x96\xb6\xf6\xde\xda\x6f\x3d\x12\x46\x98\xa2\x88\xf4\xa0\xd3\x68\x36\x9a\x6b\x84\x0e\xc3\xde\x1a\x80\x20\xc2\xc7\x3d\xf8\x80\x28\x1a\x61\x0f\xfa\x98\x4d\x88\x8b\x61\xe7\xd3\xc1\x1a\xc0\x04\x33\x4e\x42\xda\x83\x66\xa3\xd9\x68\xad\x01\x78\x98\xbb\x8c\x44\x42\xbd\xb4\xf5\xe1\x98\xc9\x4e\x12\x72\x1d\x62\xe6\xf7\x60\x2c\x44\xc4\x7b\x1b\x1b\x28\x22\x0d\x89\x03\x1f\x93\xa1\x68\xb8\x61\xb0\x06\x50\x01\x48\x28\xfc\x16\xb1\xd0\x8b\x5d\xf9\xe6\x77\xd0\xe0\xec\xc0\xb8\x40\x23\xbc\x08\x64\x5f\xa0\x11\xa1\x23\x2b\xa0\xde\xc6\x86\x1f\xba\xc8\x1f\x87\x5c\xf4\x5e\x34\x9b\xcd\x6a\xf7\xec\x7b\xde\x73\xa3\xda\xca\x8d\x19\xc3\x54\x80\x17\x06\x88\xd0\xb5\x08\x89\xb1\xe2\x80\x44\x73\x23\xd0\x5c\xaa\x73\xcd\x25\x5e\x97\x2f\x27\xad\x8d\x4b\x34\xbc\x44\x7c\xe3\x5f\xc4\xfb\x77\x4f\x81\x1c\x61\xa1\xff\x01\x10\x46\x98\x21\x09\xfb\xc0\xeb\xc9\xf7\x7f\xca\xb6\xaf\xa7\x07\x5e\xf2\x9d\x61\x1e\x85\x94\x63\x9e\x76\x00\xa8\xb5\x9b\xcd\x5a\xfe\x08\xe0\x86\x54\x60\x2a\xcc\x57\x00\x28\x8a\x7c\xe2\x2a\xd0\x1b\x17\x3c\xa4\xc5\xaf\x00\xdc\x1d\xe3\x00\x95\xdf\x02\xfc\x37\xc3\xc3\x1e\x38\xff\xd8\x70\xc3\x20\x0a\x29\xa6\x82\x6f\xe8\xb6\x7c\x43\x21\x77\x84\xaf\x62\xcc\x85\x63\xf4\x2c\xb0\x48\x35\x02\xa6\x5b\xc1\x30\x8c\xa9\x07\x83\x29\x10\x2f\x27\xa0\xdb\x6c\x3d\x0c\x01\xfb\x8c\x85\xcc\x29\x75\xc1\x37\x28\x88\x7c\x93\xc3\xe9\x5f\xb7\xd9\xda\xd7\x1f\xab\xdf\xec\x03\xa5\xb0\x36\xf2\xae\x33\x19\xb5\x13\x8b\x31\x88\xf0\x12\x53\x20\x1c\x08\x9d\x20\xbf\xc8\xa4\xce\x13\x61\x52\xe7\xf6\x4c\xea\x2c\x62\xd2\x09\xc7\x0c\x68\x28\x00\xc5\x62\x1c\x32\xf2\x03\x7b\x20\x42\x40\xae\x8b\x39\x07\x31\xc6\x90\x68\x5b\xc3\xe4\x5c\xf7\x89\x70\xae\x7b\x7b\xce\x75\x17\x71\xee\x30\x84\xcb\x82\x2a\x5e\x13\x31\x06\x1e\x61\x97\x0c\x09\xf6\x80\x78\x80\x6f\x08\x17\x3c\x67\xdc\xe6\x43\x19\x96\x15\x19\xb7\xd9\x6c\xde\x96\x71\x79\xd7\xd9\x22\x47\xf1\x4d\x84\x5d\x81\x3d\xc0\x12\x2f\x08\x5d\x65\xf6\x53\xdd\xe4\xd8\x8d\x19\x11\xd3\x7c\xec\x3a\xbc\xc6\x88\x61\xd6\x83\xff\xfd\xbf\xb4\x51\x1c\x04\x88\x4d\x7b\xf0\x16\x0b\x40\xa5\x99\xc8\xcd\xa1\x87\x7d\x2c\xb0\xd5\x19\xe8\x4f\xcb\xf9\x83\x47\x28\xef\x65\x48\xff\x38\x0c\x61\x57\x23\x36\x8b\xf1\x7b\x8a\xe2\x67\x3f\xf1\xec\x27\x9e\xfd\x44\x91\x73\x5d\xad\x1a\x77\xf0\x16\x05\x00\x7f\x53\x9f\x71\x37\x26\x96\x01\xdc\xde\x7f\xa4\xae\x41\x83\x9b\xe3\x1d\x96\xf2\x35\x11\x62\x28\xc0\x22\x49\xc5\x74\x13\x4d\x48\xad\x40\x48\xde\x6e\x83\x78\xb5\xe5\x72\x16\x0d\x31\x92\x59\x93\xcd\x45\xb9\x0c\xa3\xc4\x45\x25\x9f\xab\xc8\x48\x74\x08\xed\xc1\x55\x8c\xd9\xd4\x60\x19\x45\x01\xee\x01\xe2\x53\xea\xce\x62\xe4\x27\xcc\x86\x21\x0b\x94\xf6\x22\x95\x26\x02\xa1\x80\xa8\xee\x35\x66\x21\x0d\x63\x0e\x01\xa2\x54\xe5\x7b\xf3\x84\x49\x4c\x23\xdc\x83\x41\x18\xfa\x18\x51\xe3\x8b\xe4\x39\x61\xd8\xeb\x81\x60\x31\x5e\xcb\x5f\x62\x2e\x5e\x87\x9e\xc1\x77\x4b\x8e\xe3\x21\x81\xb2\xef\x16\xb9\x9f\x2f\xf5\x76\x99\x5f\x36\xfd\xfa\x84\xa6\x7e\x88\xbc\xa2\xfc\xcf\x92\xfe\x93\xfe\x11\x1e\x91\xaa\xda\x2d\x90\xf8\xb4\x9b\x45\xe0\xe5\xdf\xfe\xc9\xad\xa0\xa6\xdd\x2a\x50\x67\xcc\x85\x2d\xde\x69\x3f\xae\xfc\x77\x1e\xef\x01\x0a\xd3\x16\x72\x71\x94\x90\x74\x5b\x43\x64\xc2\x5b\x18\x3b\xb8\x2e\x8e\x4a\x31\xd5\xd3\xb0\xd7\xdd\x66\x73\x57\x9a\x97\x5c\x52\x6e\xe1\xf6\xca\x20\x66\xf2\xe9\x8b\x8c\xa9\x54\x4b\x6d\xb3\x79\xd9\x68\x3f\x47\xa3\xcf\xd1\xe8\xdc\x68\x34\x03\xfb\x01\xdd\xec\xf8\x7e\x78\x8d\xbd\x03\xca\x05\xa2\x2e\x3e\xc2\xc8\x1d\x63\xef\x0e\xe3\x2d\x82\x39\x3f\x2c\x1e\x86\x6c\x40\x3c\x0f\x53\xc0\x44\x8c\x31\x83\x01\x76\x51\xcc\xb1\x72\xac\xb1\x6c\x41\xf8\x52\xb1\x33\x84\xc5\xbe\x01\xba\x21\x41\x1c\x00\x8d\x83\x01\x66\x10\x0e\x81\x24\xe8\xc9\x6e\x48\x80\x8b\x28\x0c\x70\x12\x27\xa8\x32\xa0\x18\x13\xae\xc7\x1c\x23\x0e\x03\x8c\x29\x30\x4d\xca\xd3\x0c\xcc\x7f\x62\x01\xe7\x78\x8c\xd3\x50\x04\x7b\xd2\x11\x86\x31\x73\x31\x78\x21\xe6\xd4\x11\x3a\x10\x7f\x92\x71\xf8\x4f\xac\xdd\xec\x50\x88\x67\x85\xdf\x5a\x0c\x09\x1d\x29\xd9\xd5\x21\x5c\xe2\x46\x97\x8f\xb6\x8d\xf0\x5d\xf9\x16\x19\xbe\x53\x7c\x9d\x84\xf0\x26\x38\xa3\xc8\x9f\x75\x39\xc2\x22\x66\x94\x03\x02\x9f\x70\x21\x15\xa6\x50\x2d\xe7\xb6\x20\x5b\xb6\x54\xad\xf8\x2a\x58\x2e\xb3\x6e\x50\xe4\xdc\x7c\x94\x7e\xa9\x48\x99\x11\xce\x7b\x62\xc6\x5a\x95\xf0\xa5\x40\xc3\x6b\xe4\xa5\x78\x3f\x01\x4d\x38\xd0\xbe\xf3\xb3\x4c\x8c\xee\x10\xe2\x58\xc0\x38\xb3\x83\x96\x15\x7c\xf9\xe3\xe5\xdc\x3d\x47\x38\x7f\xdf\xa0\xe5\xce\x25\xb4\xb2\xd7\x59\xa9\x10\xf2\x98\x59\x7d\xaf\x6e\xca\x5e\x15\xb1\x01\x31\x8a\x34\x11\x1a\x19\x73\xb5\xb0\x39\x27\x3f\x56\x69\x1e\x32\x0f\xb3\xd7\xd3\x55\x06\xc0\x88\xb9\x63\x67\x51\xe1\xc8\xf5\xc3\xd8\x3b\x8f\x58\x38\x21\x5e\x46\xf0\x0c\x5f\xc8\x08\x9e\x60\x2d\x5a\xa9\xf3\xe1\x71\x14\x85\x4c\x8a\x8c\x02\x04\x19\xa0\xc6\x2c\xdf\xb8\x2b\xdb\x7d\x4a\x9b\xdd\xd1\x47\x3a\xed\x66\xd3\x99\x29\xd0\x29\xca\xde\x62\x74\x1f\x42\xc4\x0b\x9c\x28\xfa\x4d\xa7\xdb\x6c\xcd\xa6\xeb\xd9\x0f\x68\x26\x6d\xce\x9b\xfc\x67\x6b\xf6\x00\xd6\x6c\x15\x53\xa3\x36\xd8\x6c\x30\x55\x5c\xbc\x83\xdd\x49\x00\xc8\x97\xca\xe7\xcd\xd0\xf0\xe5\xec\x91\x2e\x75\x3e\x1a\xab\x94\x12\xf7\x60\xd6\x49\xf3\xe3\xd9\x36\x3d\xdb\xa6\xec\xef\x97\xd9\xa6\x05\xcb\x61\xc5\xc6\xbf\xd4\x90\x25\xcf\xc8\x75\xc3\x98\x8a\xaa\xed\x5a\xc6\x24\xfc\xb2\xe9\x4d\xf6\x80\xee\x68\x64\x8b\xaa\x5c\x12\xcb\xf7\xa9\x3d\x4a\xca\x87\x29\x81\xb3\x55\xff\xb1\x0a\xe9\x43\xd6\xd4\x9d\x6e\xb3\xf3\x44\x98\xf4\x28\xd2\xd3\xd9\x36\xf3\xb1\x32\xee\x09\xec\x67\xab\x84\x39\x45\x33\xc0\xcb\x51\x96\x52\x7d\xab\xde\x9b\xbb\x09\x16\xaf\xb4\x97\x40\x54\xca\x7b\xbf\x60\xd9\xbd\x48\xa9\x75\xf9\x77\xd6\xd4\xf2\x25\xe5\x26\x9b\x4e\xeb\x58\xb7\x5e\x29\x7f\x2c\x4e\x62\x79\x4d\x28\x7a\xc2\x95\xb5\xa1\x38\xec\x22\xc5\x28\xcb\x56\xb2\x4c\xf5\xec\x9d\x9e\xbd\xd3\xca\xde\xc9\xb7\x87\x3a\xcf\xbe\xe8\x67\xfb\x22\xad\xb4\x45\xc5\x2f\x3b\xa3\x6c\xa5\xae\x3a\x3b\xce\x2a\x81\xb9\xaa\x30\x24\xb3\x58\xdd\xc5\x67\x9b\x7a\xcb\xfe\xe6\xc2\x82\x7a\x6a\x7a\xd4\x3e\x4b\xf9\x61\x44\x26\x52\xcf\x6c\xbb\xc3\xef\x98\xdb\xd8\xfd\x43\xf7\x91\x08\x65\x81\x51\x5e\x69\x23\xf8\xb3\x21\x56\x6c\x41\x7f\x15\x43\x7c\x07\x26\x3d\xf6\x34\x01\xfe\xf5\xef\xbf\xac\xa9\xd5\x6a\x39\xdf\xd4\x26\x36\xee\x3e\x0c\xed\x06\xc3\x1c\x8b\xba\xcb\xb0\x87\xa9\x20\xc8\xe7\xc9\x2c\x99\x19\xc4\x4f\x31\x8a\x4f\x2d\x68\x46\x75\xc5\xaa\x9f\x1c\x2e\xab\x31\xc0\x98\x8e\x5b\x0b\x92\x82\x54\x1c\x7c\x97\x61\xaf\x92\x44\x56\x46\x84\x61\xc8\x6c\xfe\x73\x2d\xa7\x4e\x62\x91\x30\x54\x23\xf4\x71\x70\x81\x5d\x71\x84\x87\x98\x61\xea\x66\xaa\xa6\x77\x84\x87\xea\x63\x2a\x4b\x4c\x62\x29\x88\xc9\x63\xe2\x99\x5c\xd5\x9d\xb8\x60\x84\x8e\xb2\xd7\x97\x84\x2e\x6e\x34\x96\xf3\x30\xaf\x91\x4c\x98\xcd\xb4\x58\xe5\x77\x06\x47\xe5\x28\xc6\x63\x84\x46\xd8\x78\xe4\xe4\x87\xf9\x28\x42\x81\x7c\xe3\x99\x08\x1c\xf0\xd5\x08\x5f\x8a\x2a\x89\x45\xb5\x11\xa1\x02\x8f\x8c\x2d\xf9\x12\xb9\xc5\xad\x14\xce\xf3\x9b\x29\x47\x93\x36\x41\xbe\xff\x71\xb8\x48\xe9\x53\xd5\x2a\x09\x81\x59\xef\xb5\xf0\x63\x16\x4f\x40\x59\x03\xaf\x62\xae\xad\xbc\x01\x35\x91\xc8\x62\x1b\x66\x36\xcf\x94\xe4\xbc\x28\x76\xd6\x4e\x8a\x19\xa6\xd4\xac\xc4\x10\xd9\xf1\x0e\x5c\x50\x02\x65\x47\x11\x31\x86\xa6\xa5\x2f\xd6\xe6\x30\x17\x41\x45\x9e\xc6\xd0\xdc\x0e\xf6\xc0\xb3\xcf\x05\x12\xf1\x0c\xc2\x2d\x13\x5a\x5c\xa1\x5c\xba\x5b\x10\xfb\x82\x9c\xa3\x1f\xf6\x0e\xd5\x53\x2c\x90\xac\xeb\x2d\x2f\x68\xd7\x74\x05\x74\xd4\x51\x9d\x65\x1b\x0f\xc2\x50\x70\xc1\x50\xd4\x57\xf7\x30\xbc\x33\x7c\xf5\x62\x76\xe9\x02\xcc\x39\xaa\x74\x19\x86\x2c\x40\xa2\x07\x1e\x12\xb8\x2e\x48\x80\x97\x05\x19\x47\xde\xfd\x82\xb4\x1e\x6f\xb5\x09\xdf\xbc\xf3\x1a\x55\xb9\xfe\xd9\x8a\x6c\x45\x5b\xd9\x78\xa8\x95\xf1\xa8\x15\x1a\x29\x1b\x0f\xb5\x56\xf1\xad\xb2\xe9\x95\xb7\xda\x86\x57\x5e\x4b\xf5\x5f\xa6\xe2\xba\xec\x11\x97\x9f\x6b\x95\x4a\xec\xcf\xff\xe6\x4f\x84\x89\x73\x75\x7e\x93\xf3\x5a\x29\xd8\xe2\xcd\x25\x0a\x42\x16\xdb\x64\xe7\x00\x43\x6f\x0a\x1c\x53\x21\xf3\x97\xe4\x40\x1e\x7c\xfa\xd8\x3f\x9e\x13\x25\x48\x55\x5d\xcd\xcf\xcf\x36\x51\x95\xcd\xe8\xc5\xcd\x04\x70\x3d\xc6\x0c\x1b\x7b\xa9\x5d\x3f\xe6\x42\xbe\x27\xbe\x6f\xee\xfa\x27\x74\x51\x18\x61\xb3\x77\x45\x0e\x61\xa1\x4f\x0e\x88\x50\x95\xbc\xe5\xff\xdd\x90\x0e\xc9\x28\xb6\xa2\x20\x42\x89\x80\x02\xbb\xf3\xad\x32\x7a\xd9\x80\x96\xed\x5b\x61\x68\x47\x52\x2e\x5b\xa4\x1b\x42\x0a\x23\x35\xe0\x40\x40\x10\x73\x21\xd1\xe1\x49\x0d\xd0\x0f\xaf\x31\xab\xbb\x88\x63\x40\x7e\x34\x46\x34\x0e\x30\x23\x2e\xb8\x63\xc4\x90\x2b\x33\x10\x08\x19\x38\x4e\xdd\x71\xd6\xa5\x47\x61\x49\xfd\x07\x51\xdd\x7e\x80\x85\xd9\x7a\x1d\x10\xf5\x00\x53\xaf\xd8\xaa\x02\x55\xb7\x73\x11\x55\xe9\xef\x00\x83\x1f\xd2\x91\x64\xc6\x18\x51\xe8\xb4\x8d\xe1\x1b\xce\xa2\x19\xa9\xfa\x13\xcb\xd1\x04\xd9\xe4\x9e\xa4\xa0\xb2\x75\xed\xa1\x6c\x61\x05\x91\x87\x37\x86\x05\x94\x9e\x8a\x35\x2c\x20\x5d\xcb\xe7\x38\xdf\x00\xf4\xa0\x33\x9c\xa3\xf1\x48\xe6\x77\xe6\x49\xdb\xc7\x3b\xbb\x1a\xe5\x5a\x55\x7f\xad\x4e\xce\xd9\x2d\x6e\x9f\x73\x56\xc8\x3d\x8b\x80\x0e\xa8\x47\x5c\x24\x92\x0d\x7c\x92\x64\x6d\x9a\x09\x4f\x04\xa1\x01\xa7\x89\xf1\x71\x9c\x02\x62\x8e\x03\x3e\xa1\x97\x8b\xcd\x1f\x99\x33\xfc\x09\x25\x57\x31\x06\xa2\x6a\x12\x43\xa2\xcf\xbd\x49\x4c\x92\xc1\x17\x02\xf7\x08\x8f\x7c\x34\x3d\x9f\xef\x76\x0e\x0d\x97\x53\x72\xbc\x32\x50\x48\x80\x40\x14\xb3\x28\xe4\x78\x09\x93\x3e\x7f\xb8\x77\x71\x80\x28\x0c\x19\xc1\xd4\xf3\xa7\x16\xea\x8a\x38\xac\x2b\x24\x12\x11\x86\xef\xe8\x9a\x7f\x5f\x8c\x01\xa6\x68\xe0\xe3\x39\xac\x3d\x1d\x63\x75\x3e\xd1\x42\x33\xe1\x69\x77\x4d\x3e\x8e\xfc\x70\x4a\xe8\x48\xba\xc3\x8f\xfd\xbd\xcc\x1f\x57\x91\x28\x7a\x7b\x5b\xd0\x94\x00\x2e\x1b\x29\xbb\x18\xef\xe5\x4f\x92\x35\x28\xf5\x83\xea\xdf\xee\xc3\xc9\xb8\xc6\xd9\x71\x9e\x9c\x70\x27\xfc\xb3\x09\x75\x49\xca\x0e\x1b\xf0\x85\xb0\x11\xa1\x04\xdd\xb7\xb4\x25\x48\xdc\x97\x94\xe9\xc1\x86\x28\xf6\x45\x0f\x86\xc8\xe7\x78\x49\xf1\x2b\x16\x45\xed\x12\x98\x5d\xc2\x58\xdc\xb6\x00\x84\xc2\x87\x9d\x7e\xbd\xdf\xff\x98\xa5\x12\x3a\x24\xdb\x4d\x42\x32\xf9\x16\xc5\x62\x2c\xe7\x56\x97\xae\x9d\xdb\xf8\xe0\xfb\xab\xa6\x54\xab\x5c\x45\x4a\xf5\x55\x8e\x30\xc2\x14\x33\x45\x62\x9c\x8a\x67\xb6\x3b\xbb\x58\x07\x2e\xd7\xcc\x57\x2a\x69\x14\xc7\x5e\x1a\x94\xd9\xed\x7e\x20\xba\x3e\xc1\x54\x1c\xec\xad\x50\x66\x92\x1d\xfa\xd8\x65\xd5\x45\x80\x7b\x2b\x63\x58\x17\x0b\x6a\x16\xa9\x2d\x55\xea\x4a\xc2\x6b\xcf\x75\x65\x3e\x37\x63\x91\xde\xb9\xd7\x74\x77\xb5\x5c\x6f\x8e\x78\xd9\xad\x9f\x5d\x16\x8a\x83\xec\x98\xcf\xb3\x56\x34\x16\x0c\x55\x99\xbe\x15\xa6\xce\x56\x8a\xaa\x6e\xea\x3d\x30\xc2\x58\xbb\x1c\xff\xed\x8c\xc6\x2c\xbd\xbc\xa5\x9a\x3f\x9c\x0d\xaa\xce\xf6\xcc\x64\xec\x16\x09\x56\x15\x7a\x35\x41\xaa\xa4\x22\x2b\xac\x53\xa6\xd2\xb9\x42\xb2\x54\x0e\xb6\xe6\x32\xf3\x41\x33\x2b\x3b\xa9\x92\x81\xe5\x95\xee\x5c\x0f\xf4\x55\x5a\xd9\x56\x90\x4a\xa5\x46\x4b\x3e\xc3\x6e\xc8\xb2\xc5\xff\xd2\xf2\xb4\x85\x19\x84\xf6\x20\x42\x62\x5c\x36\xbf\xf9\x9e\x53\x73\xf5\x4f\xe3\x60\xac\x4a\x96\xef\xfc\x2a\xde\xec\x85\x46\x18\x08\xf5\xf0\x4d\x05\xba\x19\x2d\x2d\x81\x65\x75\x55\xbc\xbc\x26\x39\x41\x7e\x6c\x64\xef\xe6\x62\xa4\x46\xda\x58\x3b\x9d\x8b\xf4\x61\x7e\xcb\x89\x9c\x72\x19\x6f\x61\xe4\x8e\x4d\xa2\xef\x91\x8c\xf2\xa2\x69\x46\x46\xb3\xa9\x09\x49\x4e\xf0\x5a\x6d\xf4\xff\xd7\xb3\x9e\xfd\xe4\xf2\x3e\x9d\x49\xa8\x4e\x30\x98\x82\xcb\x88\xc0\x8c\xa0\x86\x92\x10\x3e\xa5\x02\xdd\x64\x29\x46\x26\x6a\x40\xb8\x81\x50\x40\x7c\xa4\x6a\xab\xa2\xd4\x05\xc3\x79\x0a\xf8\x1c\x5c\x5f\xdd\x0f\x23\xf3\x21\x0a\xfd\xcf\xef\xd5\x9a\x19\x0e\x30\x15\xf9\xb9\xf1\x7d\xc9\x37\xc5\xe8\xf4\x8a\x18\xd5\x5f\x5f\x11\x83\xe8\x34\x05\x7b\x69\x54\xd0\x39\x0c\x09\xf6\x3d\x9e\x43\x79\x93\x27\x07\xeb\x72\x36\x34\x0e\x22\x04\x96\x9c\x88\x93\x4a\x08\x49\xe1\xdc\x18\x40\x8c\x31\x61\x89\xf9\xcd\x80\x7d\xff\xfe\x9d\x5f\xf9\x85\x38\x01\x10\x77\xcd\xef\x79\xe3\x8f\xec\x76\xe3\xc1\x39\xa2\xde\x79\x16\xb1\x7b\x48\x2c\x81\xc2\xba\xb1\x2e\x36\x1b\xa5\x03\xcd\x31\x73\xea\xa8\x23\xd2\x5c\xd4\x5b\x87\x90\x01\xd1\x6d\x94\x28\xa9\x5c\x27\x88\xc4\x74\x5d\xbe\xcb\x13\x17\x1d\x95\xf1\xd8\x17\x3c\xab\xe1\x1a\xb4\x48\xa4\x1a\x99\xd0\x46\x7e\xe8\xe1\xc2\x2e\xf4\xaa\x20\x97\xe4\xd4\x94\xe5\x94\xc2\xda\x0c\xf5\xd3\xfa\x99\x00\xb8\xab\x8a\x71\x31\xf5\x71\x4f\x2d\xfb\x69\x43\xa0\xce\xb3\xdb\xd5\x27\xd7\x1e\xd5\x28\xd7\x96\x9c\xdf\x0b\xd4\x66\x81\xba\xa8\xaa\x79\x51\x57\xf2\x31\x0b\x3a\x03\xc9\xc5\x4f\x89\xf4\x4b\xb9\xd3\x31\x8c\x42\x0c\x31\xdc\x4b\x92\xd7\xf5\xd2\x52\xce\x7a\xb6\xac\xb2\xae\x18\xb9\x9e\x2c\x5e\xdf\x4a\x7f\xb2\xeb\x60\x92\x35\x08\x2d\x9c\x6a\xed\x42\xa6\xc7\xea\xe5\xf7\x60\xfa\xdd\x90\x2f\x3e\x0e\x63\xdf\x83\x41\x49\xc2\x8b\xe2\xed\x93\x4b\x0c\x4e\x30\xfd\xa7\x63\x97\xea\xe3\x3b\x21\x83\x68\x7a\x9c\x17\xf0\x55\x8c\x7c\x5d\xa8\x5a\xbf\x3d\x92\x7a\x85\xa5\xc0\x66\x78\x05\xe8\x9a\xff\x14\x9d\x54\x14\x67\x66\x90\x1b\x2a\x8a\x44\x7e\x77\xd7\x18\x71\x88\x30\x0b\x08\xe7\x92\x50\x11\x02\xc7\x38\x53\x5d\xa6\x6e\x1c\x32\x6f\xd7\x3a\x0c\x05\x6e\xa4\xa8\x69\x1b\x9c\xef\x26\x5d\x97\x46\x5b\x6f\x17\x2c\x43\x98\xa3\xf4\x89\x1f\x55\x22\x39\x43\x95\xed\x6a\x6b\x71\x7b\x05\xad\xac\x18\x8b\xd2\x54\x24\x93\xfb\x0a\x62\x5e\xc7\x88\x8b\x7a\x56\x8b\x5f\xd9\x20\xa4\xbb\xd8\x54\x82\x9a\x62\x94\x6c\x63\x33\x61\xe2\x1e\x0c\xd4\xdb\xe4\xa5\x7e\x78\x93\x6c\x26\xf8\xe3\xf4\xb8\x90\x8f\x8e\x85\x88\xd6\xca\x74\x96\xee\xd5\x4c\xc1\x6b\x42\x33\x8c\x93\x25\x38\xa8\x55\x68\xab\x2c\xda\x42\x0d\x5d\xf3\x5a\x31\xc7\x85\x5a\xba\xa7\x32\x22\x22\x5b\x92\x2e\x5d\xbe\xb9\x68\x68\x1c\xd7\xaf\xf1\x3d\x0d\x6d\x59\xd3\x9f\x31\x3c\x91\x59\x44\x8b\xf4\xcf\xb6\x8e\x3e\x77\xfe\xf8\xf3\xe0\xc5\xe7\xe6\xc7\xe3\xe0\xe2\xf3\x1b\xaf\x13\xba\x6f\x8e\x46\xf9\x70\x49\xc6\xa1\xf4\x23\x7f\x3b\xd6\xf1\xf5\x32\xbf\xc9\xb1\xd4\x28\xc9\xa6\x1f\xa8\xc9\x78\xdd\xc7\x02\x2f\xcb\x8d\x6c\x5d\xdb\x54\x96\xf9\x33\xab\x77\xe6\x00\xd4\x50\x44\xce\x15\x92\xe7\x09\xea\x73\x98\x9c\x7f\xb2\xed\xbe\x31\x5b\xd6\x5b\x84\x4f\xb7\xd8\x55\xe7\xe2\x92\xbc\xb8\x6a\x86\x22\xb8\xb8\x1a\x4a\x82\x87\x6c\xd4\x40\x51\xc4\x1b\x01\xaf\x0f\x84\x18\x35\x2f\x68\x6b\xbb\x39\x8e\x1a\x37\x9b\xf1\x8b\x06\x6f\x35\x3c\x3c\xd1\x3f\xbe\x12\x32\x83\x35\xc6\x8e\x1d\x75\x2f\x6b\xb3\xde\x6a\xd6\x9b\x9b\xc7\xad\x76\x6f\xb3\xd5\x6b\x77\x1b\xcd\xcd\x4e\xab\xdb\xfe\x96\xf7\x30\x36\xe4\x54\x7a\x6c\xf5\x3a\x5b\x8d\xce\x56\xbb\xdd\x7c\xf1\xcd\xb2\xae\x34\x5f\x6a\x6c\x0b\xb8\xb5\xa2\x4c\xd9\x44\xb5\xf0\xae\x50\xbd\x86\xda\x4e\x80\x7e\x84\x14\x4e\xf1\x20\x4d\x99\x8d\xb6\x69\x7d\x39\x9f\xdb\xea\x42\xde\x12\xa8\x9a\xab\x68\x19\xa2\x16\xc1\x28\xa1\x76\xd2\x87\x7d\xc4\xc5\x3a\x18\x45\xf1\x79\xb8\xcd\x2b\x01\xcd\xc0\x32\x19\x29\x98\xd6\x51\x14\xd5\xb9\x01\xbe\x10\x2c\xd5\xca\x67\x59\x86\x21\x83\x60\x0a\x28\x8a\x6c\xb5\xa5\x65\x54\xbf\xa2\xe0\x45\x10\xab\x69\x7a\x79\x6b\x79\xab\x22\x02\x77\xa6\x10\xcc\xe2\x10\xd4\xfa\x3b\xf5\x56\x5b\xfe\x57\xfe\x9a\x54\x68\x25\x40\xf9\x8f\x79\xa5\xb7\x7b\x60\x93\x59\x3c\x78\x42\xec\x9a\x7d\xf1\xaf\x95\x09\xcd\x4e\x85\x0d\xc6\xd6\xd1\x65\xa9\xd6\x97\xfe\x6e\x14\xa0\xa9\x9d\xbe\x50\xfb\xb8\xfb\xa1\xbe\xff\xb5\x5e\xf8\x94\xec\xeb\x85\x5a\xdf\xb8\x88\x3c\xb9\xa2\xfc\xb7\xec\x9a\xc9\x62\xb0\xfa\xbb\x0c\xb3\x62\x9a\xdd\xcd\xb2\x2e\xc3\x37\x7d\x95\xf9\x2b\xb5\xa7\x29\x0b\x13\x0d\x6f\x60\x6e\x08\x96\x3e\xf1\xf4\x80\x04\x57\x6f\x5d\xb6\x17\xbf\xdf\x6a\xa1\x93\x9b\x83\x6f\x57\xaf\x8f\xaf\x0e\x8f\x50\xc6\xbb\x39\xb7\x0a\xda\xf8\xd7\xbe\x57\xfe\xb5\xab\xec\xfb\xf0\x76\xaf\xde\xdf\x3f\xfa\x52\xdf\xf9\x74\x50\x6f\xdb\x78\xf8\x06\x11\x5f\x1f\xd2\x89\x10\xe3\x59\x6a\xa3\xa2\xc7\x1e\x9c\x28\x53\x26\xbf\xaa\x23\x96\xa5\x04\x40\x2d\x69\x95\x3d\x65\x0f\x4a\x83\xf6\x60\xd1\x18\xc6\x8d\x39\xa1\x1f\x07\x54\x07\xfe\x12\x7a\x12\x90\x82\x43\x3c\xa7\x01\x7d\x5b\x3b\x5e\x4c\xc3\x74\xb2\x55\x4e\xc6\x0a\x29\x18\x7c\xd6\x71\xb7\x9e\xab\x1e\x10\x0f\x5e\x41\xcb\xe4\x4e\x79\xe6\xfd\xd3\xbd\xb7\xf1\x74\x70\xc0\xf6\xe9\x0d\xdb\xc1\xc1\x76\xbb\x3b\xba\xba\xbc\x24\x7b\x93\x74\xe6\xcb\x57\xd1\xda\x66\xbb\xdb\xec\xae\x32\xdb\x23\x24\xf0\x35\x9a\x1a\x13\x5c\x00\x90\xcc\xf0\xdb\x9d\xe3\xfd\xd3\x9d\xb3\x7a\xe1\x5b\x36\xbb\xcb\xdc\x62\x9b\x91\x60\xfd\x85\x06\x0b\x21\xce\xb6\x53\x22\x43\x51\x71\x1b\x91\xdd\x2e\xd3\x93\xe8\xfb\x76\x85\x94\x24\x80\x4d\x08\x50\x59\x26\xf1\x5e\x39\x2d\xf2\x67\xc7\x8b\xbf\x9c\x1d\x4c\x26\x9b\x67\x93\xf7\xfe\xf4\x47\x2b\x78\x7b\xd4\xf9\x63\x7a\x75\xe8\xa8\x9d\x78\xea\x27\xd0\x66\x4c\x6c\x8b\x9c\x7d\xdc\x1e\xb5\x47\x5b\xef\x8e\xbd\x93\x3f\x4f\x50\xfb\x92\xbf\x7b\xd1\xbe\xfc\xbc\xd7\x99\x26\x3c\x29\x9f\x95\xb3\x1a\xc1\xaa\x2b\xb8\x83\x0d\x6c\xcd\x34\x81\x2d\xcb\xfc\xe6\xfa\x39\xc1\x8c\x0c\xa7\x32\x05\xd2\x87\x14\x7b\xea\x3a\x5c\x99\xf4\x65\x67\xf1\xf4\x0d\xeb\xfa\x08\x63\xc6\x9a\x39\xe6\xee\xac\x73\x32\xde\x1f\x5f\x07\x5f\x5f\x47\xa7\x9f\x86\x07\x6d\xff\x10\x5f\x46\x5e\xf7\xdb\x5e\x2a\x31\xe5\x23\xdd\x36\x59\xe9\x2e\x23\x2b\xcb\x70\xa6\x5b\xe2\x4b\xc1\xca\x74\x2b\xac\x51\x27\x11\x9d\x61\x18\xd6\x07\x88\x39\xcb\xde\xb1\xdd\x98\x25\x29\xfe\x59\xe7\x84\xec\x8f\x7f\x50\x83\x19\x17\x91\xd7\x3d\xdb\x4d\x79\xb1\xec\xcd\xe3\x8f\x98\x49\x63\xc4\xd3\xfb\xc0\x01\x59\xee\x17\xdf\x02\x94\x94\xc3\xb2\x9b\xc6\x17\x30\xec\xf2\x46\x32\xec\xcb\x27\x7c\xd0\x0e\x0f\xf1\x85\xd7\xf9\xfa\x5a\x75\xa8\x1e\xbe\xb4\xb1\xe5\xe5\xbd\xd9\x99\x97\x65\xad\x2a\x30\xe6\x65\x95\x31\x34\xff\xd9\x1d\x5c\x18\xb4\x6c\x41\xf0\xfe\xfb\xc9\x9b\x97\x17\x1f\x3e\x9f\x6d\x9d\x8d\xc6\xc3\x0f\x2f\x47\x6f\x8f\xf8\xbb\xc9\xfe\x69\x4a\xe7\xd2\x56\xf5\x27\x52\x9b\x98\x90\x2a\x9d\x8e\xae\x36\xa9\xb3\xa5\xea\xe7\x3b\xa7\xd4\xe5\x32\x48\x4e\x7b\xf4\x60\x98\x39\x6f\x2f\x39\x5d\x9a\xb6\xc1\x37\xa2\x5e\x48\x6e\x6f\x9a\x1d\x9f\x7a\x7e\x70\xd5\xbc\x1a\xba\xdb\x9c\x08\xb4\xc9\xfd\x8b\xc9\x0b\xf3\x70\x87\xf4\xea\xe9\x2e\x65\xc5\xc1\xd1\xa6\xf7\xe2\xc5\x55\xd3\x67\xae\x37\xe9\x8e\xb6\x91\x3f\xd8\xe6\xfe\x70\x44\x2f\x3a\xde\x78\xc0\x2f\xfe\xf9\x5f\xbf\xed\x7f\x3d\x3e\xda\x81\xff\xd1\xc4\x35\x14\x57\x5e\xe5\x7b\xa4\x0c\xd8\x84\x83\xe3\x74\x9b\x5d\xc7\x59\x57\x84\xeb\x17\xbb\xef\x4f\xfa\xc7\xfb\x47\xfd\xfa\x87\xb7\x1f\x8e\xeb\xea\xb3\x2a\x5f\x65\x33\x69\x6e\xb8\x52\x3d\x5a\xa3\xcd\x90\x6d\x36\x27\x24\x6e\x6e\x87\x58\x4e\xd5\x98\x5d\xba\xed\x2d\x6f\x34\x14\x17\x2d\xe4\x3a\x85\x13\xaa\xe9\x06\x1f\xd5\x6f\x2e\x2d\x8e\xe1\x92\x7e\x77\x66\x3b\xa5\x63\x7e\xca\xa6\x5b\x94\x5f\x0d\xda\xfc\x30\x78\x73\xb1\x39\xf8\x1a\xed\x6d\xef\xa2\xb5\xff\x04\x00\x00\xff\xff\xc5\x20\x5a\xd3\x5c\x76\x00\x00")

func managedServicesApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedServicesApiYaml,
		"managed-services-api.yaml",
	)
}

func managedServicesApiYaml() (*asset, error) {
	bytes, err := managedServicesApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-services-api.yaml", size: 30300, mode: os.FileMode(436), modTime: time.Unix(1607705021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"managed-services-api.yaml": managedServicesApiYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"managed-services-api.yaml": &bintree{managedServicesApiYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

openapi: 3.0.0
info:
  title: Managed Service API
  description: Managed Service API
  version: 0.0.1
servers:
  - url: https://api.openshift.com
    description: Main (production) server
  - url: https://api.stage.openshift.com
    description: Staging server
  - url: /
    description: current domain
paths:
  /api/managed-services-api/v1/kafkas/{id}:
    get:
      summary: Get a kafka request by id
      security:
        - Bearer: []
      responses:
        '200':
          description: Kafka request found by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaRequest'
        '401':
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized to perform operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No kafka request with specified id exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - $ref: '#/components/parameters/id'
  /api/managed-services-api/v1/kafkas:
    post:
      summary: Create a new kafka Request
      security:
        - Bearer: []
      requestBody:
        description: Kafka data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaRequest'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaRequest'
        '400':
          description: Validation errors occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized to perform operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Kafka already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred creating the Kafka Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ObjectReference:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
    List:
      type: object
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
        - kind
        - page
        - size
        - total
        - items
    Error:
      allOf:
        - $ref: '#/components/schemas/ObjectReference'
        - type: object
          properties:
            code:
              type: string
            reason:
              type: string
            operation_id:
              type: string
    ErrorList:
      allOf:
        - $ref: '#/components/schemas/List'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Error'
    KafkaRequest:
      allOf:
        - $ref: '#/components/schemas/ObjectReference'
        - type: object
          properties:
            clusterID:
              type: string
            status:
              type: string
            cloud_provider:
              type: string
            multi_az:
              type: boolean
            region:
              type: string
            owner:
              type: string
            name:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
  parameters:
    id:
      name: id
      in: path
      description: The id of record
      required: true
      schema:
        type: string

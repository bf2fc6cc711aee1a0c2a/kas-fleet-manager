openapi: 3.0.0 # need this as first line to allow some IDEs to know this is an openapi document.
# Warning: This file should only be used if the endpoints are not yet ready to be public, or not suitable for public consumption (like the data plane endpoints).
# In most cases, you shouldn't need to add the endpoints here.
# Only add endpoints here when it is an explicit requirement, or if you know what you are doing.
# There should be no duplicated endpoints or schemas in these 2 files. They should only defined in one of them.
info:
  title: Kafka Service Fleet Manager
  version: 1.1.0
  description: Kafka Service Fleet Manager is a Rest API to manage kafka instances and connectors.
servers:
  - url: https://api.openshift.com
    description: Main (production) server
  - url: https://api.stage.openshift.com
    description: Staging server
  - url: http://localhost:8000
    description: localhost
  - url: /
    description: current domain
tags:
  - name: Connector Clusters Agent
    description: "only accessible by connector fleet shard agents"
  - name: Agent Clusters
    description: ""

paths:
  '/api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/status':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
    put:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: updateKafkaConnectorClusterStatus
      summary: Update the status of a connector cluster
      requestBody:
        description: Cluster status update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorClusterStatus'
        required: true
      responses:
        '200':
          description: Cluster status is updated
        '400':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.

  '/api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/deployments':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
    get:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: getClusterAsignedConnectorDeployments
      summary: Returns a list of connector deployments assigned to the cluster.
      parameters:
        - $ref: 'kas-fleet-manager.yaml#/components/parameters/page'
        - $ref: 'kas-fleet-manager.yaml#/components/parameters/size'
        - in: query
          name: gt_version
          description: filters the connectors to those with a version greater than the given value
          schema:
            type: integer
            format: int64
        - in: query
          name: watch
          description: watch for changes to the resources and return them as a stream of watch events. Specify gt_version to specify the starting point.
          schema:
            type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentWatchEvent'
          description: A list of connector
        '401':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                401Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/401Example'
          description: Auth token is invalid
        '500':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                500Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/500Example'
          description: Unexpected error occurred

  '/api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
      - name: deployment_id
        description: The id of the deployment
        schema:
          type: string
        in: path
        required: true
    get:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: getClusterAsignedConnectorDeploymentById
      summary: Returns a list of connector deployments assigned to the cluster.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeployment'
          description: A connector deployment
        '401':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                401Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/401Example'
          description: Auth token is invalid
        '500':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                500Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/500Example'
          description: Unexpected error occurred

  '/api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}/status':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
      - name: deployment_id
        description: The id of the deployment
        schema:
          type: string
        in: path
        required: true
    put:
      tags:
        - Connector Clusters Agent
      operationId: updateConnectorDeploymentStatus
      summary: update the connector deployment status
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorDeploymentStatus'
        required: true
      responses:
        '200':
          description: Cluster status is updated
        '400':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.

  # Endpoints for data plane communications
  '/api/kafkas_mgmt/v1/agent_clusters/{id}/status':
    put:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      requestBody:
        description: Cluster status update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'
        required: true
      responses:
        '200':
          description: Cluster status is updated
        '400':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: updateAgentClusterStatus
      summary: Update the status of an agent cluster

  '/api/kafkas_mgmt/v1/agent_clusters/{id}/kafkas/status':
    put:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      requestBody:
        description: Kafka clusters status update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneKafkaStatusUpdateRequest'
        required: true
      responses:
        '200':
          description: Status is updated for Kafka clusters
        '400':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: updateKafkaClusterStatus
      summary: Update the status of Kafka clusters on an agent cluster

  '/api/kafkas_mgmt/v1/agent_clusters/{id}/kafkas':
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      responses:
        '200':
          description: The list of the ManagedKafkas for the specified agent cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedKafkaList'
        '400':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: getKafkas
      summary: Get the list of ManagedaKafkas for the specified agent cluster

  '/api/kafkas_mgmt/v1/agent_clusters/{id}':
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      responses:
        '200':
          description: The ManagedKafkaAgent CR Spec
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataplaneClusterAgentConfig'
        '400':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: getKafkaAgent
      summary: Get the spec of the ManagedKafkaAgent CR spec

components:
  schemas:

    ListReference:
      required:
        - kind
        - items
      type: object
      properties:
        kind:
          type: string

    PrivateObjectReference:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string

    MetaV1Condition:
      type: object
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
        lastTransitionTime:
          type: string
          #format: date-time # enable this?? or just set it as pure plain string?

    ManagedKafkaCapacity:
      type: object
      properties:
        ingressEgressThroughputPerSec:
          type: string
        totalMaxConnections:
          type: integer
          format: int
        maxDataRetentionSize:
          type: string
        maxPartitions:
          type: integer
          format: int
        maxDataRetentionPeriod:
          type: string
        maxConnectionAttemptsPerSec:
          type: integer
          format: int

    ManagedKafkaVersions:
      type: object
      properties:
        kafka:
          type: string
        strimzi:
          type: string

    ManagedKafka:
      allOf:
        - $ref: "#/components/schemas/PrivateObjectReference"
        - type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                namespace:
                  type: string
                annotations:
                  type: object
                  required:
                    - bf2.org/id
                    - bf2.org/placementId
                  properties:
                    bf2.org/id:
                      type: string
                    bf2.org/placementId:
                      type: string

            spec:
              type: object
              properties:
                capacity:
                  $ref: "#/components/schemas/ManagedKafkaCapacity"
                oauth:
                  type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                    tokenEndpointURI:
                      type: string
                    jwksEndpointURI:
                      type: string
                    validIssuerEndpointURI:
                      type: string
                    userNameClaim:
                      type: string
                    tlsTrustedCertificate:
                      type: string
                    customClaimCheck:
                      type: string
                endpoint:
                  type: object
                  properties:
                    bootstrapServerHost:
                      type: string
                    tls:
                      type: object
                      properties:
                        cert:
                          type: string
                        key:
                          type: string
                versions:
                  $ref: "#/components/schemas/ManagedKafkaVersions"
                deleted:
                  type: boolean
              required:
                - deleted

    ManagedKafkaList:
      description: >-
        A list of ManagedKafka
      allOf:
        - $ref: "#/components/schemas/ListReference"
        - type: object
          example:
            kind: "ManagedKafkaList"
            items:
              $ref: '#/components/examples/ManagedKafkaExample'
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/ManagedKafka"

    WatchEvent:
      required:
        - type
      type: object
      properties:
        type:
          type: string
        error:
          nullable: true
          $ref: "#/components/schemas/Error"
        object:
          type: object
          nullable: true

    ConnectorDeployment:
      description: Holds the deployment configuration of a connector
      allOf:
        - $ref: 'kas-fleet-manager.yaml#/components/schemas/ObjectReference'
        - type: object
          properties:
            metadata:
              type: object
              properties:
                created_at:
                  format: date-time
                  type: string
                updated_at:
                  format: date-time
                  type: string
                resource_version:
                  type: integer
                  format: int64
            spec:
              $ref: '#/components/schemas/ConnectorDeploymentSpec'
            status:
              $ref: '#/components/schemas/ConnectorDeploymentStatus'

    ConnectorDeploymentSpec:
      description: Holds the deployment specification of a connector
      type: object
      properties:
        shard_metadata:
          type: object
        connector_id:
          type: string
        allow_upgrade:
          description: allow the connector to upgrade to a new operator
          type: boolean
        connector_resource_version:
          type: integer
          format: int64
        kafka_id:
          type: string
        kafka:
          $ref: 'connector_mgmt.yaml#/components/schemas/KafkaConnectionSettings'
        connector_type_id:
          type: string
        connector_spec:
          type: object
        desired_state:
          type: string

    ConnectorDeploymentStatus:
      description: The status of connector deployment
      type: object
      properties:
        phase:
          type: string
        resource_version:
          type: integer
          format: int64
        available_upgrades:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/MetaV1Condition'

    ConnectorDeploymentList:
      allOf:
        - $ref: 'kas-fleet-manager.yaml#/components/schemas/List'
        - type: object
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ConnectorDeployment'

    ConnectorDeploymentWatchEvent:
      allOf:
        - $ref: '#/components/schemas/WatchEvent'
        - type: object
          properties:
            object:
              $ref: '#/components/schemas/ConnectorDeployment'

    ConnectorClusterStatus:
      description: "Schema for the request to update a data plane cluster's status"
      type: object
      properties:
        phase:
          type: string
        version:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/MetaV1Condition'
        operators:
          description: the list of installed operators
          type: array
          items:
            type: object
            properties:
              id:
                description: the id of the operator
                type: string
              version:
                description: the version of the operator
                type: string
              namespace:
                description: the namespace to which the operator has been installed
                type: string
              status:
                description: the status of the operator
                type: string


    DataPlaneClusterUpdateStatusRequest:
      # TODO are there any fields that should be required?
      # TODO are there any fields that should be nullable? (this is, a pointer in the resulting generated Go code)
      description: "Schema for the request to update a data plane cluster's status"
      type: object
      properties:
        conditions:
          description: "The cluster data plane conditions"
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              reason:
                type: string
              message:
                type: string
              status:
                type: string
              lastTransitionTime:
                type: string
                #format: date-time # enable this?? or just set it as pure plain string?
        total:
          type: object
          properties:
            ingressEgressThroughputPerSec:
              type: string #an example is "40Gi", a k8s quantity. Should we have some special format at openapi level?" this example also happens on other fields
              nullable: true
            connections:
              type: integer # an example is 10000. Should we have some special format at openapi level? this example also happens on other fields
              nullable: true
            dataRetentionSize:
              type: string
              nullable: true
            partitions:
              type: integer
              nullable: true
        remaining:
          type: object
          properties:
            # TODO 'total', 'remaining' attributes share the same properties so should we refactor it to a common schema?
            ingressEgressThroughputPerSec:
              type: string #an example is "40Gi", a k8s quantity. Should we have some special format at openapi level?" this example also happens on other fields
              nullable: true
            connections:
              type: integer # an example is 10000. Should we have some special format at openapi level? this example also happens on other fields
              nullable: true
            dataRetentionSize:
              type: string
              nullable: true
            partitions:
              type: integer
              nullable: true
        nodeInfo:
          type: object
          properties:
            ceiling:
              type: integer
              nullable: true
            floor:
              type: integer
              nullable: true
            current:
              type: integer
              nullable: true
            currentWorkLoadMinimum:
              type: integer
              nullable: true
        resizeInfo:
          type: object
          properties:
            nodeDelta:
              type: integer
              nullable: true
            delta:
              type: object
              nullable: true
              properties:
                ingressEgressThroughputPerSec:
                  type: string #an example is "40Gi", a k8s quantity. Should we have some special format at openapi level?" this example also happens on other fields
                  nullable: true
                connections:
                  type: integer # an example is 10000. Should we have some special format at openapi level? this example also happens on other fields
                  nullable: true
                dataRetentionSize:
                  type: string
                  nullable: true
                partitions:
                  type: integer
                  nullable: true

    DataPlaneKafkaStatus:
      description: "Schema of the status object for a Kafka cluster"
      type: object
      properties:
        conditions:
          description: "The status conditions of a Kafka cluster"
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              reason:
                type: string
              message:
                type: string
              status:
                type: string
              lastTransitionTime:
                type: string
        # do we need this for now?
        capacity:
          description: "Capacity information of the data plane cluster"
          type: object
          properties:
            ingressEgressThroughputPerSec:
              type: string #example: 4Mi
            totalMaxConnections:
              type: integer #example: 500
            maxDataRetentionSize:
              type: string #example: 100Gi
            maxPartitions:
              type: integer #example: 100
            maxDataRetentionPeriod:
              type: string #example: P14D
            maxConnectionAttemptsPerSec:
              type: integer #example: 100
        versions:
          description: "Version information related to a Kafka cluster"
          type: object
          properties:
            kafka:
              type: string
            strimzi:
              type: string
      example:
        $ref: '#/components/examples/DataPlaneKafkaStatusRequestExample'

    DataPlaneKafkaStatusUpdateRequest:
      description: "Schema for the request to update the statuses of Kafka clusters from data plane"
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DataPlaneKafkaStatus'

    DataplaneClusterAgentConfig:
      description: "Configuration for the data plane cluster agent"
      type: object
      properties:
        spec:
          description: "Data plane cluster agent spec"
          type: object
          properties:
            observability:
              description: "Observability configurations"
              type: object
              properties:
                accessToken:
                  type: string
                channel:
                  type: string
                repository:
                  type: string
                tag:
                  type: string

  securitySchemes:
    Bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http

  examples:
    ManagedKafkaExample:
      value:
        kind: "ManagedKafka"
        metadata:
          name: "example-kafka"
          namespace: "example-kafka-1rfpsqbvq1em2u9u0z54ymjcwac"
          annotations:
            bf2.org/id: "1rfpsqbvq1em2u9u0z54ymjcwac"
            bf2.org/placementId: ""
        spec:
          capacity:
            ingressEgressThroughputPerSec: 4Mi
            totalMaxConnections: 500
            maxDataRetentionSize: 100Gi
            maxPartitions: 100
            maxDataRetentionPeriod: P14D
            maxConnectionAttemptsPerSec: 100
          oauth:
            clientId: "kafka-1rfpsqbvq1em2u9u0z54ymjcwac"
            clientSecret: "example-client-secret"
            tokenEndpointURI: "https://example-token-endpoint-uri.com/token"
            jwksEndpointURI: "https://example-jwks-endpoint-uri.com/certs"
            validIssuerEndpointURI: "https://issuer-endpoint-uri.com"
            userNameClaim: "username"
            tlsTrustedCertificate: ""
            customClaimCheck: ""
          endpoint:
            bootstrapServerHost: "example-kafka--rfpsqbvq-em-u-u-z--ymjcwac.kafka.devshift.org"
            tls:
              cert: ""
              key: ""
          versions:
            kafka: 2.7.0
            strimzi: 0.21.2
          deleted: false
    DataPlaneKafkaStatusRequestExample:
      value:
        conditions:
          - type: Ready
            reason: KafkaInstanceReady
            message: installing
            status: "False"
            lastTransitionTime: "2018-01-01T00:00:00Z"
        capacity:
          ingressEgressThroughputPerSec: 4Mi
          totalMaxConnections: 500
          maxDataRetentionSize: 100Gi
          maxPartitions: 100
          maxDataRetentionPeriod: P14D
          maxConnectionAttemptsPerSec: 100
        versions:
          kafka: 2.4.1
          strimzi: 0.21.2
    400InvalidIdExample:
      value:
        id: "203"
        kind: "Error"
        href: "/api/kafkas_mgmt/v1/errors/21"
        code: "KAFKAS-MGMT-21"
        reason: "Bad request"
        operation_id: "1lWDGuybIrEnxrAem724gqkkiDv"
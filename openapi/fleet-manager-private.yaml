openapi: 3.0.0 # need this as first line to allow some IDEs to know this is an openapi document.
# Warning: This file should only be used if the endpoints are not yet ready to be public, or not suitable for public consumption (like the data plane endpoints).
# In most cases, you shouldn't need to add the endpoints here.
# Only add endpoints here when it is an explicit requirement, or if you know what you are doing.
# There should be no duplicated endpoints or schemas in these 2 files. They should only be defined in one of them.
info:
  title: Pineapple Service Fleet Manager
  version: 1.3.0
  description: Pineapple Service Fleet Manager APIs that are used by internal services e.g kas-fleetshard operators.
servers:
  - url: https://api.openshift.com
    description: Main (production) server
  - url: https://api.stage.openshift.com
    description: Staging server
  - url: http://localhost:8000
    description: localhost
  - url: /
    description: current domain
tags:
  - name: Agent Clusters
    description: "Endpoints used by the agent for data plane communications"

paths:
  # Endpoints for data plane communications
  '/api/pineapples_mgmt/v1/agent-clusters/{id}/status':
    put:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      requestBody:
        description: Data plane cluster status update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'
        required: true
      responses:
        '200':
          description: Data plane cluster status is updated
        '400':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: updateAgentClusterStatus
      summary: Update the status of a data plane cluster

  '/api/pineapples_mgmt/v1/agent-clusters/{id}/pineapples/status':
    put:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      requestBody:
        description: Pineapple clusters status update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlanePineappleStatusUpdateRequest'
        required: true
      responses:
        '200':
          description: Status is updated for Pineapple clusters
        '400':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: updatePineappleClusterStatus
      summary: Update the status of Pineapple clusters on the control plane

  '/api/pineapples_mgmt/v1/agent-clusters/{id}/pineapples':
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      responses:
        '200':
          description: The list of the ManagedPineapple CRs for the specified data plane cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedPineappleList'
        '400':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: getPineapples
      summary: Get the list of ManagedaPineapples CR for the specified data plane cluster

  '/api/pineapples_mgmt/v1/agent-clusters/{id}':
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      responses:
        '200':
          description: The ManagedPineappleAgent CR Spec
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataplaneClusterAgentConfig'
        '400':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'fleet-manager.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'fleet-manager.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: [ ]
      operationId: getPineappleAgent
      summary: Get the spec of the ManagedPineappleAgent CR

components:
  schemas:

    ListReference:
      required:
        - kind
        - items
      type: object
      properties:
        kind:
          type: string

    PrivateObjectReference:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string

    ManagedPineappleCapacity:
      description: "Capacity information of a Pineapple cluster"
      type: object
      properties: {
            # A list of resources used up by a Pineapple cluster. For example:
            # storage:
            #   type: string
          }

    ManagedPineappleVersions:
      type: object
      properties:
        pineapple:
          type: string
        pineappleOperator:
          type: string

    ManagedPineapple:
      allOf:
        - $ref: "#/components/schemas/PrivateObjectReference"
        - type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                namespace:
                  type: string
                annotations:
                  type: object
                  required:
                    - mas/placementId
                    - mas/id
                  properties:
                    mas/id:
                      type: string
                    mas/placementId:
                      type: string

            spec:
              type: object
              properties:
                serviceAccounts:
                  type: array
                  items:
                    type: object
                    required: 
                      - name
                      - principal
                      - password
                    properties:
                      name:
                        type: string
                      principal:
                        type: string
                      password: 
                        type: string     
                capacity:
                  $ref: "#/components/schemas/ManagedPineappleCapacity"
                oauth:
                  type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                    tokenEndpointURI:
                      type: string
                    jwksEndpointURI:
                      type: string
                    validIssuerEndpointURI:
                      type: string
                    userNameClaim:
                      type: string
                    tlsTrustedCertificate:
                      type: string
                      nullable: true
                    customClaimCheck:
                      type: string

                owners:
                  type: array
                  items:
                    type: string
                endpoint:
                  type: object
                  properties:
                    bootstrapServerHost:
                      type: string
                    tls:
                      type: object
                      nullable: true
                      properties:
                        cert:
                          type: string
                        key:
                          type: string
                versions:
                  $ref: "#/components/schemas/ManagedPineappleVersions"
                deleted:
                  type: boolean
              required:
                - deleted

    ManagedPineappleList:
      description: >-
        A list of ManagedPineapple CRs
      allOf:
        - $ref: "#/components/schemas/ListReference"
        - type: object
          example:
            kind: "ManagedPineappleList"
            items:
              $ref: '#/components/examples/ManagedPineappleExample'
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/ManagedPineapple"

    DatePlaneClusterUpdateStatusRequestNodeInfo:
      description: "Schema for the data plane cluster node info"
      type: object
      nullable: true
      properties:
        ceiling:
          description: "The maximum number of nodes required in order to provide the Pineapple service"
          type: integer
          nullable: true
        floor:
          description: "The minimum number of nodes required in order to provide the Pineapple service"
          type: integer
          nullable: true
        current:
          description: "The number of nodes currently known to the agent"
          type: integer
          nullable: true
        currentWorkLoadMinimum:
          description: "The minimum number of nodes required to support the current population of Pineapple clusters on the data plane cluster"
          type: integer
          nullable: true

    DatePlaneClusterUpdateStatusRequestResizeInfo:
      type: object
      nullable: true
      properties:
        nodeDelta:
          description: |
            The minimum number of nodes that needs to be applied to the data plane cluster to reach the target capacity. 
            
            The control plane may increase or decrease the size of the data plane cluster in multiples of this number as long as it does not exceed the ceiling or floor defined in the node info
          type: integer
          nullable: true
        delta:
          description: |
            Shows how the data plane cluster capacity will be affected by applying the nodeDelta. 
            
            This should state a list of data plane resources, consumed by Pineapple clusters, and the amount that they would be increased or decreased by applying the nodeDelta.
          type: object
          nullable: true
          properties: {
            # Example:
            # storage:
            #   type: string
          }

    DataPlaneClusterUpdateStatusRequest:
      description: "Schema for the request to update a data plane cluster's status"
      type: object
      properties:
        conditions:
          description: "The data plane cluster conditions"
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              reason:
                type: string
              message:
                type: string
              status:
                type: string
        total:
          description: |
            The total capacity of the data plane cluster for Pineapple clusters.

            This should state the total amount of currently used and available data plane resources that can be consumed by Pineapple clusters.
          type: object
          properties: {
            # Example:
            # storage:
            #   type: string
          }
        remaining:
          description: |
            The remaining capacity of the data plane cluster for Pineapple clusters.

            This should state the remaining amount of available data plane resources that can be consumed by Pineapple clusters.
          type: object
          properties: {
            # Example:
            # storage:
            #   type: string
          }
        nodeInfo:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestNodeInfo'
        resizeInfo:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestResizeInfo'
        pineappleOperatorVersions:
          description: "A list of the Pineapple operator versions that can be installed on the data plane cluster"
          type: array
          items:
            type: string
        pineappleOperator:
          description: "The status and version of the Pineapple operator"
          type: array
          items:
            type: object
            properties:
              ready:
                type: boolean
              version:
                type: string
            required:
            - ready
            - version
    DataPlanePineappleStatus:
      description: "Schema of the status object for a Pineapple cluster"
      type: object
      properties:
        conditions:
          description: "The status conditions of the Pineapple cluster"
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              reason:
                type: string
              message:
                type: string
              status:
                type: string
        capacity:
          description: "Capacity information consumed by the Pineapple cluster"
          type: object
          properties: {
            # Example:
            # storage:
            #   type: string
          }

        versions:
          description: "Version information related to the Pineapple cluster"
          type: object
          properties:
            pineapple:
              type: string
            pineappleOperator:
              type: string
        routes:
          description: "Routes created for the Pineapple cluster"
          type: array
          nullable: true
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              router:
                type: string
      example:
        $ref: '#/components/examples/DataPlanePineappleStatusRequestExample'

    DataPlanePineappleStatusUpdateRequest:
      description: "Schema for the request to update the statuses of Pineapple clusters from data plane to the control plane"
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DataPlanePineappleStatus'

    DataplaneClusterAgentConfig:
      description: "Configuration for the data plane cluster agent"
      type: object
      properties:
        spec:
          description: "Data plane cluster agent spec"
          type: object
          properties:
            observability:
              description: "Observability configurations"
              type: object
              properties:
                accessToken:
                  type: string
                  nullable: true
                channel:
                  type: string
                repository:
                  type: string
                tag:
                  type: string

    WatchEvent:
      required:
        - type
      type: object
      properties:
        type:
          type: string
        error:
          nullable: true
          $ref: "fleet-manager.yaml#/components/schemas/Error"
        object:
          type: object
          nullable: true

  securitySchemes:
    Bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http

  examples:
    ManagedPineappleExample:
      value:
        kind: "ManagedPineapple"
        metadata:
          name: "example-pineapple"
          namespace: "example-pineapple-1rfpsqbvq1em2u9u0z54ymjcwac"
          annotations:
            mas/id: "1rfpsqbvq1em2u9u0z54ymjcwac"
            mas/placementId: ""
        spec:
          capacity: {
            # For example:
            # storage: 1Gi
          }
          oauth:
            clientId: "pineapple-1rfpsqbvq1em2u9u0z54ymjcwac"
            clientSecret: "example-client-secret"
            tokenEndpointUri: "https://example-token-endpoint-uri.com/token"
            jwksEndpointUri: "https://example-jwks-endpoint-uri.com/certs"
            validIssuerEndpointUri: "https://issuer-endpoint-uri.com"
            userNameClaim: "username"
            tlsTrustedCertificate: ""
            customClaimCheck: ""
          endpoint:
            bootstrapServerHost: "example-pineapple--rfpsqbvq-em-u-u-z--ymjcwac.pineapple.devshift.org"
            tls:
              cert: ""
              key: ""
          versions:
            pineapple: 2.7.0
            pineappleOperator: 0.21.2
          deleted: false
    DataPlanePineappleStatusRequestExample:
      value:
        conditions:
          - type: Ready
            reason: PineappleInstanceReady
            message: installing
            status: "False"
            lastTransitionTime: "2018-01-01T00:00:00Z"
        capacity: {
          # For example:
          # storage: 1Gi
        }
        versions:
          pineapple: 2.4.1
          pineappleOperator: 0.21.2
    400InvalidIdExample:
      value:
        id: "203"
        kind: "Error"
        href: "/api/pineapples_mgmt/v1/errors/21"
        code: "PINEAPPLES-MGMT-21"
        reason: "Bad request"
        operation_id: "1lWDGuybIrEnxrAem724gqkkiDv"
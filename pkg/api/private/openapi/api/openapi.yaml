openapi: 3.0.0
info:
  description: Kafka Service Fleet Manager is a Rest API to manage kafka instances
    and connectors.
  title: Kafka Service Fleet Manager
  version: 1.1.0
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- description: only accessible by connector fleet shard agents
  name: Connector Clusters Agent
- name: Agent Clusters
paths:
  /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/status:
    put:
      operationId: updateKafkaConnectorClusterStatus
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorClusterStatus'
        description: Cluster status update data
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of a connector cluster
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/deployments:
    get:
      operationId: getClusterAsignedConnectorDeployments
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index
        examples:
          page:
            value: "1"
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        in: query
        name: size
        required: false
        schema:
          type: string
      - description: filters the connectors to those with a version greater than the
          given value
        explode: true
        in: query
        name: gt_version
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: watch for changes to the resources and return them as a stream
          of watch events. Specify gt_version to specify the starting point.
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentWatchEvent'
          description: A list of connector
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of connector deployments assigned to the cluster.
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}:
    get:
      operationId: getClusterAsignedConnectorDeploymentById
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the deployment
        explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeployment'
          description: A connector deployment
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of connector deployments assigned to the cluster.
      tags:
      - Connector Clusters Agent
  /api/connector_mgmt/v1/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}/status:
    put:
      operationId: updateConnectorDeploymentStatus
      parameters:
      - description: The id of the connector cluster
        explode: false
        in: path
        name: connector_cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the deployment
        explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorDeploymentStatus'
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: update the connector deployment status
      tags:
      - Connector Clusters Agent
  /api/kafkas_mgmt/v1/agent_clusters/{id}/status:
    put:
      operationId: updateAgentClusterStatus
      parameters:
      - description: The id of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'
        description: Cluster status update data
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of an agent cluster
      tags:
      - Agent Clusters
  /api/kafkas_mgmt/v1/agent_clusters/{id}/kafkas/status:
    put:
      operationId: updateKafkaClusterStatus
      parameters:
      - description: The id of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneKafkaStatusUpdateRequest'
        description: Kafka clusters status update data
        required: true
      responses:
        "200":
          description: Status is updated for Kafka clusters
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of Kafka clusters on an agent cluster
      tags:
      - Agent Clusters
  /api/kafkas_mgmt/v1/agent_clusters/{id}/kafkas:
    get:
      operationId: getKafkas
      parameters:
      - description: The id of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedKafkaList'
          description: The list of the ManagedKafkas for the specified agent cluster
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the list of ManagedaKafkas for the specified agent cluster
      tags:
      - Agent Clusters
  /api/kafkas_mgmt/v1/agent_clusters/{id}:
    get:
      operationId: getKafkaAgent
      parameters:
      - description: The id of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataplaneClusterAgentConfig'
          description: The ManagedKafkaAgent CR Spec
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the spec of the ManagedKafkaAgent CR spec
      tags:
      - Agent Clusters
components:
  examples:
    ManagedKafkaExample:
      value:
        kind: ManagedKafka
        metadata:
          name: example-kafka
          namespace: example-kafka-1rfpsqbvq1em2u9u0z54ymjcwac
          annotations:
            id: 1rfpsqbvq1em2u9u0z54ymjcwac
            placement_id: ""
        spec:
          capacity:
            ingress_egress_throughput_per_sec: 4Mi
            total_max_connections: 500
            max_data_retention_size: 100Gi
            max_partitions: 100
            max_data_retention_period: P14D
            max_connection_attempts_per_sec: 100
          oauth:
            client_id: kafka-1rfpsqbvq1em2u9u0z54ymjcwac
            client_secret: example-client-secret
            token_endpoint_uri: https://example-token-endpoint-uri.com/token
            jwks_endpoint_uri: https://example-jwks-endpoint-uri.com/certs
            valid_issuer_endpoint_uri: https://issuer-endpoint-uri.com
            user_name_claim: username
            tls_trusted_certificate: ""
            custom_claim_check: ""
          endpoint:
            bootstrap_server_host: example-kafka--rfpsqbvq-em-u-u-z--ymjcwac.kafka.devshift.org
            tls:
              cert: ""
              key: ""
          versions:
            kafka: 2.7.0
            strimzi: 0.21.2
          deleted: false
    DataPlaneKafkaStatusRequestExample:
      value:
        conditions:
        - type: Ready
          reason: KafkaInstanceReady
          message: installing
          status: "False"
          last_transition_time: 2018-01-01T00:00:00Z
        capacity:
          ingress_egress_throughput_per_sec: 4Mi
          total_maxConnections: 500
          max_data_retention_size: 100Gi
          max_partitions: 100
          max_data_retention_period: P14D
          max_connection_attempts_per_sec: 100
        versions:
          kafka: 2.4.1
          strimzi: 0.21.2
    "400InvalidIdExample":
      value:
        id: "203"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/21
        code: KAFKAS-MGMT-21
        reason: Bad request
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "404"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/7
        code: KAFKAS-MGMT-7
        reason: The requested resource doesn't exist
    "401Example":
      value:
        id: "11"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/11
        code: KAFKAS-MGMT-11
        reason: 'Unable to verify JWT token: Required authorization token not found'
        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD
    "500Example":
      value:
        id: "9"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/9
        code: KAFKAS-MGMT-9
        reason: Unspecified error
        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW
  schemas:
    ListReference:
      properties:
        kind:
          type: string
      required:
      - items
      - kind
      type: object
    PrivateObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
      type: object
    MetaV1Condition:
      example:
        reason: reason
        last_transition_time: last_transition_time
        type: type
        message: message
        lastTransitionTime: lastTransitionTime
        status: status
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
        lastTransitionTime:
          deprecated: true
          type: string
        last_transition_time:
          type: string
      type: object
    ManagedKafkaCapacity:
      properties:
        ingressEgressThroughputPerSec:
          deprecated: true
          type: string
        totalMaxConnections:
          deprecated: true
          format: int
          type: integer
        maxDataRetentionSize:
          deprecated: true
          type: string
        maxPartitions:
          deprecated: true
          format: int
          type: integer
        maxDataRetentionPeriod:
          deprecated: true
          type: string
        maxConnectionAttemptsPerSec:
          deprecated: true
          format: int
          type: integer
        ingress_egress_throughput_per_sec:
          type: string
        total_max_connections:
          format: int
          type: integer
        max_data_retention_size:
          type: string
        max_partitions:
          format: int
          type: integer
        max_data_retention_period:
          type: string
        max_connection_attempts_per_sec:
          format: int
          type: integer
      type: object
    ManagedKafkaVersions:
      properties:
        kafka:
          type: string
        strimzi:
          type: string
      type: object
    ManagedKafka:
      allOf:
      - $ref: '#/components/schemas/PrivateObjectReference'
      - $ref: '#/components/schemas/ManagedKafka_allOf'
    ManagedKafkaList:
      allOf:
      - $ref: '#/components/schemas/ListReference'
      - $ref: '#/components/schemas/ManagedKafkaList_allOf'
      description: A list of ManagedKafka
    WatchEvent:
      properties:
        type:
          type: string
        error:
          $ref: '#/components/schemas/Error'
        object:
          nullable: true
          type: object
      required:
      - type
      type: object
    ConnectorDeployment:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/ConnectorDeployment_allOf'
      description: Holds the deployment configuration of a connector
    ConnectorDeploymentSpec:
      description: Holds the deployment specification of a connector
      properties:
        shard_metadata:
          type: object
        connector_id:
          type: string
        allow_upgrade:
          description: allow the connector to upgrade to a new operator
          type: boolean
        connector_resource_version:
          format: int64
          type: integer
        kafka_id:
          type: string
        kafka:
          $ref: '#/components/schemas/KafkaConnectionSettings'
        connector_type_id:
          type: string
        connector_spec:
          type: object
        desired_state:
          type: string
      type: object
    ConnectorDeploymentStatus:
      description: The status of connector deployment
      example:
        phase: phase
        conditions:
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          lastTransitionTime: lastTransitionTime
          status: status
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          lastTransitionTime: lastTransitionTime
          status: status
        resource_version: 0
        available_upgrades: available_upgrades
      properties:
        phase:
          type: string
        resource_version:
          format: int64
          type: integer
        available_upgrades:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/MetaV1Condition'
          type: array
      type: object
    ConnectorDeploymentList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ConnectorDeploymentList_allOf'
    ConnectorDeploymentWatchEvent:
      allOf:
      - $ref: '#/components/schemas/WatchEvent'
      - $ref: '#/components/schemas/ConnectorDeploymentWatchEvent_allOf'
    ConnectorClusterStatus:
      description: Schema for the request to update a data plane cluster's status
      example:
        phase: phase
        operators:
        - namespace: namespace
          id: id
          version: version
          status: status
        - namespace: namespace
          id: id
          version: version
          status: status
        conditions:
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          lastTransitionTime: lastTransitionTime
          status: status
        - reason: reason
          last_transition_time: last_transition_time
          type: type
          message: message
          lastTransitionTime: lastTransitionTime
          status: status
        version: version
      properties:
        phase:
          type: string
        version:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/MetaV1Condition'
          type: array
        operators:
          description: the list of installed operators
          items:
            $ref: '#/components/schemas/ConnectorClusterStatus_operators'
          type: array
      type: object
    DatePlaneClusterUpdateStatusRequestDeprecatedNodeInfo:
      deprecated: true
      example:
        ceiling: 1
        current: 5
        currentWorkLoadMinimum: 2
        floor: 5
      nullable: true
      properties:
        ceiling:
          nullable: true
          type: integer
        floor:
          nullable: true
          type: integer
        current:
          nullable: true
          type: integer
        currentWorkLoadMinimum:
          deprecated: true
          nullable: true
          type: integer
      type: object
    DatePlaneClusterUpdateStatusRequestDeprecatedResizeInfo:
      deprecated: true
      example:
        nodeDelta: 4
        delta:
          partitions: 1
          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
          connections: 7
          dataRetentionSize: dataRetentionSize
      nullable: true
      properties:
        nodeDelta:
          deprecated: true
          nullable: true
          type: integer
        delta:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestDeprecatedResizeInfo_delta'
      type: object
    DataPlaneClusterUpdateStatusRequest:
      description: Schema for the request to update a data plane cluster's status
      example:
        resize_info:
          delta:
            partitions: 6
            ingress_egress_throughput_per_sec: ingress_egress_throughput_per_sec
            data_retention_size: data_retention_size
            connections: 1
          node_delta: 1
        total:
          partitions: 6
          ingress_egress_throughput_per_sec: ingress_egress_throughput_per_sec
          data_retention_size: data_retention_size
          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
          connections: 0
          dataRetentionSize: dataRetentionSize
        node_info:
          ceiling: 7
          current_work_load_minimum: 2
          current: 3
          floor: 9
        resizeInfo:
          nodeDelta: 4
          delta:
            partitions: 1
            ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
            connections: 7
            dataRetentionSize: dataRetentionSize
        nodeInfo:
          ceiling: 1
          current: 5
          currentWorkLoadMinimum: 2
          floor: 5
        conditions:
        - reason: reason
          type: type
          message: message
          status: status
        - reason: reason
          type: type
          message: message
          status: status
        remaining:
          partitions: 6
          ingress_egress_throughput_per_sec: ingress_egress_throughput_per_sec
          data_retention_size: data_retention_size
          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
          connections: 0
          dataRetentionSize: dataRetentionSize
      properties:
        conditions:
          description: The cluster data plane conditions
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'
          type: array
        total:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_total'
        remaining:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_total'
        nodeInfo:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestDeprecatedNodeInfo'
        node_info:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_node_info'
        resizeInfo:
          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestDeprecatedResizeInfo'
        resize_info:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_resize_info'
      type: object
    DataPlaneKafkaStatus:
      description: Schema of the status object for a Kafka cluster
      example:
        $ref: '#/components/examples/DataPlaneKafkaStatusRequestExample'
      properties:
        conditions:
          description: The status conditions of a Kafka cluster
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'
          type: array
        capacity:
          $ref: '#/components/schemas/DataPlaneKafkaStatus_capacity'
        versions:
          $ref: '#/components/schemas/DataPlaneKafkaStatus_versions'
      type: object
    DataPlaneKafkaStatusUpdateRequest:
      additionalProperties:
        $ref: '#/components/schemas/DataPlaneKafkaStatus'
      description: Schema for the request to update the statuses of Kafka clusters
        from data plane
      type: object
    DataplaneClusterAgentConfig:
      description: Configuration for the data plane cluster agent
      example:
        spec:
          observability:
            access_token: access_token
            channel: channel
            tag: tag
            accessToken: accessToken
            repository: repository
      properties:
        spec:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec'
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    KafkaConnectionSettings:
      properties:
        bootstrap_server:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
    List:
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
      - items
      - kind
      - page
      - size
      - total
      type: object
    ManagedKafka_allOf_metadata_annotations:
      properties:
        bf2.org/id:
          deprecated: true
          type: string
        bf2.org/placementId:
          deprecated: true
          type: string
        id:
          type: string
        placement_id:
          type: string
      required:
      - id
      - placement_id
    ManagedKafka_allOf_metadata:
      properties:
        name:
          type: string
        namespace:
          type: string
        annotations:
          $ref: '#/components/schemas/ManagedKafka_allOf_metadata_annotations'
    ManagedKafka_allOf_spec_oauth:
      properties:
        clientId:
          deprecated: true
          type: string
        clientSecret:
          deprecated: true
          type: string
        tokenEndpointURI:
          deprecated: true
          type: string
        jwksEndpointURI:
          deprecated: true
          type: string
        validIssuerEndpointURI:
          deprecated: true
          type: string
        userNameClaim:
          deprecated: true
          type: string
        tlsTrustedCertificate:
          deprecated: true
          type: string
        customClaimCheck:
          deprecated: true
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_uri:
          type: string
        jwks_endpoint_uri:
          type: string
        valid_issuer_endpoint_uri:
          type: string
        user_name_claim:
          type: string
        tls_trusted_certificate:
          type: string
        custom_claim_check:
          type: string
    ManagedKafka_allOf_spec_endpoint_tls:
      properties:
        cert:
          type: string
        key:
          type: string
    ManagedKafka_allOf_spec_endpoint:
      properties:
        bootstrapServerHost:
          deprecated: true
          type: string
        bootstrap_server_host:
          type: string
        tls:
          $ref: '#/components/schemas/ManagedKafka_allOf_spec_endpoint_tls'
    ManagedKafka_allOf_spec:
      properties:
        capacity:
          $ref: '#/components/schemas/ManagedKafkaCapacity'
        oauth:
          $ref: '#/components/schemas/ManagedKafka_allOf_spec_oauth'
        endpoint:
          $ref: '#/components/schemas/ManagedKafka_allOf_spec_endpoint'
        versions:
          $ref: '#/components/schemas/ManagedKafkaVersions'
        deleted:
          type: boolean
      required:
      - deleted
    ManagedKafka_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ManagedKafka_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ManagedKafka_allOf_spec'
    ManagedKafkaList_allOf:
      example: '{"kind":"ManagedKafkaList","items":{"$ref":"#/components/examples/ManagedKafkaExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ManagedKafka'
          type: array
    ConnectorDeployment_allOf_metadata:
      properties:
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        resource_version:
          format: int64
          type: integer
    ConnectorDeployment_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ConnectorDeployment_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ConnectorDeploymentSpec'
        status:
          $ref: '#/components/schemas/ConnectorDeploymentStatus'
    ConnectorDeploymentList_allOf:
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ConnectorDeployment'
          type: array
    ConnectorDeploymentWatchEvent_allOf:
      properties:
        object:
          $ref: '#/components/schemas/ConnectorDeployment'
    ConnectorClusterStatus_operators:
      example:
        namespace: namespace
        id: id
        version: version
        status: status
      properties:
        id:
          description: the id of the operator
          type: string
        version:
          description: the version of the operator
          type: string
        namespace:
          description: the namespace to which the operator has been installed
          type: string
        status:
          description: the status of the operator
          type: string
    DatePlaneClusterUpdateStatusRequestDeprecatedResizeInfo_delta:
      example:
        partitions: 1
        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
        connections: 7
        dataRetentionSize: dataRetentionSize
      nullable: true
      properties:
        ingressEgressThroughputPerSec:
          deprecated: true
          nullable: true
          type: string
        connections:
          nullable: true
          type: integer
        dataRetentionSize:
          deprecated: true
          nullable: true
          type: string
        partitions:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_conditions:
      example:
        reason: reason
        type: type
        message: message
        status: status
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
    DataPlaneClusterUpdateStatusRequest_total:
      example:
        partitions: 6
        ingress_egress_throughput_per_sec: ingress_egress_throughput_per_sec
        data_retention_size: data_retention_size
        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec
        connections: 0
        dataRetentionSize: dataRetentionSize
      properties:
        ingressEgressThroughputPerSec:
          deprecated: true
          nullable: true
          type: string
        ingress_egress_throughput_per_sec:
          nullable: true
          type: string
        connections:
          nullable: true
          type: integer
        dataRetentionSize:
          deprecated: true
          nullable: true
          type: string
        data_retention_size:
          nullable: true
          type: string
        partitions:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_node_info:
      example:
        ceiling: 7
        current_work_load_minimum: 2
        current: 3
        floor: 9
      nullable: true
      properties:
        ceiling:
          nullable: true
          type: integer
        floor:
          nullable: true
          type: integer
        current:
          nullable: true
          type: integer
        current_work_load_minimum:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_resize_info_delta:
      example:
        partitions: 6
        ingress_egress_throughput_per_sec: ingress_egress_throughput_per_sec
        data_retention_size: data_retention_size
        connections: 1
      nullable: true
      properties:
        ingress_egress_throughput_per_sec:
          nullable: true
          type: string
        connections:
          nullable: true
          type: integer
        data_retention_size:
          nullable: true
          type: string
        partitions:
          nullable: true
          type: integer
    DataPlaneClusterUpdateStatusRequest_resize_info:
      example:
        delta:
          partitions: 6
          ingress_egress_throughput_per_sec: ingress_egress_throughput_per_sec
          data_retention_size: data_retention_size
          connections: 1
        node_delta: 1
      nullable: true
      properties:
        node_delta:
          nullable: true
          type: integer
        delta:
          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_resize_info_delta'
    DataPlaneKafkaStatus_capacity:
      description: Capacity information of the data plane cluster
      properties:
        ingressEgressThroughputPerSec:
          deprecated: true
          nullable: true
          type: string
        totalMaxConnections:
          deprecated: true
          nullable: true
          type: integer
        maxDataRetentionSize:
          deprecated: true
          nullable: true
          type: string
        maxPartitions:
          deprecated: true
          nullable: true
          type: integer
        maxDataRetentionPeriod:
          deprecated: true
          nullable: true
          type: string
        maxConnectionAttemptsPerSec:
          deprecated: true
          nullable: true
          type: integer
        ingress_egress_throughput_per_sec:
          nullable: true
          type: string
        total_max_connections:
          nullable: true
          type: integer
        max_data_retention_size:
          nullable: true
          type: string
        max_partitions:
          nullable: true
          type: integer
        max_data_retention_period:
          nullable: true
          type: string
        max_connection_attempts_per_sec:
          nullable: true
          type: integer
    DataPlaneKafkaStatus_versions:
      description: Version information related to a Kafka cluster
      properties:
        kafka:
          type: string
        strimzi:
          type: string
    DataplaneClusterAgentConfig_spec_observability:
      description: Observability configurations
      example:
        access_token: access_token
        channel: channel
        tag: tag
        accessToken: accessToken
        repository: repository
      properties:
        accessToken:
          deprecated: true
          nullable: true
          type: string
        access_token:
          nullable: true
          type: string
        channel:
          type: string
        repository:
          type: string
        tag:
          type: string
    DataplaneClusterAgentConfig_spec:
      description: Data plane cluster agent spec
      example:
        observability:
          access_token: access_token
          channel: channel
          tag: tag
          accessToken: accessToken
          repository: repository
      properties:
        observability:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec_observability'
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http

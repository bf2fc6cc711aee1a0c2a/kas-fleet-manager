openapi: 3.0.0
info:
  description: Managed Service API
  title: Managed Service API
  version: 0.0.1
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: current domain
  url: /
paths:
  /api/managed-services-api/v1/kafkas/{id}:
    delete:
      parameters:
      - description: The id of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized to perform operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No kafka request with specified id exists
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Delete a kafka request by id
    get:
      parameters:
      - description: The id of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaRequest'
          description: Kafka request found by id
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized to perform operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No kafka request with specified id exists
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Get a kafka request by id
  /api/managed-services-api/v1/kafkas:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaRequest'
        description: Kafka data
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaRequest'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized to perform operation
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Kafka already exists
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An unexpected error occurred creating the Kafka Request
      security:
      - Bearer: []
      summary: Create a new kafka Request
components:
  parameters:
    id:
      description: The id of record
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
  schemas:
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    List:
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
      - items
      - kind
      - page
      - size
      - total
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ErrorList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ErrorList_allOf'
    KafkaRequest:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/KafkaRequest_allOf'
    KafkaRequestList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/KafkaRequestList_allOf'
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
    ErrorList_allOf:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Error'
          type: array
    KafkaRequest_allOf:
      properties:
        clusterID:
          type: string
        status:
          type: string
        cloud_provider:
          type: string
        multi_az:
          type: boolean
        region:
          type: string
        owner:
          type: string
        name:
          type: string
        bootstrapServerHost:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
    KafkaRequestList_allOf:
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/KafkaRequest'
          type: array
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http

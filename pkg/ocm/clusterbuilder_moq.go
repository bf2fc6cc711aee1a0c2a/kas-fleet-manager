// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package ocm

import (
	"github.com/openshift-online/ocm-sdk-go/clustersmgmt/v1"
	"gitlab.cee.redhat.com/service/managed-services-api/pkg/api"
	"sync"
)

// Ensure, that ClusterBuilderMock does implement ClusterBuilder.
// If this is not the case, regenerate this file with moq.
var _ ClusterBuilder = &ClusterBuilderMock{}

// ClusterBuilderMock is a mock implementation of ClusterBuilder.
//
//     func TestSomethingThatUsesClusterBuilder(t *testing.T) {
//
//         // make and configure a mocked ClusterBuilder
//         mockedClusterBuilder := &ClusterBuilderMock{
//             NewOCMClusterFromClusterFunc: func(cluster *api.Cluster) (*v1.Cluster, error) {
// 	               panic("mock out the NewOCMClusterFromCluster method")
//             },
//         }
//
//         // use mockedClusterBuilder in code that requires ClusterBuilder
//         // and then make assertions.
//
//     }
type ClusterBuilderMock struct {
	// NewOCMClusterFromClusterFunc mocks the NewOCMClusterFromCluster method.
	NewOCMClusterFromClusterFunc func(cluster *api.Cluster) (*v1.Cluster, error)

	// calls tracks calls to the methods.
	calls struct {
		// NewOCMClusterFromCluster holds details about calls to the NewOCMClusterFromCluster method.
		NewOCMClusterFromCluster []struct {
			// Cluster is the cluster argument value.
			Cluster *api.Cluster
		}
	}
	lockNewOCMClusterFromCluster sync.RWMutex
}

// NewOCMClusterFromCluster calls NewOCMClusterFromClusterFunc.
func (mock *ClusterBuilderMock) NewOCMClusterFromCluster(cluster *api.Cluster) (*v1.Cluster, error) {
	if mock.NewOCMClusterFromClusterFunc == nil {
		panic("ClusterBuilderMock.NewOCMClusterFromClusterFunc: method is nil but ClusterBuilder.NewOCMClusterFromCluster was just called")
	}
	callInfo := struct {
		Cluster *api.Cluster
	}{
		Cluster: cluster,
	}
	mock.lockNewOCMClusterFromCluster.Lock()
	mock.calls.NewOCMClusterFromCluster = append(mock.calls.NewOCMClusterFromCluster, callInfo)
	mock.lockNewOCMClusterFromCluster.Unlock()
	return mock.NewOCMClusterFromClusterFunc(cluster)
}

// NewOCMClusterFromClusterCalls gets all the calls that were made to NewOCMClusterFromCluster.
// Check the length with:
//     len(mockedClusterBuilder.NewOCMClusterFromClusterCalls())
func (mock *ClusterBuilderMock) NewOCMClusterFromClusterCalls() []struct {
	Cluster *api.Cluster
} {
	var calls []struct {
		Cluster *api.Cluster
	}
	mock.lockNewOCMClusterFromCluster.RLock()
	calls = mock.calls.NewOCMClusterFromCluster
	mock.lockNewOCMClusterFromCluster.RUnlock()
	return calls
}

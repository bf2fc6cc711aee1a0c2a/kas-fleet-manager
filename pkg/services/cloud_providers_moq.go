// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package services

import (
	"github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/pkg/api"
	apiErrors "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/pkg/errors"
	"sync"
)

// Ensure, that CloudProvidersServiceMock does implement CloudProvidersService.
// If this is not the case, regenerate this file with moq.
var _ CloudProvidersService = &CloudProvidersServiceMock{}

// CloudProvidersServiceMock is a mock implementation of CloudProvidersService.
//
// 	func TestSomethingThatUsesCloudProvidersService(t *testing.T) {
//
// 		// make and configure a mocked CloudProvidersService
// 		mockedCloudProvidersService := &CloudProvidersServiceMock{
// 			GetCloudProvidersWithRegionsFunc: func() ([]CloudProviderWithRegions, error) {
// 				panic("mock out the GetCloudProvidersWithRegions method")
// 			},
// 			ListCloudProviderRegionsFunc: func(id string) ([]api.CloudRegion, *apiErrors.ServiceError) {
// 				panic("mock out the ListCloudProviderRegions method")
// 			},
// 			ListCloudProvidersFunc: func() ([]api.CloudProvider, *apiErrors.ServiceError) {
// 				panic("mock out the ListCloudProviders method")
// 			},
// 		}
//
// 		// use mockedCloudProvidersService in code that requires CloudProvidersService
// 		// and then make assertions.
//
// 	}
type CloudProvidersServiceMock struct {
	// GetCloudProvidersWithRegionsFunc mocks the GetCloudProvidersWithRegions method.
	GetCloudProvidersWithRegionsFunc func() ([]CloudProviderWithRegions, error)

	// ListCloudProviderRegionsFunc mocks the ListCloudProviderRegions method.
	ListCloudProviderRegionsFunc func(id string) ([]api.CloudRegion, *apiErrors.ServiceError)

	// ListCloudProvidersFunc mocks the ListCloudProviders method.
	ListCloudProvidersFunc func() ([]api.CloudProvider, *apiErrors.ServiceError)

	// calls tracks calls to the methods.
	calls struct {
		// GetCloudProvidersWithRegions holds details about calls to the GetCloudProvidersWithRegions method.
		GetCloudProvidersWithRegions []struct {
		}
		// ListCloudProviderRegions holds details about calls to the ListCloudProviderRegions method.
		ListCloudProviderRegions []struct {
			// ID is the id argument value.
			ID string
		}
		// ListCloudProviders holds details about calls to the ListCloudProviders method.
		ListCloudProviders []struct {
		}
	}
	lockGetCloudProvidersWithRegions sync.RWMutex
	lockListCloudProviderRegions     sync.RWMutex
	lockListCloudProviders           sync.RWMutex
}

// GetCloudProvidersWithRegions calls GetCloudProvidersWithRegionsFunc.
func (mock *CloudProvidersServiceMock) GetCloudProvidersWithRegions() ([]CloudProviderWithRegions, error) {
	if mock.GetCloudProvidersWithRegionsFunc == nil {
		panic("CloudProvidersServiceMock.GetCloudProvidersWithRegionsFunc: method is nil but CloudProvidersService.GetCloudProvidersWithRegions was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetCloudProvidersWithRegions.Lock()
	mock.calls.GetCloudProvidersWithRegions = append(mock.calls.GetCloudProvidersWithRegions, callInfo)
	mock.lockGetCloudProvidersWithRegions.Unlock()
	return mock.GetCloudProvidersWithRegionsFunc()
}

// GetCloudProvidersWithRegionsCalls gets all the calls that were made to GetCloudProvidersWithRegions.
// Check the length with:
//     len(mockedCloudProvidersService.GetCloudProvidersWithRegionsCalls())
func (mock *CloudProvidersServiceMock) GetCloudProvidersWithRegionsCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetCloudProvidersWithRegions.RLock()
	calls = mock.calls.GetCloudProvidersWithRegions
	mock.lockGetCloudProvidersWithRegions.RUnlock()
	return calls
}

// ListCloudProviderRegions calls ListCloudProviderRegionsFunc.
func (mock *CloudProvidersServiceMock) ListCloudProviderRegions(id string) ([]api.CloudRegion, *apiErrors.ServiceError) {
	if mock.ListCloudProviderRegionsFunc == nil {
		panic("CloudProvidersServiceMock.ListCloudProviderRegionsFunc: method is nil but CloudProvidersService.ListCloudProviderRegions was just called")
	}
	callInfo := struct {
		ID string
	}{
		ID: id,
	}
	mock.lockListCloudProviderRegions.Lock()
	mock.calls.ListCloudProviderRegions = append(mock.calls.ListCloudProviderRegions, callInfo)
	mock.lockListCloudProviderRegions.Unlock()
	return mock.ListCloudProviderRegionsFunc(id)
}

// ListCloudProviderRegionsCalls gets all the calls that were made to ListCloudProviderRegions.
// Check the length with:
//     len(mockedCloudProvidersService.ListCloudProviderRegionsCalls())
func (mock *CloudProvidersServiceMock) ListCloudProviderRegionsCalls() []struct {
	ID string
} {
	var calls []struct {
		ID string
	}
	mock.lockListCloudProviderRegions.RLock()
	calls = mock.calls.ListCloudProviderRegions
	mock.lockListCloudProviderRegions.RUnlock()
	return calls
}

// ListCloudProviders calls ListCloudProvidersFunc.
func (mock *CloudProvidersServiceMock) ListCloudProviders() ([]api.CloudProvider, *apiErrors.ServiceError) {
	if mock.ListCloudProvidersFunc == nil {
		panic("CloudProvidersServiceMock.ListCloudProvidersFunc: method is nil but CloudProvidersService.ListCloudProviders was just called")
	}
	callInfo := struct {
	}{}
	mock.lockListCloudProviders.Lock()
	mock.calls.ListCloudProviders = append(mock.calls.ListCloudProviders, callInfo)
	mock.lockListCloudProviders.Unlock()
	return mock.ListCloudProvidersFunc()
}

// ListCloudProvidersCalls gets all the calls that were made to ListCloudProviders.
// Check the length with:
//     len(mockedCloudProvidersService.ListCloudProvidersCalls())
func (mock *CloudProvidersServiceMock) ListCloudProvidersCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockListCloudProviders.RLock()
	calls = mock.calls.ListCloudProviders
	mock.lockListCloudProviders.RUnlock()
	return calls
}

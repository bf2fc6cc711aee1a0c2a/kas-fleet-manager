// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package services

import (
	"sync"
)

// Ensure, that CloudProvidersServiceMock does implement CloudProvidersService.
// If this is not the case, regenerate this file with moq.
var _ CloudProvidersService = &CloudProvidersServiceMock{}

// CloudProvidersServiceMock is a mock implementation of CloudProvidersService.
//
//     func TestSomethingThatUsesCloudProvidersService(t *testing.T) {
//
//         // make and configure a mocked CloudProvidersService
//         mockedCloudProvidersService := &CloudProvidersServiceMock{
//             GetCloudProvidersWithRegionsFunc: func() ([]CloudProviderWithRegions, error) {
// 	               panic("mock out the GetCloudProvidersWithRegions method")
//             },
//         }
//
//         // use mockedCloudProvidersService in code that requires CloudProvidersService
//         // and then make assertions.
//
//     }
type CloudProvidersServiceMock struct {
	// GetCloudProvidersWithRegionsFunc mocks the GetCloudProvidersWithRegions method.
	GetCloudProvidersWithRegionsFunc func() ([]CloudProviderWithRegions, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetCloudProvidersWithRegions holds details about calls to the GetCloudProvidersWithRegions method.
		GetCloudProvidersWithRegions []struct {
		}
	}
	lockGetCloudProvidersWithRegions sync.RWMutex
}

// GetCloudProvidersWithRegions calls GetCloudProvidersWithRegionsFunc.
func (mock *CloudProvidersServiceMock) GetCloudProvidersWithRegions() ([]CloudProviderWithRegions, error) {
	if mock.GetCloudProvidersWithRegionsFunc == nil {
		panic("CloudProvidersServiceMock.GetCloudProvidersWithRegionsFunc: method is nil but CloudProvidersService.GetCloudProvidersWithRegions was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetCloudProvidersWithRegions.Lock()
	mock.calls.GetCloudProvidersWithRegions = append(mock.calls.GetCloudProvidersWithRegions, callInfo)
	mock.lockGetCloudProvidersWithRegions.Unlock()
	return mock.GetCloudProvidersWithRegionsFunc()
}

// GetCloudProvidersWithRegionsCalls gets all the calls that were made to GetCloudProvidersWithRegions.
// Check the length with:
//     len(mockedCloudProvidersService.GetCloudProvidersWithRegionsCalls())
func (mock *CloudProvidersServiceMock) GetCloudProvidersWithRegionsCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetCloudProvidersWithRegions.RLock()
	calls = mock.calls.GetCloudProvidersWithRegions
	mock.lockGetCloudProvidersWithRegions.RUnlock()
	return calls
}

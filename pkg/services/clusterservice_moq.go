// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package services

import (
	"github.com/openshift-online/ocm-sdk-go/clustersmgmt/v1"
	"gitlab.cee.redhat.com/service/managed-services-api/pkg/api"
	"gitlab.cee.redhat.com/service/managed-services-api/pkg/errors"
	"sync"
)

var (
	lockClusterServiceMockCreate sync.RWMutex
)

// Ensure, that ClusterServiceMock does implement ClusterService.
// If this is not the case, regenerate this file with moq.
var _ ClusterService = &ClusterServiceMock{}

// ClusterServiceMock is a mock implementation of ClusterService.
//
//     func TestSomethingThatUsesClusterService(t *testing.T) {
//
//         // make and configure a mocked ClusterService
//         mockedClusterService := &ClusterServiceMock{
//             CreateFunc: func(cluster *api.Cluster) (*v1.Cluster, *errors.ServiceError) {
// 	               panic("mock out the Create method")
//             },
//         }
//
//         // use mockedClusterService in code that requires ClusterService
//         // and then make assertions.
//
//     }
type ClusterServiceMock struct {
	// CreateFunc mocks the Create method.
	CreateFunc func(cluster *api.Cluster) (*v1.Cluster, *errors.ServiceError)

	// calls tracks calls to the methods.
	calls struct {
		// Create holds details about calls to the Create method.
		Create []struct {
			// Cluster is the cluster argument value.
			Cluster *api.Cluster
		}
	}
}

// Create calls CreateFunc.
func (mock *ClusterServiceMock) Create(cluster *api.Cluster) (*v1.Cluster, *errors.ServiceError) {
	if mock.CreateFunc == nil {
		panic("ClusterServiceMock.CreateFunc: method is nil but ClusterService.Create was just called")
	}
	callInfo := struct {
		Cluster *api.Cluster
	}{
		Cluster: cluster,
	}
	lockClusterServiceMockCreate.Lock()
	mock.calls.Create = append(mock.calls.Create, callInfo)
	lockClusterServiceMockCreate.Unlock()
	return mock.CreateFunc(cluster)
}

// CreateCalls gets all the calls that were made to Create.
// Check the length with:
//     len(mockedClusterService.CreateCalls())
func (mock *ClusterServiceMock) CreateCalls() []struct {
	Cluster *api.Cluster
} {
	var calls []struct {
		Cluster *api.Cluster
	}
	lockClusterServiceMockCreate.RLock()
	calls = mock.calls.Create
	lockClusterServiceMockCreate.RUnlock()
	return calls
}
